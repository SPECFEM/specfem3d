#=====================================================================
#
#               S p e c f e m 3 D  V e r s i o n  1 . 4
#               ---------------------------------------
#
#                 Dimitri Komatitsch and Jeroen Tromp
#    Seismological Laboratory - California Institute of Technology
#         (c) California Institute of Technology July 2005
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
#
#=====================================================================
#
# United States Government Sponsorship Acknowledged.
#

# @configure_input@

FC = @FC@
FCFLAGS = #@FCFLAGS@
MPIFC = @MPIFC@
MPILIBS = @MPILIBS@
FLAGS_CHECK = @FLAGS_CHECK@
FLAGS_NO_CHECK = @FLAGS_NO_CHECK@
FCFLAGS_f90 = @FCFLAGS_f90@

FCCOMPILE_CHECK =@FCENV@ ${FC} ${FCFLAGS} $(FLAGS_CHECK)
FCCOMPILE_NO_CHECK =@FCENV@ ${FC} ${FCFLAGS} $(FLAGS_NO_CHECK)
MPIFCCOMPILE_CHECK =@FCENV@ ${MPIFC} ${FCFLAGS} $(FLAGS_CHECK)
MPIFCCOMPILE_NO_CHECK =@FCENV@ ${MPIFC} ${FCFLAGS} $(FLAGS_NO_CHECK)
@COND_MPI_TRUE@FCLINK = $(MPIFCCOMPILE_NO_CHECK)
@COND_MPI_FALSE@FCLINK = $(FCCOMPILE_NO_CHECK)

CC = @CC@
CFLAGS = @CFLAGS@ $(CPPFLAGS)
CPPFLAGS = @CPPFLAGS@ $(COND_MPI_CPPFLAGS)
@COND_MPI_TRUE@COND_MPI_CPPFLAGS = -DWITH_MPI
@COND_MPI_FALSE@COND_MPI_CPPFLAGS =

AR = ar
ARFLAGS = cru
RANLIB = ranlib

O = obj

libspecfem_a_OBJECTS = \
	$O/aniso_model.o \
	$O/calc_jacobian.o \
	$O/comp_source_time_function.o \
	$O/compute_arrays_source.o \
	$O/compute_parameters.o \
	$O/compute_rho_estimate.o \
	$O/create_header_file.o \
	$O/create_name_database.o \
	$O/create_regions_mesh.o \
	$O/create_serial_name_database.o \
	$O/define_derivation_matrices.o \
	$O/define_subregions.o \
	$O/define_subregions_heuristic.o \
	$O/exit_mpi.o \
	$O/get_MPI_cutplanes_eta.o \
	$O/get_MPI_cutplanes_xi.o \
	$O/get_absorb.o \
	$O/get_attenuation_model.o \
	$O/get_cmt.o \
	$O/get_flags_boundaries.o \
	$O/get_global.o \
	$O/get_jacobian_boundaries.o \
	$O/get_shape2D.o \
	$O/get_shape3D.o \
	$O/get_value_parameters.o \
	$O/gll_library.o \
	$O/hauksson_model.o \
	$O/hex_nodes.o \
	$O/interpolate_gocad_block_HR.o \
	$O/interpolate_gocad_block_MR.o \
	$O/lagrange_poly.o \
	$O/locate_receivers.o \
	$O/locate_source.o \
	$O/mesh_vertical.o \
	$O/generate_databases.o \
	$O/netlib_specfun_erf.o \
	$O/read_arrays_buffers_solver.o \
	$O/read_topo_bathy_file.o \
	$O/read_moho_map.o \
	$O/read_parameter_file.o \
	$O/read_value_parameters.o \
	$O/recompute_jacobian.o \
	$O/salton_trough_gocad.o \
	$O/save_arrays_solver.o \
	$O/save_header_file.o \
	$O/socal_model.o \
	$O/sort_array_coordinates.o \
	$O/utm_geo.o \
	$O/write_AVS_DX_global_data.o \
	$O/write_AVS_DX_global_faces_data.o \
	$O/write_AVS_DX_surface_data.o \
	$O/write_seismograms.o \
	$O/compute_boundary_kernel.o \
	$O/memory_eval.o \
	$(EMPTY_MACRO)

# solver objects with statically allocated arrays; dependent upon
# values_from_mesher.h
#daniel: added files
SOLVER_ARRAY_OBJECTS = \
	$O/assemble_MPI_scalar.o \
	$O/assemble_MPI_vector.o \
	$O/read_arrays_solver.o \
	$O/compute_forces_no_Deville.o \
	$O/compute_forces_with_Deville.o \
	$O/specfem3D_par.o \
	$O/specfem3D.o \
	$O/initialize_simulation.o \
	$O/read_mesh_databases.o \
	$O/setup_GLL_points.o \
	$O/detect_mesh_surfaces.o \
	$O/setup_movie_meshes.o \
	$O/read_topography_bathymetry.o \
	$O/setup_sources_receivers.o \
	$O/prepare_timerun.o \
	$O/iterate_time.o \
	$O/finalize_simulation.o \
	$(EMPTY_MACRO)

# objects toggled between the parallel and serial version
@COND_MPI_TRUE@COND_MPI_OBJECTS = $O/parallel.o
@COND_MPI_FALSE@COND_MPI_OBJECTS = $O/serial.o

LIBSPECFEM = $O/libspecfem.a

# objects for the pure Fortran version
@COND_PYRE_FALSE@XGENERATE_DATABASES_OBJECTS = $O/program_generate_databases.o $(LIBSPECFEM)
@COND_PYRE_FALSE@XSPECFEM_OBJECTS = $O/program_specfem3D.o $(SOLVER_ARRAY_OBJECTS) $(LIBSPECFEM)

####
#### targets
####

# default targets for the pure Fortran version
@COND_PYRE_FALSE@DEFAULT = \
@COND_PYRE_FALSE@	check_buffers_2D \
@COND_PYRE_FALSE@	combine_AVS_DX \
@COND_PYRE_FALSE@	convolve_source_timefunction \
@COND_PYRE_FALSE@	create_movie_shakemap_AVS_DX_GMT \
@COND_PYRE_FALSE@	generate_databases \
@COND_PYRE_FALSE@	specfem3D \
@COND_PYRE_FALSE@	$(EMPTY_MACRO)

default: $(DEFAULT)

all: clean default

backup:
	cp *f90 *h README_SPECFEM3D DATA/Par_file* Makefile go_mesher go_solver mymachines bak

bak: backup

generate_databases: xgenerate_databases

specfem3D: xspecfem3D


####
#### rules for executables
####

# rules for the pure Fortran version
@COND_PYRE_FALSE@xgenerate_databases: $(XGENERATE_DATABASES_OBJECTS) $(COND_MPI_OBJECTS)
@COND_PYRE_FALSE@	${FCLINK} -o xgenerate_databases $(XGENERATE_DATABASES_OBJECTS) $(COND_MPI_OBJECTS) $(MPILIBS)
@COND_PYRE_FALSE@
@COND_PYRE_FALSE@# solver also depends on values from mesher
@COND_PYRE_FALSE@xspecfem3D: $(XSPECFEM_OBJECTS) $(COND_MPI_OBJECTS)
@COND_PYRE_FALSE@	${FCLINK} -o xspecfem3D $(XSPECFEM_OBJECTS) $(COND_MPI_OBJECTS) $(MPILIBS)
@COND_PYRE_FALSE@

check_buffers_2D: xcheck_buffers_2D
combine_AVS_DX: xcombine_AVS_DX
convolve_source_timefunction: xconvolve_source_timefunction
create_header_file: xcreate_header_file
create_movie_shakemap_AVS_DX_GMT: xcreate_movie_shakemap_AVS_DX_GMT
combine_vol_data: xcombine_vol_data
combine_surf_data: xcombine_surf_data

xconvolve_source_timefunction: $O/convolve_source_timefunction.o
	${FCCOMPILE_CHECK} -o xconvolve_source_timefunction $O/convolve_source_timefunction.o

xcreate_header_file: $O/program_create_header_file.o $(LIBSPECFEM)
	${FCCOMPILE_CHECK} -o xcreate_header_file $O/program_create_header_file.o $(LIBSPECFEM)

@COND_PYRE_FALSE@xcreate_movie_shakemap_AVS_DX_GMT: $O/create_movie_shakemap_AVS_DX_GMT.o $(LIBSPECFEM)
@COND_PYRE_FALSE@	${FCCOMPILE_CHECK} -o xcreate_movie_shakemap_AVS_DX_GMT $O/create_movie_shakemap_AVS_DX_GMT.o $(LIBSPECFEM)

xcombine_AVS_DX: $O/combine_AVS_DX.o $(LIBSPECFEM)
	${FCCOMPILE_CHECK} -o xcombine_AVS_DX $O/combine_AVS_DX.o $(LIBSPECFEM)

xcheck_buffers_2D: $O/check_buffers_2D.o $(LIBSPECFEM)
	${FCCOMPILE_CHECK} -o xcheck_buffers_2D $O/check_buffers_2D.o $(LIBSPECFEM)

xcombine_vol_data: $O/combine_vol_data.o $O/write_c_binary.o
	${FCCOMPILE_CHECK} -o xcombine_vol_data  $O/combine_vol_data.o $O/write_c_binary.o

xcombine_surf_data: $O/combine_surf_data.o $O/write_c_binary.o
	${FCCOMPILE_CHECK} -o xcombine_surf_data  $O/combine_surf_data.o $O/write_c_binary.o


clean:
	rm -f $O/* *.o *.gnu *.mod OUTPUT_FILES/timestamp* OUTPUT_FILES/starttime*txt work.pc* xgenerate_databases xspecfem3D xcombine_AVS_DX xcheck_buffers_2D xconvolve_source_timefunction xcreate_header_file xcreate_movie_shakemap_AVS_DX_GMT xcombine_vol_data xcombine_surf_data

###
### rule for the archive library
###

$O/libspecfem.a: $(libspecfem_a_OBJECTS)
	-rm -f $O/libspecfem.a
	$(AR) $(ARFLAGS) $O/libspecfem.a $(libspecfem_a_OBJECTS)
	$(RANLIB) $O/libspecfem.a

####
#### rule to build each .o file below
####

###
### optimized flags and dependence on values from mesher
###

$O/specfem3D.o: constants.h OUTPUT_FILES/values_from_mesher.h specfem3D.f90
	${MPIFCCOMPILE_NO_CHECK} -c -o $O/specfem3D.o specfem3D.f90

$O/specfem3D_par.o: constants.h OUTPUT_FILES/values_from_mesher.h specfem3D_par.f90
	${MPIFCCOMPILE_NO_CHECK} -c -o $O/specfem3D_par.o specfem3D_par.f90

$O/initialize_simulation.o: constants.h OUTPUT_FILES/values_from_mesher.h initialize_simulation.f90
	${MPIFCCOMPILE_NO_CHECK} -c -o $O/initialize_simulation.o initialize_simulation.f90

$O/read_mesh_databases.o: constants.h OUTPUT_FILES/values_from_mesher.h read_mesh_databases.f90
	${MPIFCCOMPILE_NO_CHECK} -c -o $O/read_mesh_databases.o read_mesh_databases.f90

$O/setup_GLL_points.o: constants.h OUTPUT_FILES/values_from_mesher.h setup_GLL_points.f90
	${MPIFCCOMPILE_NO_CHECK} -c -o $O/setup_GLL_points.o setup_GLL_points.f90

$O/detect_mesh_surfaces.o: constants.h OUTPUT_FILES/values_from_mesher.h detect_mesh_surfaces.f90
	${MPIFCCOMPILE_NO_CHECK} -c -o $O/detect_mesh_surfaces.o detect_mesh_surfaces.f90

$O/setup_movie_meshes.o: constants.h OUTPUT_FILES/values_from_mesher.h setup_movie_meshes.f90
	${MPIFCCOMPILE_NO_CHECK} -c -o $O/setup_movie_meshes.o setup_movie_meshes.f90

$O/read_topography_bathymetry.o: constants.h OUTPUT_FILES/values_from_mesher.h read_topography_bathymetry.f90
	${MPIFCCOMPILE_NO_CHECK} -c -o $O/read_topography_bathymetry.o read_topography_bathymetry.f90

$O/setup_sources_receivers.o: constants.h OUTPUT_FILES/values_from_mesher.h setup_sources_receivers.f90
	${MPIFCCOMPILE_NO_CHECK} -c -o $O/setup_sources_receivers.o setup_sources_receivers.f90

$O/prepare_timerun.o: constants.h OUTPUT_FILES/values_from_mesher.h prepare_timerun.f90
	${MPIFCCOMPILE_NO_CHECK} -c -o $O/prepare_timerun.o prepare_timerun.f90

$O/iterate_time.o: constants.h OUTPUT_FILES/values_from_mesher.h iterate_time.f90
	${MPIFCCOMPILE_NO_CHECK} -c -o $O/iterate_time.o iterate_time.f90

$O/finalize_simulation.o: constants.h OUTPUT_FILES/values_from_mesher.h finalize_simulation.f90
	${MPIFCCOMPILE_NO_CHECK} -c -o $O/finalize_simulation.o finalize_simulation.f90

$O/assemble_MPI_vector.o: constants.h OUTPUT_FILES/values_from_mesher.h assemble_MPI_vector.f90
	${FCCOMPILE_NO_CHECK} -c -o $O/assemble_MPI_vector.o assemble_MPI_vector.f90

$O/assemble_MPI_scalar.o: constants.h OUTPUT_FILES/values_from_mesher.h assemble_MPI_scalar.f90
	${FCCOMPILE_NO_CHECK} -c -o $O/assemble_MPI_scalar.o assemble_MPI_scalar.f90

###
### MPI compilation without optimization
###

$O/parallel.o: constants.h parallel.f90
	${MPIFCCOMPILE_CHECK} -c -o $O/parallel.o parallel.f90

###
### serial compilation without optimization
###

$O/serial.o: constants.h exit_mpi.f90
	${FCCOMPILE_CHECK} -c -o $O/serial.o serial.f90

$O/program_specfem3D.o: program_specfem3D.f90
	${FCCOMPILE_CHECK} -c -o $O/program_specfem3D.o program_specfem3D.f90

$O/program_generate_databases.o: program_generate_databases.f90
	${FCCOMPILE_CHECK} -c -o $O/program_generate_databases.o program_generate_databases.f90

$O/generate_databases.o: constants.h generate_databases.f90
	${FCCOMPILE_CHECK} -c -o $O/generate_databases.o generate_databases.f90

$O/locate_source.o: constants.h locate_source.f90
	${FCCOMPILE_CHECK} -c -o $O/locate_source.o locate_source.f90

$O/locate_receivers.o: constants.h locate_receivers.f90
	${FCCOMPILE_CHECK} -c -o $O/locate_receivers.o locate_receivers.f90

$O/memory_eval.o: constants.h memory_eval.f90
	${FCCOMPILE_CHECK} -c -o $O/memory_eval.o memory_eval.f90

$O/exit_mpi.o: constants.h exit_mpi.f90
	${FCCOMPILE_CHECK} -c -o $O/exit_mpi.o exit_mpi.f90

$O/convolve_source_timefunction.o: convolve_source_timefunction.f90
	${FCCOMPILE_CHECK} -c -o $O/convolve_source_timefunction.o convolve_source_timefunction.f90

$O/program_create_header_file.o: program_create_header_file.f90
	${FCCOMPILE_CHECK} -c -o $O/program_create_header_file.o program_create_header_file.f90

$O/create_header_file.o: create_header_file.f90
	${FCCOMPILE_CHECK} -c -o $O/create_header_file.o create_header_file.f90

$O/read_arrays_solver.o: constants.h OUTPUT_FILES/values_from_mesher.h read_arrays_solver.f90
	${FCCOMPILE_CHECK} -c -o $O/read_arrays_solver.o read_arrays_solver.f90

$O/combine_AVS_DX.o: constants.h combine_AVS_DX.f90
	${FCCOMPILE_CHECK} -c -o $O/combine_AVS_DX.o combine_AVS_DX.f90

$O/save_header_file.o: constants.h save_header_file.f90
	${FCCOMPILE_CHECK} -c -o $O/save_header_file.o save_header_file.f90

$O/check_buffers_2D.o: constants.h check_buffers_2D.f90
	${FCCOMPILE_CHECK} -c -o $O/check_buffers_2D.o check_buffers_2D.f90

$O/read_parameter_file.o: constants.h read_parameter_file.f90
	${FCCOMPILE_CHECK} -c -o $O/read_parameter_file.o read_parameter_file.f90

$O/read_value_parameters.o: constants.h read_value_parameters.f90
	${FCCOMPILE_CHECK} -c -o $O/read_value_parameters.o read_value_parameters.f90

$O/get_value_parameters.o: constants.h get_value_parameters.f90
	${FCCOMPILE_CHECK} -c -o $O/get_value_parameters.o get_value_parameters.f90

$O/utm_geo.o: constants.h utm_geo.f90
	${FCCOMPILE_CHECK} -c -o $O/utm_geo.o utm_geo.f90

$O/compute_parameters.o: constants.h compute_parameters.f90
	${FCCOMPILE_CHECK} -c -o $O/compute_parameters.o compute_parameters.f90

$O/calc_jacobian.o: constants.h calc_jacobian.f90
	${FCCOMPILE_CHECK} -c -o $O/calc_jacobian.o calc_jacobian.f90

$O/gll_library.o: constants.h gll_library.f90
	${FCCOMPILE_CHECK} -c -o $O/gll_library.o gll_library.f90

$O/get_absorb.o: constants.h get_absorb.f90
	${FCCOMPILE_CHECK} -c -o $O/get_absorb.o get_absorb.f90

$O/get_jacobian_boundaries.o: constants.h get_jacobian_boundaries.f90
	${FCCOMPILE_CHECK} -c -o $O/get_jacobian_boundaries.o get_jacobian_boundaries.f90

$O/get_flags_boundaries.o: constants.h get_flags_boundaries.f90
	${FCCOMPILE_CHECK} -c -o $O/get_flags_boundaries.o get_flags_boundaries.f90

$O/get_MPI_cutplanes_xi.o: constants.h get_MPI_cutplanes_xi.f90
	${FCCOMPILE_CHECK} -c -o $O/get_MPI_cutplanes_xi.o get_MPI_cutplanes_xi.f90

$O/get_MPI_cutplanes_eta.o: constants.h get_MPI_cutplanes_eta.f90
	${FCCOMPILE_CHECK} -c -o $O/get_MPI_cutplanes_eta.o get_MPI_cutplanes_eta.f90

$O/get_cmt.o: constants.h get_cmt.f90
	${FCCOMPILE_CHECK} -c -o $O/get_cmt.o get_cmt.f90

$O/create_movie_shakemap_AVS_DX_GMT.o: constants.h create_movie_shakemap_AVS_DX_GMT.f90
	${FCCOMPILE_CHECK} -c -o $O/create_movie_shakemap_AVS_DX_GMT.o create_movie_shakemap_AVS_DX_GMT.f90

$O/get_global.o: constants.h get_global.f90
	${FCCOMPILE_CHECK} -c -o $O/get_global.o get_global.f90

$O/write_AVS_DX_global_faces_data.o: constants.h write_AVS_DX_global_faces_data.f90
	${FCCOMPILE_CHECK} -c -o $O/write_AVS_DX_global_faces_data.o write_AVS_DX_global_faces_data.f90

$O/write_AVS_DX_surface_data.o: constants.h write_AVS_DX_surface_data.f90
	${FCCOMPILE_CHECK} -c -o $O/write_AVS_DX_surface_data.o write_AVS_DX_surface_data.f90

$O/write_AVS_DX_global_data.o: constants.h write_AVS_DX_global_data.f90
	${FCCOMPILE_CHECK} -c -o $O/write_AVS_DX_global_data.o write_AVS_DX_global_data.f90

$O/get_shape3D.o: constants.h get_shape3D.f90
	${FCCOMPILE_CHECK} -c -o $O/get_shape3D.o get_shape3D.f90

$O/get_shape2D.o: constants.h get_shape2D.f90
	${FCCOMPILE_CHECK} -c -o $O/get_shape2D.o get_shape2D.f90

$O/hex_nodes.o: constants.h hex_nodes.f90
	${FCCOMPILE_CHECK} -c -o $O/hex_nodes.o hex_nodes.f90

$O/mesh_vertical.o: constants.h mesh_vertical.f90
	${FCCOMPILE_CHECK} -c -o $O/mesh_vertical.o mesh_vertical.f90

$O/netlib_specfun_erf.o: netlib_specfun_erf.f90
	${FCCOMPILE_CHECK} -c -o $O/netlib_specfun_erf.o netlib_specfun_erf.f90

$O/interpolate_gocad_block_MR.o: constants.h interpolate_gocad_block_MR.f90
	${FCCOMPILE_CHECK} -c -o $O/interpolate_gocad_block_MR.o interpolate_gocad_block_MR.f90

$O/interpolate_gocad_block_HR.o: constants.h interpolate_gocad_block_HR.f90
	${FCCOMPILE_CHECK} -c -o $O/interpolate_gocad_block_HR.o interpolate_gocad_block_HR.f90

$O/salton_trough_gocad.o: constants.h salton_trough_gocad.f90
	${FCCOMPILE_CHECK} -c -o $O/salton_trough_gocad.o salton_trough_gocad.f90

$O/socal_model.o: constants.h socal_model.f90
	${FCCOMPILE_CHECK} -c -o $O/socal_model.o socal_model.f90

$O/sort_array_coordinates.o: constants.h sort_array_coordinates.f90
	${FCCOMPILE_CHECK} -c -o $O/sort_array_coordinates.o sort_array_coordinates.f90

$O/aniso_model.o: constants.h aniso_model.f90
	${FCCOMPILE_CHECK} -c -o $O/aniso_model.o aniso_model.f90

$O/compute_rho_estimate.o: constants.h compute_rho_estimate.f90
	${FCCOMPILE_CHECK} -c -o $O/compute_rho_estimate.o compute_rho_estimate.f90

$O/hauksson_model.o: constants.h hauksson_model.f90
	${FCCOMPILE_CHECK} -c -o $O/hauksson_model.o hauksson_model.f90

$O/save_arrays_solver.o: constants.h save_arrays_solver.f90
	${FCCOMPILE_CHECK} -c -o $O/save_arrays_solver.o save_arrays_solver.f90

$O/comp_source_time_function.o: constants.h comp_source_time_function.f90
	${FCCOMPILE_CHECK} -c -o $O/comp_source_time_function.o comp_source_time_function.f90

$O/read_topo_bathy_file.o: constants.h read_topo_bathy_file.f90
	${FCCOMPILE_CHECK} -c -o $O/read_topo_bathy_file.o read_topo_bathy_file.f90

$O/read_moho_map.o: constants.h read_moho_map.f90
	${FCCOMPILE_CHECK} -c -o $O/read_moho_map.o read_moho_map.f90

$O/write_seismograms.o: constants.h write_seismograms.f90
	${FCCOMPILE_CHECK} -c -o $O/write_seismograms.o write_seismograms.f90

$O/lagrange_poly.o: constants.h lagrange_poly.f90
	${FCCOMPILE_CHECK} -c -o $O/lagrange_poly.o lagrange_poly.f90

$O/recompute_jacobian.o: constants.h recompute_jacobian.f90
	${FCCOMPILE_CHECK} -c -o $O/recompute_jacobian.o recompute_jacobian.f90

$O/create_regions_mesh.o: constants.h create_regions_mesh.f90
	${FCCOMPILE_CHECK} -c -o $O/create_regions_mesh.o create_regions_mesh.f90

$O/create_name_database.o: constants.h create_name_database.f90
	${FCCOMPILE_CHECK} -c -o $O/create_name_database.o create_name_database.f90

$O/create_serial_name_database.o: constants.h create_serial_name_database.f90
	${FCCOMPILE_CHECK} -c -o $O/create_serial_name_database.o create_serial_name_database.f90

$O/define_subregions.o: constants.h define_subregions.f90
	${FCCOMPILE_CHECK} -c -o $O/define_subregions.o define_subregions.f90

$O/define_subregions_heuristic.o: constants.h define_subregions_heuristic.f90
	${FCCOMPILE_CHECK} -c -o $O/define_subregions_heuristic.o define_subregions_heuristic.f90

$O/read_arrays_buffers_solver.o: constants.h read_arrays_buffers_solver.f90
	${FCCOMPILE_CHECK} -c -o $O/read_arrays_buffers_solver.o read_arrays_buffers_solver.f90

$O/define_derivation_matrices.o: constants.h define_derivation_matrices.f90
	${FCCOMPILE_CHECK} -c -o $O/define_derivation_matrices.o define_derivation_matrices.f90

$O/compute_arrays_source.o: constants.h compute_arrays_source.f90
	${FCCOMPILE_CHECK} -c -o $O/compute_arrays_source.o compute_arrays_source.f90

$O/get_attenuation_model.o: constants.h get_attenuation_model.f90
	${FCCOMPILE_CHECK} -c -o $O/get_attenuation_model.o get_attenuation_model.f90

$O/compute_boundary_kernel.o: constants.h compute_boundary_kernel.f90
	${FCCOMPILE_CHECK} -c -o $O/compute_boundary_kernel.o compute_boundary_kernel.f90

$O/compute_forces_no_Deville.o: constants.h compute_forces_no_Deville.f90
	${FCCOMPILE_NO_CHECK} -c -o $O/compute_forces_no_Deville.o compute_forces_no_Deville.f90

$O/compute_forces_with_Deville.o: constants.h compute_forces_with_Deville.f90
	${FCCOMPILE_NO_CHECK} -c -o $O/compute_forces_with_Deville.o compute_forces_with_Deville.f90

$O/combine_vol_data.o: constants.h combine_vol_data.f90
	${FCCOMPILE_CHECK} -c -o $O/combine_vol_data.o combine_vol_data.f90

$O/combine_surf_data.o: constants.h combine_surf_data.f90
	${FCCOMPILE_CHECK} -c -o $O/combine_surf_data.o combine_surf_data.f90

###
### rule for the header file
###

@COND_PYRE_FALSE@OUTPUT_FILES/values_from_mesher.h: xcreate_header_file
@COND_PYRE_FALSE@	./xcreate_header_file

###
### C files below
###

$O/write_c_binary.o: write_c_binary.c
	cc -c -o $O/write_c_binary.o write_c_binary.c

