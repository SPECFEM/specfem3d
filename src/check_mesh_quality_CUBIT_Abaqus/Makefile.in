#=====================================================================
#
#               S p e c f e m 3 D  V e r s i o n  2 . 0
#               ---------------------------------------
#
#          Main authors: Dimitri Komatitsch and Jeroen Tromp
#    Princeton University, USA and University of Pau / CNRS / INRIA
# (c) Princeton University / California Institute of Technology and University of Pau / CNRS / INRIA
#                            April 2011
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
#
#=====================================================================
#
# United States Government Sponsorship Acknowledged.
#

# @configure_input@

FC = @FC@
FCFLAGS = #@FCFLAGS@
FLAGS_CHECK = @FLAGS_CHECK@
FLAGS_NO_CHECK = @FLAGS_NO_CHECK@
FCFLAGS_f90 = @FCFLAGS_f90@

FCCOMPILE_CHECK =@FCENV@ ${FC} ${FCFLAGS} $(FLAGS_CHECK)
FCCOMPILE_NO_CHECK =@FCENV@ ${FC} ${FCFLAGS} $(FLAGS_NO_CHECK)

FCLINK = $(FCCOMPILE_NO_CHECK)

# E : executables directory
E = ../../bin
# O : objects directory
O = ../../obj/che

####
#### targets
####

# default targets for the Pyrized version
DEFAULT =  xcheck_mesh_quality_CUBIT_Abaqus xconvert_skewness_to_angle xmultiply_CUBIT_Abaqus_mesh_by_1000


default: $(DEFAULT)

all: clean default

check_mesh_quality_CUBIT_Abaqus: xcheck_mesh_quality_CUBIT_Abaqus
convert_skewness_to_angle: xconvert_skewness_to_angle
multiply_CUBIT_Abaqus_mesh_by_1000: xmultiply_CUBIT_Abaqus_mesh_by_1000


####
#### rules for executables
####
# rules for the pure Fortran version
@COND_PYRE_FALSE@xcheck_mesh_quality_CUBIT_Abaqus: $O/check_mesh_quality_CUBIT_Abaqus.o
@COND_PYRE_FALSE@	${FCLINK} -o  $E/xcheck_mesh_quality_CUBIT_Abaqus $O/check_mesh_quality_CUBIT_Abaqus.o
@COND_PYRE_FALSE@
@COND_PYRE_FALSE@xconvert_skewness_to_angle: $O/convert_skewness_to_angle.o
@COND_PYRE_FALSE@	${FCLINK} -o  $E/xconvert_skewness_to_angle $O/convert_skewness_to_angle.o
@COND_PYRE_FALSE@
@COND_PYRE_FALSE@xmultiply_CUBIT_Abaqus_mesh_by_1000: $O/multiply_CUBIT_Abaqus_mesh_by_1000.o
@COND_PYRE_FALSE@	${FCLINK} -o  $E/xmultiply_CUBIT_Abaqus_mesh_by_1000 $O/multiply_CUBIT_Abaqus_mesh_by_1000.o
@COND_PYRE_FALSE@


clean:
	rm -f $O/*.o *.mod  $E/xcheck_mesh_quality_CUBIT_Abaqus $E/xconvert_skewness_to_angle $E/xmultiply_CUBIT_Abaqus_mesh_by_1000

####
#### rule to build each .o file below
####

$O/check_mesh_quality_CUBIT_Abaqus.o: check_mesh_quality_CUBIT_Abaqus.f90
	${FCCOMPILE_CHECK} -c -o $O/check_mesh_quality_CUBIT_Abaqus.o check_mesh_quality_CUBIT_Abaqus.f90

$O/convert_skewness_to_angle.o: convert_skewness_to_angle.f90
	${FCCOMPILE_CHECK} -c -o $O/convert_skewness_to_angle.o convert_skewness_to_angle.f90

$O/multiply_CUBIT_Abaqus_mesh_by_1000.o: multiply_CUBIT_Abaqus_mesh_by_1000.f90
	${FCCOMPILE_CHECK} -c -o $O/multiply_CUBIT_Abaqus_mesh_by_1000.o multiply_CUBIT_Abaqus_mesh_by_1000.f90


