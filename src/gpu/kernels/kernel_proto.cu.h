/*
!=====================================================================
!
!                          S p e c f e m 3 D
!                          -----------------
!
!    Main historical authors: Dimitri Komatitsch and Jeroen Tromp
!                             CNRS, France
!                      and Princeton University, USA
!                (there are currently many more authors!)
!                          (c) October 2017
!
! This program is free software; you can redistribute it and/or modify
! it under the terms of the GNU General Public License as published by
! the Free Software Foundation; either version 3 of the License, or
! (at your option) any later version.
!
! This program is distributed in the hope that it will be useful,
! but WITHOUT ANY WARRANTY; without even the implied warranty of
! MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
! GNU General Public License for more details.
!
! You should have received a copy of the GNU General Public License along
! with this program; if not, write to the Free Software Foundation, Inc.,
! 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
!
!=====================================================================
*/

// this file has been automatically generated by script utils/create_specfem3D_gpu_cuda_kernel_proto.pl

#ifndef KERNEL_PROTO_CUDA_H
#define KERNEL_PROTO_CUDA_H

// prototype definitions from cuda kernel files


//
// src/gpu/kernels/Kernel_2_acoustic_impl.cu
//

template<int FORWARD_OR_ADJOINT> __global__ void
Kernel_2_acoustic_impl(const int nb_blocks_to_compute,
                       const int* d_ibool,
                       const int* d_irregular_element_number,
                       const int* d_phase_ispec_inner_acoustic,
                       const int num_phase_ispec_acoustic,
                       const int d_iphase,
                       field_const_p d_potential_acoustic,
                       field_p d_potential_dot_dot_acoustic,
                       field_const_p d_b_potential_acoustic,
                       field_p d_b_potential_dot_dot_acoustic,
                       const int nb_field,
                       realw* d_xix,realw* d_xiy,realw* d_xiz,
                       realw* d_etax,realw* d_etay,realw* d_etaz,
                       realw* d_gammax,realw* d_gammay,realw* d_gammaz,
                       const realw xix_regular, const realw jacobian_regular,
                       realw_const_p d_hprime_xx,
                       realw_const_p hprimewgll_xx,
                       realw_const_p wgllwgll_xy,realw_const_p wgllwgll_xz,realw_const_p wgllwgll_yz,
                       realw* d_rhostore,
                       const int use_mesh_coloring_gpu,
                       const int gravity,
                       realw_const_p minus_g,
                       realw* d_kappastore,
                       realw_const_p wgll_cube);

__global__ void
Kernel_2_acoustic_single_impl(const int nb_blocks_to_compute,
                              const int* d_ibool,
                              const int* d_phase_ispec_inner_acoustic,
                              const int num_phase_ispec_acoustic,
                              const int d_iphase,
                              field_const_p d_potential_acoustic,
                              field_p d_potential_dot_dot_acoustic,
                              realw* d_xix,realw* d_xiy,realw* d_xiz,
                              realw* d_etax,realw* d_etay,realw* d_etaz,
                              realw* d_gammax,realw* d_gammay,realw* d_gammaz,
                              const int* d_irregular_element_number,
                              const realw xix_regular, const realw jacobian_regular,
                              realw_const_p d_hprime_xx,
                              realw_const_p hprimewgll_xx,
                              realw_const_p wgllwgll_xy,realw_const_p wgllwgll_xz,realw_const_p wgllwgll_yz,
                              realw* d_rhostore,
                              const int use_mesh_coloring_gpu,
                              const int gravity,
                              realw_const_p minus_g,
                              realw* d_kappastore,
                              realw_const_p wgll_cube,
                              const int FORWAR_OR_ADJOINT);


//
// src/gpu/kernels/Kernel_2_viscoelastic_impl.cu
//

__global__ void
Kernel_2_noatt_iso_impl(const int nb_blocks_to_compute,
                        const int* d_ibool,
                        const int* d_phase_ispec_inner_elastic,const int num_phase_ispec_elastic,
                        const int d_iphase,
                        const int* d_irregular_element_number,
                        realw_const_p d_displ,
                        realw_p d_accel,
                        realw_const_p d_xix,realw_const_p d_xiy,realw_const_p d_xiz,
                        realw_const_p d_etax,realw_const_p d_etay,realw_const_p d_etaz,
                        realw_const_p d_gammax,realw_const_p d_gammay,realw_const_p d_gammaz,
                        const realw xix_regular,const realw jacobian_regular,
                        realw_const_p d_hprime_xx,
                        realw_const_p d_hprimewgll_xx,
                        realw_const_p d_wgllwgll_xy,realw_const_p d_wgllwgll_xz,realw_const_p d_wgllwgll_yz,
                        realw_const_p d_kappav,
                        realw_const_p d_muv,
                        const int FORWARD_OR_ADJOINT);

__global__ void
Kernel_2_noatt_iso_strain_impl(int nb_blocks_to_compute,
                              const int* d_ibool,
                              const int* d_phase_ispec_inner_elastic,const int num_phase_ispec_elastic,
                              const int d_iphase,
                              const int* d_irregular_element_number,
                              realw_const_p d_displ,
                              realw_p d_accel,
                              realw_const_p d_xix,realw_const_p d_xiy,realw_const_p d_xiz,
                              realw_const_p d_etax,realw_const_p d_etay,realw_const_p d_etaz,
                              realw_const_p d_gammax,realw_const_p d_gammay,realw_const_p d_gammaz,
                              const realw xix_regular,const realw jacobian_regular,
                              realw_const_p d_hprime_xx,
                              realw_const_p d_hprimewgll_xx,
                              realw_const_p d_wgllwgll_xy,realw_const_p d_wgllwgll_xz,realw_const_p d_wgllwgll_yz,
                              realw_const_p d_kappav,realw_const_p d_muv,
                              const int COMPUTE_AND_STORE_STRAIN,
                              realw_p epsilondev_xx,realw_p epsilondev_yy,realw_p epsilondev_xy,
                              realw_p epsilondev_xz,realw_p epsilondev_yz,
                              realw_p epsilon_trace_over_3,
                              const int SIMULATION_TYPE,
                              const int FORWARD_OR_ADJOINT);

__global__ void
Kernel_2_noatt_iso_col_impl(int nb_blocks_to_compute,
                        const int* d_ibool,
                        const int* d_phase_ispec_inner_elastic,const int num_phase_ispec_elastic,
                        const int d_iphase,
                        const int use_mesh_coloring_gpu,
                        realw_const_p d_displ,
                        realw_p d_accel,
                        realw_const_p d_xix,realw_const_p d_xiy,realw_const_p d_xiz,
                        realw_const_p d_etax,realw_const_p d_etay,realw_const_p d_etaz,
                        realw_const_p d_gammax,realw_const_p d_gammay,realw_const_p d_gammaz,
                        realw_const_p d_hprime_xx,
                        realw_const_p d_hprimewgll_xx,
                        realw_const_p d_wgllwgll_xy,realw_const_p d_wgllwgll_xz,realw_const_p d_wgllwgll_yz,
                        realw_const_p d_kappav,realw_const_p d_muv,
                        const int COMPUTE_AND_STORE_STRAIN,
                        realw_p epsilondev_xx,realw_p epsilondev_yy,realw_p epsilondev_xy,
                        realw_p epsilondev_xz,realw_p epsilondev_yz,
                        realw_p epsilon_trace_over_3,
                        const int SIMULATION_TYPE,
                        const int FORWARD_OR_ADJOINT);

__global__ void
Kernel_2_noatt_iso_grav_impl(int nb_blocks_to_compute,
                             const int* d_ibool,
                             const int* d_phase_ispec_inner_elastic,const int num_phase_ispec_elastic,
                             const int d_iphase,
                             const int* d_irregular_element_number,
                             const int use_mesh_coloring_gpu,
                             realw_const_p d_displ,
                             realw_p d_accel,
                             realw_const_p d_xix,realw_const_p d_xiy,realw_const_p d_xiz,
                             realw_const_p d_etax,realw_const_p d_etay,realw_const_p d_etaz,
                             realw_const_p d_gammax,realw_const_p d_gammay,realw_const_p d_gammaz,
                             const realw xix_regular,const realw jacobian_regular,
                             realw_const_p d_hprime_xx,
                             realw_const_p d_hprimewgll_xx,
                             realw_const_p d_wgllwgll_xy,realw_const_p d_wgllwgll_xz,realw_const_p d_wgllwgll_yz,
                             realw_const_p d_kappav,realw_const_p d_muv,
                             const int COMPUTE_AND_STORE_STRAIN,
                             realw_p epsilondev_xx,realw_p epsilondev_yy,realw_p epsilondev_xy,
                             realw_p epsilondev_xz,realw_p epsilondev_yz,
                             realw_p epsilon_trace_over_3,
                             const int SIMULATION_TYPE,
                             const int gravity,
                             realw_const_p d_minus_g,
                             realw_const_p d_minus_deriv_gravity,
                             realw_const_p d_rhostore,
                             realw_const_p wgll_cube,
                             const int FORWARD_OR_ADJOINT);

__global__ void
Kernel_2_noatt_ani_impl(int nb_blocks_to_compute,
                        const int* d_ibool,
                        const int* d_phase_ispec_inner_elastic,const int num_phase_ispec_elastic,
                        const int d_iphase,
                        const int* d_irregular_element_number,
                        const int use_mesh_coloring_gpu,
                        realw_const_p d_displ,
                        realw_p d_accel,
                        realw_const_p d_xix,realw_const_p d_xiy,realw_const_p d_xiz,
                        realw_const_p d_etax,realw_const_p d_etay,realw_const_p d_etaz,
                        realw_const_p d_gammax,realw_const_p d_gammay,realw_const_p d_gammaz,
                        const realw xix_regular,const realw jacobian_regular,
                        realw_const_p d_hprime_xx,
                        realw_const_p d_hprimewgll_xx,
                        realw_const_p d_wgllwgll_xy,realw_const_p d_wgllwgll_xz,realw_const_p d_wgllwgll_yz,
                        realw_const_p d_kappav,realw_const_p d_muv,
                        const int COMPUTE_AND_STORE_STRAIN,
                        realw_p epsilondev_xx,realw_p epsilondev_yy,realw_p epsilondev_xy,
                        realw_p epsilondev_xz,realw_p epsilondev_yz,
                        realw_p epsilon_trace_over_3,
                        const int SIMULATION_TYPE,
                        const int ANISOTROPY,
                        realw* d_c11store,realw* d_c12store,realw* d_c13store,
                        realw* d_c14store,realw* d_c15store,realw* d_c16store,
                        realw* d_c22store,realw* d_c23store,realw* d_c24store,
                        realw* d_c25store,realw* d_c26store,realw* d_c33store,
                        realw* d_c34store,realw* d_c35store,realw* d_c36store,
                        realw* d_c44store,realw* d_c45store,realw* d_c46store,
                        realw* d_c55store,realw* d_c56store,realw* d_c66store,
                        const int gravity,
                        realw_const_p d_minus_g,
                        realw_const_p d_minus_deriv_gravity,
                        realw_const_p d_rhostore,
                        realw_const_p wgll_cube,
                        const int FORWARD_OR_ADJOINT);

__global__ void
Kernel_2_att_impl(int nb_blocks_to_compute,
                  const int* d_ibool,
                  const int* d_phase_ispec_inner_elastic,const int num_phase_ispec_elastic,
                  const int d_iphase,
                  const int* d_irregular_element_number,
                  const int use_mesh_coloring_gpu,
                  const realw d_deltat,
                  realw_const_p d_displ,
                  realw_const_p d_veloc,
                  realw_p d_accel,
                  realw_const_p d_xix,realw_const_p d_xiy,realw_const_p d_xiz,
                  realw_const_p d_etax,realw_const_p d_etay,realw_const_p d_etaz,
                  realw_const_p d_gammax,realw_const_p d_gammay,realw_const_p d_gammaz,
                  const realw xix_regular,const realw jacobian_regular,
                  realw_const_p d_hprime_xx,
                  realw_const_p d_hprimewgll_xx,
                  realw_const_p d_wgllwgll_xy,realw_const_p d_wgllwgll_xz,realw_const_p d_wgllwgll_yz,
                  realw_const_p d_kappav,realw_const_p d_muv,
                  realw_p epsilondev_xx,realw_p epsilondev_yy,realw_p epsilondev_xy,
                  realw_p epsilondev_xz,realw_p epsilondev_yz,
                  realw_p epsilondev_trace,
                  realw_p epsilon_trace_over_3,
                  const int SIMULATION_TYPE,
                  const int NSPEC,
                  realw_const_p factor_common,
                  realw_p R_xx,realw_p R_yy,realw_p R_xy,realw_p R_xz,realw_p R_yz,
                  realw_p R_trace,
                  realw_const_p factor_common_kappa,
                  realw_const_p alphaval,realw_const_p betaval,realw_const_p gammaval,
                  const int ANISOTROPY,
                  realw_const_p d_c11store,realw_const_p d_c12store,realw_const_p d_c13store,
                  realw_const_p d_c14store,realw_const_p d_c15store,realw_const_p d_c16store,
                  realw_const_p d_c22store,realw_const_p d_c23store,realw_const_p d_c24store,
                  realw_const_p d_c25store,realw_const_p d_c26store,realw_const_p d_c33store,
                  realw_const_p d_c34store,realw_const_p d_c35store,realw_const_p d_c36store,
                  realw_const_p d_c44store,realw_const_p d_c45store,realw_const_p d_c46store,
                  realw_const_p d_c55store,realw_const_p d_c56store,realw_const_p d_c66store,
                  const int gravity,
                  realw_const_p d_minus_g,
                  realw_const_p d_minus_deriv_gravity,
                  realw_const_p d_rhostore,
                  realw_const_p wgll_cube,
                  const int FORWARD_OR_ADJOINT);

__global__ void
Kernel_2_noatt_iso_kelvinvoigt_impl(const int nb_blocks_to_compute,
                                    const int* d_ibool,
                                    const int* d_phase_ispec_inner_elastic,const int num_phase_ispec_elastic,
                                    const int d_iphase,
                                    const int* d_irregular_element_number,
                                    realw* d_kelvin_voigt_eta,
                                    realw_const_p d_displ,
                                    realw_const_p d_veloc,
                                    realw_p d_accel,
                                    realw_const_p d_xix,realw_const_p d_xiy,realw_const_p d_xiz,
                                    realw_const_p d_etax,realw_const_p d_etay,realw_const_p d_etaz,
                                    realw_const_p d_gammax,realw_const_p d_gammay,realw_const_p d_gammaz,
                                    const realw xix_regular,const realw jacobian_regular,
                                    realw_const_p d_hprime_xx,
                                    realw_const_p d_hprimewgll_xx,
                                    realw_const_p d_wgllwgll_xy,realw_const_p d_wgllwgll_xz,realw_const_p d_wgllwgll_yz,
                                    realw_const_p d_kappav,
                                    realw_const_p d_muv,
                                    const int FORWARD_OR_ADJOINT);


//
// src/gpu/kernels/UpdateDispVeloc_kernel.cu
//

__global__ void UpdateDispVeloc_kernel(realw* displ,
                                       realw* veloc,
                                       realw* accel,
                                       int size,
                                       realw deltat,
                                       realw deltatsqover2,
                                       realw deltatover2) ;


//
// src/gpu/kernels/UpdatePotential_kernel.cu
//

__global__ void UpdatePotential_kernel(field* potential_acoustic,
                                       field* potential_dot_acoustic,
                                       field* potential_dot_dot_acoustic,
                                       int size,
                                       realw deltat,
                                       realw deltatsqover2,
                                       realw deltatover2) ;


//
// src/gpu/kernels/add_source_main_rec_noise_cuda_kernel.cu
//

__global__ void add_source_main_rec_noise_cuda_kernel(int* d_ibool,
                                                      int* ispec_selected_rec,
                                                      int irec_main_noise,
                                                      realw* accel,
                                                      realw* noise_sourcearray,
                                                      int it) ;


//
// src/gpu/kernels/add_sources_ac_SIM_TYPE_2_OR_3_kernel.cu
//

__global__ void add_sources_ac_SIM_TYPE_2_OR_3_kernel(field* potential_dot_dot_acoustic,
                                                      int nrec,
                                                      int it,
                                                      int NSTEP_BETWEEN_ADJSRC,
                                                      field* source_adjoint,
                                                      realw* xir_store,
                                                      realw* etar_store,
                                                      realw* gammar_store,
                                                      int* d_ibool,
                                                      int* ispec_is_acoustic,
                                                      int* ispec_selected_recloc,
                                                      int nadj_rec_local,
                                                      realw* kappastore) ;


//
// src/gpu/kernels/add_sources_el_SIM_TYPE_2_OR_3_kernel.cu
//

__global__ void add_sources_el_SIM_TYPE_2_OR_3_kernel(realw* accel,
                                                      int nrec,
                                                      int it,
                                                      int NSTEP_BETWEEN_ADJSRC,
                                                      field* source_adjoint,
                                                      realw* xir_store,
                                                      realw* etar_store,
                                                      realw* gammar_store,
                                                      int* d_ibool,
                                                      int* ispec_is_elastic,
                                                      int* ispec_selected_recloc,
                                                      int nadj_rec_local) ;


//
// src/gpu/kernels/assemble_boundary_accel_on_device.cu
//

__global__ void assemble_boundary_accel_on_device(realw* d_accel, realw* d_send_accel_buffer,
                                                  const int num_interfaces_ext_mesh,
                                                  const int max_nibool_interfaces_ext_mesh,
                                                  const int* d_nibool_interfaces_ext_mesh,
                                                  const int* d_ibool_interfaces_ext_mesh) ;


//
// src/gpu/kernels/assemble_boundary_potential_on_device.cu
//

__global__ void assemble_boundary_potential_on_device(field* d_potential_dot_dot_acoustic,
                                                      field* d_send_potential_dot_dot_buffer,
                                                      const int num_interfaces_ext_mesh,
                                                      const int max_nibool_interfaces_ext_mesh,
                                                      const int* d_nibool_interfaces_ext_mesh,
                                                      const int* d_ibool_interfaces_ext_mesh) ;


//
// src/gpu/kernels/compute_acoustic_seismogram_kernel.cu
//

__global__ void compute_acoustic_seismogram_kernel(int nrec_local,
                                                   realw* displ,
                                                   field* potential,
                                                   int* d_ibool,
                                                   realw* hxir_store, realw* hetar_store, realw* hgammar_store,
                                                   field* seismograms,
                                                   int* ispec_selected_rec_loc,
                                                   int* ispec_is_elastic,
                                                   int* ispec_is_acoustic,
                                                   realw* kappastore, realw* mustore,
                                                   realw* d_hprime_xx,
                                                   realw* d_xix,realw* d_xiy,realw* d_xiz,
                                                   realw* d_etax,realw* d_etay,realw* d_etaz,
                                                   realw* d_gammax,realw* d_gammay,realw* d_gammaz,
                                                   int* d_irregular_element_number,
                                                   realw xix_regular,
                                                   const int ANISOTROPY,
                                                   realw* d_c11store,realw* d_c12store,realw* d_c13store,
                                                   realw* d_c14store,realw* d_c15store,realw* d_c16store,
                                                   realw* d_c22store,realw* d_c23store,realw* d_c24store,
                                                   realw* d_c25store,realw* d_c26store,realw* d_c33store,
                                                   realw* d_c34store,realw* d_c35store,realw* d_c36store,
                                                   int it);

__global__ void compute_acoustic_vectorial_seismogram_kernel(int nrec_local,
                                                             int*  d_ispec_is_acoustic,
                                                             field* scalar_potential,
                                                             realw* seismograms,
                                                             realw* d_rhostore,
                                                             int* d_ibool,
                                                             int* d_irregular_element_number,
                                                             realw* hxir_store, realw* hetar_store, realw* hgammar_store,
                                                             realw* d_xix, realw* d_xiy, realw* d_xiz,
                                                             realw* d_etax, realw* d_etay, realw* d_etaz,
                                                             realw* d_gammax, realw* d_gammay, realw* d_gammaz,
                                                             realw xix_regular,
                                                             realw* d_hprime_xx,
                                                             realw* nu_rec,
                                                             int* ispec_selected_rec_loc,
                                                             int it);


//
// src/gpu/kernels/compute_add_sources_acoustic_kernel.cu
//

__global__ void compute_add_sources_acoustic_kernel(field* potential_dot_dot_acoustic,
                                                    int* d_ibool,
                                                    realw* sourcearrays,
                                                    field* stf_pre_compute,
                                                    int myrank,
                                                    int* islice_selected_source,
                                                    int* ispec_selected_source,
                                                    int* ispec_is_acoustic,
                                                    realw* kappastore,
                                                    int NSOURCES) ;


//
// src/gpu/kernels/compute_add_sources_kernel.cu
//

__global__ void compute_add_sources_kernel(realw* accel,
                                           int* d_ibool,
                                           realw* sourcearrays,
                                           field* stf_pre_compute,
                                           int myrank,
                                           int* islice_selected_source,
                                           int* ispec_selected_source,
                                           int* ispec_is_elastic,
                                           int NSOURCES) ;


//
// src/gpu/kernels/compute_coupling_acoustic_el_kernel.cu
//

__global__ void compute_coupling_acoustic_el_kernel(realw* displ,
                                                    field* potential_dot_dot_acoustic,
                                                    int num_coupling_ac_el_faces,
                                                    int* coupling_ac_el_ispec,
                                                    int* coupling_ac_el_ijk,
                                                    realw* coupling_ac_el_normal,
                                                    realw* coupling_ac_el_jacobian2Dw,
                                                    int* d_ibool,
                                                    int simulation_type,
                                                    int backward_simulation) ;


//
// src/gpu/kernels/compute_coupling_elastic_ac_kernel.cu
//

__global__ void compute_coupling_elastic_ac_kernel(field* potential_dot_dot_acoustic,
                                                    realw* accel,
                                                    int num_coupling_ac_el_faces,
                                                    int* coupling_ac_el_ispec,
                                                    int* coupling_ac_el_ijk,
                                                    realw* coupling_ac_el_normal,
                                                    realw* coupling_ac_el_jacobian2Dw,
                                                    int* d_ibool,
                                                    int gravity,
                                                    realw* minus_g,
                                                    realw* rhostore,
                                                    realw* displ,
                                                    int simulation_type,
                                                    int backward_simulation) ;


//
// src/gpu/kernels/compute_coupling_ocean_cuda_kernel.cu
//

__global__ void compute_coupling_ocean_cuda_kernel(realw* accel,
                                                   realw* rmassx,realw* rmassy,realw* rmassz,
                                                   realw* rmass_ocean_load,
                                                   int num_free_surface_faces,
                                                   int* free_surface_ispec,
                                                   int* free_surface_ijk,
                                                   realw* free_surface_normal,
                                                   int* d_ibool,
                                                   int* updated_dof_ocean_load) ;


//
// src/gpu/kernels/compute_dynamic_fault_cuda.cu
//

__global__  void compute_dynamic_fault_cuda_swf(realw* Displ,   // this is a mesh vector
                                                realw* Veloc,
                                                realw* MxAccel,
                                                int NGLOB_FLT,
                                                realw* invM1,   // this is a fault vector
                                                realw* invM2,
                                                realw* B,
                                                realw* Z,
                                                realw* R,
                                                realw* T0,
                                                realw* T,       // for output
                                                realw* Dc,
                                                realw* theta,
                                                realw* mus,
                                                realw* mud,
                                                realw* Coh,
                                                realw* RT,
                                                realw* V_slip,
                                                realw* D_slip,
                                                int* ibulk1,
                                                int* ibulk2,
                                                realw dt) ;

__global__  void compute_dynamic_fault_cuda_rsf(realw* Displ,   // mesh quantities
                                                realw* Veloc,
                                                realw* MxAccel,
                                                int NGLOB_FLT,
                                                realw* invM1,   // fault quantities
                                                realw* invM2,
                                                realw* B,
                                                realw* Z,
                                                realw* R,
                                                realw* T0,
                                                realw* T,       // for output
                                                realw* Coh,     // cohesion
                                                realw* a,
                                                realw* b,
                                                realw* L,
                                                realw* f0,
                                                realw* V0,      // frictional quantities
                                                realw* V_init,
                                                realw* theta,
                                                realw* Vw,
                                                realw* fw,
                                                realw* Fload,
                                                int StateLaw,
                                                realw* V_slip,
                                                realw* D_slip,
                                                int* ibulk1,
                                                int* ibulk2,
                                                realw dt,
                                                int it) ;

__global__ void store_dataT(realw* dataT,
                            realw* V_slip,
                            realw* D_slip,
                            realw* T,
                            int RATE_AND_STATE,
                            int StateLaw,
                            realw* theta,
                            int* iglob,
                            int it_step,
                            int n_record,
                            int nt) ;


//
// src/gpu/kernels/compute_elastic_seismogram_kernel.cu
//

__global__ void compute_elastic_seismogram_kernel(int nrec_local,
                                                  realw* displ,
                                                  field* potential,
                                                  int* d_ibool,
                                                  realw* hxir_store, realw* hetar_store, realw* hgammar_store,
                                                  realw* seismograms,
                                                  realw* nu_rec,
                                                  int* ispec_selected_rec_loc,
                                                  int* ispec_is_elastic,
                                                  int* ispec_is_acoustic,
                                                  realw* rhostore,
                                                  realw* d_hprime_xx,
                                                  realw* d_xix,realw* d_xiy,realw* d_xiz,
                                                  realw* d_etax,realw* d_etay,realw* d_etaz,
                                                  realw* d_gammax,realw* d_gammay,realw* d_gammaz,
                                                  int* d_irregular_element_number,
                                                  realw xix_regular,
                                                  int it);


//
// src/gpu/kernels/compute_element_strain_cudakernel.cu
//

__global__ void compute_element_strain_cudakernel(int* ispec_is_elastic,
                                                  int* d_ibool,
                                                  realw* displ,
                                                  realw* epsilondev_xx,realw* epsilondev_yy,realw* epsilondev_xy,
                                                  realw* epsilondev_xz,realw* epsilondev_yz,
                                                  realw* epsilondev_trace,
                                                  realw* epsilon_trace_over_3,
                                                  realw* d_xix,realw* d_xiy,realw* d_xiz,
                                                  realw* d_etax,realw* d_etay,realw* d_etaz,
                                                  realw* d_gammax,realw* d_gammay,realw* d_gammaz,
                                                  int* d_irregular_element_number,
                                                  realw xix_regular,
                                                  realw* d_hprime_xx,
                                                  int NSPEC_AB) ;


//
// src/gpu/kernels/compute_kernels_acoustic_kernel.cu
//

__global__ void compute_kernels_acoustic_kernel(int* ispec_is_acoustic,
                                                int* d_ibool,
                                                realw* rhostore,
                                                realw* d_hprime_xx,
                                                int* d_irregular_element_number,
                                                realw* d_xix,realw* d_xiy,realw* d_xiz,
                                                realw* d_etax,realw* d_etay,realw* d_etaz,
                                                realw* d_gammax,realw* d_gammay,realw* d_gammaz,
                                                realw xix_regular,
                                                field* potential_acoustic,
                                                field* potential_dot_dot_acoustic,
                                                field* b_potential_acoustic,
                                                field* b_potential_dot_dot_acoustic,
                                                realw* rho_ac_kl,
                                                realw* kappa_ac_kl,
                                                realw deltat,
                                                int NSPEC_AB,
                                                int gravity) ;


//
// src/gpu/kernels/compute_kernels_ani_cudakernel.cu
//

__global__ void compute_kernels_ani_cudakernel(int* ispec_is_elastic,
                                               int* d_ibool,
                                               realw* accel,
                                               realw* b_displ,
                                               realw* epsilondev_xx,realw* epsilondev_yy,realw* epsilondev_xy,
                                               realw* epsilondev_xz,realw* epsilondev_yz,
                                               realw* b_epsilondev_xx,realw* b_epsilondev_yy,realw* b_epsilondev_xy,
                                               realw* b_epsilondev_xz,realw* b_epsilondev_yz,
                                               realw* rho_kl,
                                               realw deltat,
                                               realw* cijkl_kl,
                                               realw* epsilon_trace_over_3,
                                               realw* b_epsilon_trace_over_3,
                                               int NSPEC_AB) ;


//
// src/gpu/kernels/compute_kernels_cudakernel.cu
//

__global__ void compute_kernels_cudakernel(int* ispec_is_elastic,
                                           int* d_ibool,
                                           realw* accel,
                                           realw* b_displ,
                                           realw* epsilondev_xx,realw* epsilondev_yy,realw* epsilondev_xy,
                                           realw* epsilondev_xz,realw* epsilondev_yz,
                                           realw* b_epsilondev_xx,realw* b_epsilondev_yy,realw* b_epsilondev_xy,
                                           realw* b_epsilondev_xz,realw* b_epsilondev_yz,
                                           realw* rho_kl,
                                           realw deltat,
                                           realw* mu_kl,
                                           realw* kappa_kl,
                                           realw* epsilon_trace_over_3,
                                           realw* b_epsilon_trace_over_3,
                                           int NSPEC_AB) ;


//
// src/gpu/kernels/compute_kernels_hess_ac_cudakernel.cu
//

__global__ void compute_kernels_hess_ac_cudakernel(int* ispec_is_acoustic,
                                                   int* d_ibool,
                                                   field* potential_dot_dot_acoustic,
                                                   field* b_potential_dot_dot_acoustic,
                                                   field* b_potential_dot_acoustic,
                                                   realw* rhostore,
                                                   realw* kappastore,
                                                   realw* d_hprime_xx,
                                                   int* d_irregular_element_number,
                                                   realw* d_xix,realw* d_xiy,realw* d_xiz,
                                                   realw* d_etax,realw* d_etay,realw* d_etaz,
                                                   realw* d_gammax,realw* d_gammay,realw* d_gammaz,
                                                   realw xix_regular,
                                                   realw* hess_kl,
                                                   realw* hess_rho_ac_kl,
                                                   realw* hess_kappa_ac_kl,
                                                   realw deltat,
                                                   int NSPEC_AB,
                                                   int gravity) ;


//
// src/gpu/kernels/compute_kernels_hess_el_cudakernel.cu
//

__global__ void compute_kernels_hess_el_cudakernel(int* ispec_is_elastic,
                                                   int* d_ibool,
                                                   realw* accel,
                                                   realw* b_accel,
                                                   realw* b_veloc,
                                                   realw* b_epsilondev_xx,realw* b_epsilondev_yy,realw* b_epsilondev_xy,
                                                   realw* b_epsilondev_xz,realw* b_epsilondev_yz,realw* b_epsilon_trace_over_3,
                                                   realw* hess_kl,
                                                   realw* hess_rho_kl,
                                                   realw* hess_kappa_kl,
                                                   realw* hess_mu_kl,
                                                   realw deltat,
                                                   int NSPEC_AB) ;


//
// src/gpu/kernels/compute_kernels_strength_noise_cuda_kernel.cu
//

__global__ void compute_kernels_strength_noise_cuda_kernel(realw* displ,
                                                           int* free_surface_ispec,
                                                           int* free_surface_ijk,
                                                           int* d_ibool,
                                                           realw* noise_surface_movie,
                                                           realw* normal_x_noise,
                                                           realw* normal_y_noise,
                                                           realw* normal_z_noise,
                                                           realw* sigma_kl,
                                                           realw deltat,
                                                           int num_free_surface_faces) ;


//
// src/gpu/kernels/compute_stacey_acoustic_kernel.cu
//

__global__ void compute_stacey_acoustic_kernel(field* potential_dot_acoustic,
                                               field* potential_dot_dot_acoustic,
                                               int* abs_boundary_ispec,
                                               int* abs_boundary_ijk,
                                               realw* abs_boundary_jacobian2Dw,
                                               int* d_ibool,
                                               realw* rhostore,
                                               realw* kappastore,
                                               int* ispec_is_acoustic,
                                               int SIMULATION_TYPE,
                                               int SAVE_FORWARD,
                                               int num_abs_boundary_faces,
                                               field* b_potential_dot_acoustic,
                                               field* b_potential_dot_dot_acoustic,
                                               field* b_absorb_potential,
                                               int gravity) ;

__global__ void compute_stacey_acoustic_single_kernel(field* potential_dot_acoustic,
                                                      field* potential_dot_dot_acoustic,
                                                      int* abs_boundary_ispec,
                                                      int* abs_boundary_ijk,
                                                      realw* abs_boundary_jacobian2Dw,
                                                      int* d_ibool,
                                                      realw* rhostore,
                                                      realw* kappastore,
                                                      int* ispec_is_acoustic,
                                                      int FORWARD_OR_ADJOINT,
                                                      int SIMULATION_TYPE,
                                                      int SAVE_FORWARD,
                                                      int num_abs_boundary_faces,
                                                      field* b_absorb_potential,
                                                      int gravity) ;

__global__ void compute_stacey_acoustic_undoatt_kernel( field* potential_dot_acoustic,
                                                        field* potential_dot_dot_acoustic,
                                                        int* abs_boundary_ispec,
                                                        int* abs_boundary_ijk,
                                                        realw* abs_boundary_jacobian2Dw,
                                                        int* d_ibool,
                                                        realw* rhostore,
                                                        realw* kappastore,
                                                        int* ispec_is_acoustic,
                                                        int num_abs_boundary_faces,
                                                        int gravity) ;


//
// src/gpu/kernels/compute_stacey_elastic_kernel.cu
//

__global__ void compute_stacey_elastic_kernel(realw* veloc,
                                              realw* accel,
                                              int* abs_boundary_ispec,
                                              int* abs_boundary_ijk,
                                              realw* abs_boundary_normal,
                                              realw* abs_boundary_jacobian2Dw,
                                              int* d_ibool,
                                              realw* rho_vp,
                                              realw* rho_vs,
                                              int* ispec_is_elastic,
                                              int SIMULATION_TYPE,
                                              int SAVE_FORWARD,
                                              int num_abs_boundary_faces,
                                              realw* b_absorb_field) ;

__global__ void compute_stacey_elastic_sim3_kernel(int* abs_boundary_ispec,
                                                   int* abs_boundary_ijk,
                                                   int* d_ibool,
                                                   int* ispec_is_elastic,
                                                   int num_abs_boundary_faces,
                                                   realw* b_accel,
                                                   realw* b_absorb_field) ;

__global__ void compute_stacey_elastic_single_kernel(realw* veloc,
                                                     realw* accel,
                                                     int* abs_boundary_ispec,
                                                     int* abs_boundary_ijk,
                                                     realw* abs_boundary_normal,
                                                     realw* abs_boundary_jacobian2Dw,
                                                     int* d_ibool,
                                                     realw* rho_vp,
                                                     realw* rho_vs,
                                                     int* ispec_is_elastic,
                                                     int FORWARD_OR_ADJOINT,
                                                     int SIMULATION_TYPE,
                                                     int SAVE_FORWARD,
                                                     int num_abs_boundary_faces,
                                                     realw* b_absorb_field) ;

__global__ void compute_stacey_elastic_undoatt_kernel(realw* veloc,
                                                      realw* accel,
                                                      int* abs_boundary_ispec,
                                                      int* abs_boundary_ijk,
                                                      realw* abs_boundary_normal,
                                                      realw* abs_boundary_jacobian2Dw,
                                                      int* d_ibool,
                                                      realw* rho_vp,
                                                      realw* rho_vs,
                                                      int* ispec_is_elastic,
                                                      int num_abs_boundary_faces) ;


//
// src/gpu/kernels/enforce_free_surface_cuda_kernel.cu
//

__global__ void enforce_free_surface_cuda_kernel(field_p potential_acoustic,
                                                 field_p potential_dot_acoustic,
                                                 field_p potential_dot_dot_acoustic,
                                                 const int num_free_surface_faces,
                                                 const int* free_surface_ispec,
                                                 const int* free_surface_ijk,
                                                 const int* d_ibool,
                                                 const int* ispec_is_acoustic) ;


//
// src/gpu/kernels/get_maximum_field_kernel.cu
//

__global__ void get_maximum_field_kernel(field* array, int size, realw* d_max);


//
// src/gpu/kernels/get_maximum_vector_kernel.cu
//

__global__ void get_maximum_vector_kernel(realw* array, int size, realw* d_max);


//
// src/gpu/kernels/kernel_3_accel_cuda_device.cu
//

__global__ void kernel_3_accel_cuda_device(realw_p accel,
                                           int size,
                                           realw_const_p rmassx,
                                           realw_const_p rmassy,
                                           realw_const_p rmassz) ;


//
// src/gpu/kernels/kernel_3_acoustic_cuda_device.cu
//

__global__ void kernel_3_acoustic_cuda_device(field* potential_dot_acoustic,
                                                field* potential_dot_dot_acoustic,
                                                field* b_potential_dot_acoustic,
                                                field* b_potential_dot_dot_acoustic,
                                                int simulation_type,
                                                int size,
                                                realw deltatover2,
                                                realw b_deltatover2,
                                                realw_const_p rmass_acoustic) ;

__global__ void kernel_3_acoustic_single_cuda_device(field* potential_dot_acoustic,
                                                     field* potential_dot_dot_acoustic,
                                                     int size,
                                                     realw deltatover2,
                                                     realw_const_p rmass_acoustic) ;


//
// src/gpu/kernels/kernel_3_cuda_device.cu
//

__global__ void kernel_3_cuda_device(realw_p veloc,
                                     realw_p accel,
                                     int size,
                                     realw deltatover2,
                                     realw_const_p rmassx,
                                     realw_const_p rmassy,
                                     realw_const_p rmassz) ;


//
// src/gpu/kernels/kernel_3_veloc_cuda_device.cu
//

__global__ void kernel_3_veloc_cuda_device(realw_p veloc,
                                           realw_p accel,
                                           int size,
                                           realw deltatover2) ;


//
// src/gpu/kernels/noise_read_add_surface_movie_cuda_kernel.cu
//

__global__ void noise_read_add_surface_movie_cuda_kernel(realw* accel, int* d_ibool,
                                                         int* free_surface_ispec,
                                                         int* free_surface_ijk,
                                                         int num_free_surface_faces,
                                                         realw* noise_surface_movie,
                                                         realw* normal_x_noise,
                                                         realw* normal_y_noise,
                                                         realw* normal_z_noise,
                                                         realw* mask_noise,
                                                         realw* free_surface_jacobian2Dw) ;

    // ========= Invalid __global__ read of size
    // 4 ========= at 0x00000cd8 in
    // compute_add_sources_cuda.cu:260:noise_read_add_surface_movie_cuda_kernel
    // ========= by thread (0,0,0) in block (3443,0) ========= Address;


//
// src/gpu/kernels/prepare_boundary_accel_on_device.cu
//

__global__ void prepare_boundary_accel_on_device(realw* d_accel, realw* d_send_accel_buffer,
                                                 const int num_interfaces_ext_mesh,
                                                 const int max_nibool_interfaces_ext_mesh,
                                                 const int* d_nibool_interfaces_ext_mesh,
                                                 const int* d_ibool_interfaces_ext_mesh) ;


//
// src/gpu/kernels/prepare_boundary_potential_on_device.cu
//

__global__ void prepare_boundary_potential_on_device(field* d_potential_dot_dot_acoustic,
                                                     field* d_send_potential_dot_dot_buffer,
                                                     const int num_interfaces_ext_mesh,
                                                     const int max_nibool_interfaces_ext_mesh,
                                                     const int* d_nibool_interfaces_ext_mesh,
                                                     const int* d_ibool_interfaces_ext_mesh) ;


//
// src/gpu/kernels/process_smooth.cu
//

__global__ void process_smooth(realw_const_p xstore_me,
                               realw_const_p ystore_me,
                               realw_const_p zstore_me,
                               realw_const_p xstore_other,
                               realw_const_p ystore_other,
                               realw_const_p zstore_other,
                               realw_const_p data_other,
                               const realw sigma_h2_inv, const realw sigma_v2_inv,
                               const int iker,
                               const int nspec_me,
                               const int nspec_other,
                               const realw v_criterion, const realw h_criterion,
                               realw_const_p integ_factor,
                               realw_p data_smooth,
                               realw_p normalisation);

__global__ void normalize_data(realw_p data_smooth,
                               realw_const_p normalisation,
                               int nker,
                               int nspec_me);


//
// src/gpu/kernels/synchronize_boundary_accel_on_device.cu
//

__global__ void synchronize_boundary_accel_on_device(realw* d_accel, realw* d_send_accel_buffer,
                                                     const int num_interfaces_ext_mesh,
                                                     const int max_nibool_interfaces_ext_mesh,
                                                     const int* d_nibool_interfaces_ext_mesh,
                                                     const int* d_ibool_interfaces_ext_mesh) ;


//
// src/gpu/kernels/transfer_surface_to_host_kernel.cu
//

__global__ void transfer_surface_to_host_kernel(int* free_surface_ispec,
                                                int* free_surface_ijk,
                                                int num_free_surface_faces,
                                                int* d_ibool,
                                                realw* displ,
                                                realw* noise_surface_movie) ;

#endif  // KERNEL_PROTO_CUDA_H

