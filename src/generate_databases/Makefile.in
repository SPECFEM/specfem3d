#=====================================================================
#
#               S p e c f e m 3 D  V e r s i o n  2 . 1
#               ---------------------------------------
#
#          Main authors: Dimitri Komatitsch and Jeroen Tromp
#    Princeton University, USA and University of Pau / CNRS / INRIA
# (c) Princeton University / California Institute of Technology and University of Pau / CNRS / INRIA
#                            April 2011
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
#
#=====================================================================
#
# United States Government Sponsorship Acknowledged.
#

# @configure_input@

FC = @FC@
FCFLAGS = #@FCFLAGS@
MPIFC = @MPIFC@
MPILIBS = @MPILIBS@
FLAGS_CHECK = @FLAGS_CHECK@
FLAGS_NO_CHECK = @FLAGS_NO_CHECK@
FCFLAGS_f90 = @FCFLAGS_f90@

SHARED = ../shared/

# E : executables directory
E = ../../bin
# O : objects directory
O = ../../obj/gen
# L : libraries directory
L = ../../lib
# Output files directory
OUTPUT=../../OUTPUT_FILES

FCCOMPILE_CHECK =@FCENV@ ${FC} ${FCFLAGS} $(FLAGS_CHECK) -I${SHARED}
FCCOMPILE_NO_CHECK =@FCENV@ ${FC} ${FCFLAGS} $(FLAGS_NO_CHECK) -I${SHARED}
MPIFCCOMPILE_CHECK =@FCENV@ ${MPIFC} ${FCFLAGS} $(FLAGS_CHECK) -I${SHARED}
MPIFCCOMPILE_NO_CHECK =@FCENV@ ${MPIFC} ${FCFLAGS} $(FLAGS_NO_CHECK) -I${SHARED}
@COND_MPI_TRUE@FCLINK = $(MPIFCCOMPILE_NO_CHECK)
@COND_MPI_FALSE@FCLINK = $(FCCOMPILE_NO_CHECK)

CC = @CC@
CFLAGS = @CFLAGS@ $(CPPFLAGS)
CPPFLAGS = @CPPFLAGS@ $(COND_MPI_CPPFLAGS)
@COND_MPI_TRUE@COND_MPI_CPPFLAGS = -DWITH_MPI
@COND_MPI_FALSE@COND_MPI_CPPFLAGS =

AR = ar
ARFLAGS = cru
RANLIB = ranlib

libgendatabases_a_OBJECTS = \
	$O/generate_databases_par.o \
	$O/tomography_par.o \
	$O/assemble_MPI_scalar.shared.o \
	$O/calc_jacobian.o \
	$O/fault_generate_databases.o \
	$O/check_mesh_resolution.shared.o \
	$O/create_name_database.shared.o \
	$O/create_mass_matrices.o \
	$O/create_regions_mesh.o \
	$O/create_serial_name_database.shared.o \
	$O/define_derivation_matrices.shared.o \
	$O/detect_surface.shared.o \
	$O/exit_mpi.shared.o \
	$O/finalize_databases.o \
	$O/generate_databases.o \
	$O/get_absorbing_boundary.o \
	$O/get_attenuation_model.shared.o \
	$O/get_cmt.shared.o \
	$O/get_coupling_surfaces.o \
	$O/get_element_face.shared.o \
	$O/get_force.shared.o \
	$O/get_global.o \
	$O/get_jacobian_boundaries.shared.o \
	$O/get_model.o \
	$O/get_MPI.o \
	$O/get_perm_color.o \
	$O/get_shape2D.shared.o \
	$O/get_shape3D.shared.o \
	$O/get_value_parameters.shared.o \
	$O/gll_library.shared.o \
	$O/hex_nodes.shared.o \
	$O/lagrange_poly.shared.o \
	$O/model_1d_cascadia.o \
	$O/model_1d_prem.o \
	$O/model_1d_socal.o \
	$O/model_aniso.o \
	$O/model_default.o \
	$O/model_external_values.o \
	$O/model_ipati.o \
	$O/model_gll.o \
	$O/model_salton_trough.o \
	$O/model_tomography.o \
	$O/netlib_specfun_erf.shared.o \
	$O/param_reader.cc.o \
	$O/prepare_assemble_MPI.shared.o \
	$O/read_topo_bathy_file.shared.o \
	$O/read_parameter_file.shared.o \
	$O/read_partition_files.o \
	$O/read_value_parameters.shared.o \
	$O/recompute_jacobian.shared.o \
	$O/save_arrays_solver.o \
	$O/save_header_file.shared.o \
	$O/setup_color_perm.o \
	$O/setup_mesh.o \
	$O/sort_array_coordinates.shared.o \
	$O/utm_geo.shared.o \
	$O/write_VTK_data.shared.o \
	$O/memory_eval.o \
	$(EMPTY_MACRO)

KEEP_MAIN_PROGRAM_SEPARATE = $O/program_generate_databases.o

# objects toggled between the parallel and serial version
@COND_MPI_TRUE@COND_MPI_OBJECTS = $O/parallel.o
@COND_MPI_FALSE@COND_MPI_OBJECTS = $O/serial.o

LIBGENDATABASES = $L/libgendatabases.a

# objects for the pure Fortran version
@COND_PYRE_FALSE@XGENERATE_DATABASES_OBJECTS = $(LIBGENDATABASES)

####
#### targets
####

# default targets for the pure Fortran version
@COND_PYRE_FALSE@DEFAULT = \
@COND_PYRE_FALSE@	generate_databases \
@COND_PYRE_FALSE@	specfem3D \
@COND_PYRE_FALSE@	combine_vol_data \
@COND_PYRE_FALSE@	combine_surf_data \
@COND_PYRE_FALSE@	convolve_source_timefunction \
@COND_PYRE_FALSE@	$(EMPTY_MACRO)

default: $(DEFAULT)

all: clean default

backup:
	cp *f90 *h README_SPECFEM3D DATA/Par_file* Makefile go_generate_databases* go_mesher* go_solver* mymachines bak

bak: backup

generate_databases: xgenerate_databases



####
#### rules for executables
####

# rules for the pure Fortran version
@COND_PYRE_FALSE@xgenerate_databases: $(XGENERATE_DATABASES_OBJECTS) $(COND_MPI_OBJECTS) $(KEEP_MAIN_PROGRAM_SEPARATE)
@COND_PYRE_FALSE@	${FCLINK} -o ${E}/xgenerate_databases $(KEEP_MAIN_PROGRAM_SEPARATE) $(COND_MPI_OBJECTS) $(XGENERATE_DATABASES_OBJECTS) $(MPILIBS)
@COND_PYRE_FALSE@
@COND_PYRE_FALSE@# solver also depends on values from mesher


clean:
	rm -f $O/* *.o *.gnu *.mod $(OUTPUT)/timestamp* $(OUTPUT)/starttime*txt work.pc* \
        xgenerate_databases \
        xconvolve_source_timefunction \
        xcreate_movie_shakemap_AVS_DX_GMT xcombine_vol_data xcombine_surf_data

###
### rule for the archive library
###

$L/libgendatabases.a: $(libgendatabases_a_OBJECTS)
	-rm -f $L/libgendatabases.a
	$(AR) $(ARFLAGS) $L/libgendatabases.a $(libgendatabases_a_OBJECTS)
	$(RANLIB) $L/libgendatabases.a

####
#### rule to build each .o file below
####

###
### not optimized flags (not dependent on values from mesher anymore)
###

$O/%.o: %.f90 $(SHARED)constants.h
	${FCCOMPILE_CHECK} -c -o $@ $<

$O/%.shared.o: $(SHARED)%.f90 $(SHARED)constants.h
	${FCCOMPILE_CHECK} -c -o $@ $<

###
### C compilation
###

force_ftz.o: $(SHARED)force_ftz.c ../../config.h
	${CC} -c $(CPPFLAGS) $(CFLAGS) -I../.. -o $O/force_ftz.o $(SHARED)force_ftz.c

$O/%.cc.o: $(SHARED)%.c ../../config.h
	${CC} -c $(CFLAGS) $(MPI_INC) -o $@ $(SHARED)$< -I../../

###
### MPI compilation without optimization
###

$O/parallel.o: $(SHARED)constants.h $(SHARED)parallel.f90
	${MPIFCCOMPILE_CHECK} -c -o $O/parallel.o $(SHARED)parallel.f90


###
### serial compilation without optimization
###

$O/serial.o: $(SHARED)constants.h $(SHARED)serial.f90
	${FCCOMPILE_CHECK} -c -o $O/serial.o $(SHARED)serial.f90

$O/program_generate_databases.o: $(SHARED)constants.h program_generate_databases.f90
	${FCCOMPILE_CHECK} -c -o $O/program_generate_databases.o program_generate_databases.f90

