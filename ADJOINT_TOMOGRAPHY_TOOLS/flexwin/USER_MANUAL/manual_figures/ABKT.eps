%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: ABKT.eps
%%Creator: Adobe Illustrator(R) 13.0
%%For: Carl Tape
%%CreationDate: 3/23/09
%%BoundingBox: 0 0 464 300
%%HiResBoundingBox: 0 0 463.8614 299.5870
%%CropBox: 0 0 463.8614 299.5870
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 13.0.2%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 13.0.2 x434 R agm 4.4379 ct 5.1039%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 84 8%%BeginData: 11942 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FF7DA8FFA8A8FFA8FFFFFFA8FFA8FFA8FD09FFA8A87EA97EA97EA9%A8FFFFFF7EA97EA9A87E7EA97EA97EA97EA97EA8FFFFA8A97EA97EA2A8A9%7EA8FFA87EA97EA97EA97EFD36FFA8525227F8FD04275227525227F82727%5227FD06FFFD04A9CBA9A9A9FFFFFFA8FD04A9FF7EA9A9CBA9A9A8A9A9A9%7EFFFFA8A9FFA9A97EFFA9A97EFFA8A9A9CBFD04A9CFFD36FFFD047D527D%7DA87D7D27A87D7D7DA87D7DFD06FFA8FD04A9FFA9A9A8FFFFFFA9FFFD07%A9FFA9A97EFFA9A9FFFFA8A9A9FFA9A9A9FFA9A9FFA9A9CAA8FFA9A97EFD%40FFA8A8FD0DFFA87EFD05A9A8A8FFFFA8FD05A97EFD05A9A8A8A9A97EFF%FFA8A8A9A9A97EA9A9A97EFFA8A9A1FD04A9A8A8FD4EFFA8A9A9CBA9FFA9%A9A8FFFFFFA9FFA9CBA9A9A9FFA9FFA9A97EFFA9A9FFFFA8A9A9FFA9A9A9%FFA9A9FFFFA9CAA2FFA9FFA8FD4FFFA8A2FD06A9A8FFFFA8FD05A97EFD05%A9A8A8A9A97EFFFFA9A8A9A9A97EA9A9A97EFFA8A9A2A2A2A9A9A8A8FD4E%FFA8A9A9FFFD04A9A8FFFFFFA9A9A9FFA9A8A8FFFD04A97ECBA9A9FFFFA8%FD09A9FFA9A9CB9BCAA9FFA8FD4FFFA8A8FD05A97EA9FFFFA8FD05A97EFD%05A97EA8A9A97EFFFFA87EA9A9A97EA9A9A97EFFA8A977A1A2A9A9A8A8FD%4EFFA8A9A9FFA9CBA9A9A8FFFFFFA9CBA9FFA9A9A9FFA9CBA9A97EFFA9A9%FFFFA8A9A9FFA9A9A9CBA9A9FFA9A9A29BA2A9FFA8FD4FFFA9A8FD05A9A8%A9FFFFA8FD04A9FF7EFD05A9A2A9A8A97EFFFFA8A9A2A2A97EA8A9A97EFF%A8A9779B76A9A9A9FD4FFFA8A9A9AFA9FFA9A9A8FFFFFFA9FFA9A9A2A9A9%FFA9A9A1AF84A2A1A9CAFFA8A97DA1A2A276A8A9A9FFFFA2A1707DA2A2A8%FD36FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8CAA8A87E%A87DA17DA27EA2A8CAA2A27EA2777776A27DA177A17D7D777D769AA1A177%A17794769B70A152A87776767752A2777DA1CAA1CAA8CAA1A8A1CAA1A1A1%CAFD04A17DCA7DA8A1A87DFD05A8A1A8A8CAA8CAA8CAA8A8A8CAA8A87DA8%7DA87DCAA8FFA8FFCAA8CBA8CAA8CACACAA8FFA8CAA8CBA8CAA8CBA8CAA8%FFA8CAA1A2A2A277A8A1A2A1FFCAA87EA8A2A176A177A2A2A177A17DA176%A1A1C3A17676A1A17D77A1777DA1A170A1767DA2A276CACACAA8FFA1CAA1%FFA1CAA1CAA8CAA1CAA1A8A1CAA1FFA1CAA8CAA8CAA1CAA1CAA8CAA8CAA8%CAA8FFA8CAA8A8A1A8A1CAA8CAA8FFA8FD19FFA9A9AFA9A9A9AFA9A9FFFF%A8FD05A97EA9A9A9A2A8A2A87EA17EFFA1CB7EA176A976A17DFF7EFFA87E%779B77A1A9A8FD4FFFA8A9A9FFFD04A9A8FFFFFFA9A9A9FFA9A9A9FFFD04%A97EFFA9A9FFFFA8A9A9A2A8A2A8A9A9A9FFA9A2A19BA977FFA8FD4FFFA8%A8FD05A97EA9FFFFA8FD05A97EFD05A97EA8A9A97EFFFFA87EA9A9A97EA9%A9A97EFFA8A89BA1A8A8A9A8A8FD4EFFA8A9A9FFA9CBA9A9A8FFFFFFA9CB%A9FFA9A9A9FFA9CBA9A97EFFA9A9FFFFA8A9A9FFA9A9A9CBA9A9FFA9A8A8%77FFA9FFA8FD4FFFA9A8FD05A9A8A9FFFFA8FD04A9CB7EFD05A9A2A8A9A9%7EFFFFA8A2A9A9A97EA9A9A97EFFA8A9A9A2FD04A9CFFD4EFFA8FD04A9FF%A9A9A8FFFFFFA9FFFD07A9FFA9A97EFFA9A9FFFFA8A9A9FFA9A9A9FFA9A9%FFA9A9A9A1CBA9A97EFD4FFFA87EFD05A9A8A8FFFFA8FD05A97EFD05A9A8%A8A9A97EFFFFA8A8A9A9A97EA9A9A97EFFA8A9A9A2A8A9A9A8A8FD4EFFA8%A9A9CBA9FFA9A9A8FFFFFFA9FFA9CBA9A9A9FFA9FFA9A97EFFA9A9FFFFA8%A9A9FFA9A9A9FFA9A9FFFFA9CBA1CBA9FFA8FD4FFFA8A2FD06A9A8FFFFA8%FD05A97EFD05A9A8A8A9A97EFFFFA9A8A9A9A97EA9A9A97EFFA8A9A9A2A8%A9A9A8A8FD4EFFA8A9A9FFA9FFA9CBA8FFFFFFA9FFA9FFA9A9A9FFA9FFA9%CBA8FFA9A9FFFFA8CBA9FFA9A9A9FFA9A9FFA9A9FFA2CBA9FFA8FD36FFFD%19A87E537E537E7D7E53A8A8A87D7D7D7E537E537D537E7D7E537D7D7E53%A8A87D537E7D7D537E7D7E53A87D7D77777D7E537DFD3DA87D7DFD0CA87D%FD05A87DA8A8A87DA87D7DFD04A87DA8A8A87DA8A87D7DA8A8A87DFD07A8%52A8A8A87DA8A8A87DA8A8A87D7DFD0CA87DFD0BA87DFD0CA87D7DFD0BA8%52FD04A8FD08FFA8FD3FFFCFFD25FFA8FD28FFCBFFA8CBA8A9A8FFA8A9FD%04FFA8FFA8A9A8A9A8A9A8FFA8A9A8FFA8A9FFFFFFA9A8FFA8A8A8FFA8A9%FFFFA8A9A8FFA8FFA8FD37FFFD047DA8A8FD047DA8FD0BFFA9A9A87EA9A8%A97EA97EA8FFFFA8A97EA9A8A97DA9A8A97EA97E7EA8A97EFFFFA87EA97E%A97EA97EA97EFF7EA9A8A97EA9A9A8A8FD36FF277D7D52277D527D525252%FD0BFFA9FFA8A9A9FFA9FFA9A9A8FFFFFFA9FFA9CBA9A9A9FFA9FFA9A97E%FFA9A9FFFFA8A9A9FFA9A9A9FFA9A9FFFFA9A9A3FFA9FFA8FD37FF7D7DA8%7D7D52A852A87DA8FD0AFFA9CBA9A8A2FD06A9A8FFFFA8FD05A97EFD05A9%A8A8A9A97EFFFFA9A8A9A9A97EA9A9A97EFFA8A97F7FA9A9A9A8A8FD4CFF%A9FFA8A9A9A97FA9A9A9A8FFFFFFA9A9A9CBA9A8A8FFFD04A97ECBA9A9FF%FFA8FD09A9FFA9A9A97FA9A9FFA8FD4CFFA9A9A9A8A8A97F7FA9A97EA9FF%FFA8A9A9A97F7F7EFD05A97EA8A9A97EFFFFA87EA9A9A97EA9A9A97EFFA8%A97F7FA9A9A9A8A8FD4CFFA9FFA8A9A9A97FA9A9A9A8FFFFFFA9CBA9A97F%A9A9FFA9CBA9A97EFFA9A9FFFFA8A9A9FFA9A9A9CBA9A9FFA9A9A97FA9A9%FFA8FD4EFFA9A9A8A97FA9A9A9A8A9FFFFA8A9A9A97FA97EFD05A9A2A8A9%A97EFFFFA8A2A9A9A97EA9A9A97EFFA8A97FFD05A9CFFD4BFFA9A9FFA8A9%A9A97FA9A9A9A8FFFFFFA9FFA9A97FFD04A9FFA9A97EFFA9A9FFFFA8A9A9%FFA9A9A9FFA9A9FFA9A9A97FA9A9A97EFD4CFF7FFFA9A87EA97FA97FA9A8%A8FFFFA8A9A9A97FA37EFD05A9A8A8A9A97EFFFFA8A8A9A9A97EA9A9A97E%FFA8A97FA97FA9A9A8A8FD40FFA9FFA9FFFFFFA9FFA9A97FA9A9FFA8FD07%A9A8FFFFFFA9FFA9A97FA9A9FFA9FFA9A97EFFA9A9FFFFA8A9A9FFA9A9A9%FFA9A9FFFFFD05A9FFA8FD3EFFA9A9A9FFA9A9A9FFA9FFA9FFA9FFA9FFA9%A8A8FF7FA97FCBA9A8FFFFA8A9A9CB7FA97EFD05A9A8A8A9A97EFFFFA9A8%A9A9A97EA9A9A97EFFA8A97FA97FA9A9A8A8FD3CFFA9FD11FFA8A97FFD05%A9A8FFFFFFFD05A97EA8FFA9A979A97EFFA9A9FFFFA8A9A9FFFD06A9FFA9%7FFD04A9FFA8FD3CFFA9A9FD10FFA9A87E7F7FA97FA97EA9FFFFA8A9A9A9%7FA978A9A9A97F7F7EA8A9A97EFFFFA87EA97FA97EA9A9A97EFFA8A97FA9%7FA9A9A8A8FD07FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FF%A9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FD07FFA9FD12FF%A8A97FFD05A9A8FFFFFFA9FFA9A9A97FA9FFA9A97FA9A8CB7FA9FFFFA8CB%A37FA9A9A9CBA9A9FFA97FFD04A9FFA8FD07FFA9FD33FFA9FD13FFA97E7F%7FFF7F7FA8FFFFFFA8A9A9A97FA97EA9A9A97FA97EA8A37F7EFFFFA8A8A9%7FA37E7FA9A97EFFA87FA9A97FA9A9A9CFFD3AFFA9FD13FF7EFD05A97FA9%A8FFFFFFA9FF7FA9A97FA97F7FA9A9A3A2A9A9A9FFFFA8A97FA97F7F7FA9%A9A9FFFF7FFD05A97EFD07FFA9FD32FFA9FD14FFA87EFD05A97EA8FFFFA8%A97F7FA9A97EA97FA9A9A97EA87FA97EFFA9A8A8A97FA97EA97FFF7EFF7E%7FA9A97FA9A9A8A8FD07FFA9FF7FA9FFFFA9A9FFFFA9FD27FFA9FD14FF7E%FD04A9CBA9A3A8FFFFFF7FA3A9A9A97F7FFD05A97EA9A97FA9FF7E7F7FFF%7F7FFD04A9FFA97FCBFD04A97EFD07FFA9FFFFFFA9FFFFA9A9FFA9FFA9FD%22FFA9FFA9A9A9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA97E7EA9%7FA97FA97FA8A9FFA87F7FA97FA9547FA3A97FA97E7E7FA97EA9A9A3557F%A97F54A97FA97EFF7E7FA3A97F7FA37EA8FFA9FFA9FF7FA9FFFFFFA9A9FF%A9A97FFFA9A9A9FD24FFA9FD15FF7E7FA9FFA9CBA9A9A8FFA9FF7FA9A9FF%A9A8A8FFA9CBA9A97EFD04A9FFA8A9A9FF7F7FFD04A9FFA97FFFA9FF7FA9%A8FD07FFA9FFA9FFA9FFA9FFA9FD26FFA9FFA9FD16FFA97EFD05A97EA9A9%FF7E7FFD04A97EFD05A97E7EA9A978A9FFA87EA9A9A97ECBA3A37EFF7EFD%05A97FA8A8FD04FFA9A9FF7FFFFFFFA9A9A9FD05FFA9FD22FFA9FD17FFA8%A9A9FFA9CBA9A97ECBFFA9A9FFA9FFA9A9A9FFA9CBA9A9A8FFA9A9FFFFA8%A9A9CBA9A9A9CB7FA9FFA9A9FFA9CBA9A97EFD05FFA9FD06FFA9A9FD07FF%A9FD3AFFA9A9A9FFA9A9A9FFFFFFA8FD04A9FF7EA9A9FFFD06A97EFFFFA9%A9FFA9A97EFFA9A97EFF7EA9A9FFFD07A9FFA9FD11FFA9FFA9FD1DFFA87D%A87DA87DA87DA87DA87DA87DA87DA87DA8A8A87DA87DA87D7E7D7E7D7E7D%7E7DA8A87D7D7E7D7E7D7D7D7E7D7E7D7E537E7D7D7DA87D7E7D7E537D7D%7E7D777D7E7D7E7D7E7D7D7DA87EA87DA8A7A87DA8A8A87DA8A7A87DA87D%A87DA8A7A87DA87E7E7D7E7D7E7DA87EA87DA87DA87DA87EA87DA87EA87D%A87DA87DA87EA8FFA8FFA8FFA8A87DFFA8FFA8FFA8FFA8FFA8FFA87DA8FF%A8FFA8FFA8CFA8FFA87D7DFFA8FFA8FFA8CFA8FFA8FF7DA8A8FFA8FFA8FF%A8FFA8FFA87DA8FFA8FFA8FFA8FFA8CFA8A87DFFA8FFA8FFA8FFA8FFA8FF%A87DA8FFA8FFA8FFA8FFA8FFA87DA8FFA8FFA8FFA8FFA8FFA8FF7DA8A8A9%A8FFA8A9A8FFA8FFA87DA8FFA8FD9BFFA8A9A8A8A8A9A8FD04FFA8A8A9A8%A8A8A9A8A8A8FFA8A8A8A9A8FFFFFFA8A8A8FFA8A8A8A9A8FFA8A9A8A8A8%FFA8A9FD37FF52A8A8FFFFFF7DA8A8FFA8FFA8FD0BFFA8FD07A9A8FFFFFF%A8FD04A9A87EFD05A97EA9A9A9FFFFA8A9A9A9A2FD05A9FFA97EA9A1A9A9%A97EFD36FFA82752522752F82727522727F8277DFD0AFFA8A8FD05A97EA9%FFFFA8FD05A97EFD05A97EA8A9A97EFFFFA87EA9A9A97EA9A9A97EFFA8A9%A9A2FD04A9A8FD36FF7DA87DA87D7D7DA87D527D7D52FD0BFFA8A9A9FFA9%CBA9A9A8FFFFFFA9CBA9FFA9A9A9FFA9CBA9A97EFFA9A9FFFFA8A9A9FFA9%A9A9CBA9A9FFA9A9CBA2CBA9FFA8FD4FFFA9A8FD05A9A8A9FFFFA8FD04A9%CB7EFD05A9A2A8A9A97EFFFFA8A2A9A9A97EA9A9A97EFFA8A9A2A8FD04A9%CFFD4EFFA8FD04A9FFA9A9A8FFFFFFA9FFFD07A9FFA9A97EFFA9A9FFFFA8%A9A9FFA9A9A9FFA9A9FFA9A9CBA2CBA9A97EFD4FFFA87EFD05A9A8A8FFFF%A8FD05A97EFD05A9A8A8A9A97EFFFFA8A8A9A9A97EA9A9A97EFFA8A9A2A2%A2A9A9A8A8FD4EFFA8A9A9CBA9FFA9A9A8FFFFFFA9FFA9CBA9A9A9FFA9FF%A9A97EFFA9A9FFFFA8A9A9FFA9A9A9FFA9A9FFFFA9CBA2CBA9FFA8FD4FFF%A8A2FD06A9A8FFFFA8FD05A97EFD05A9A8A8A9A97EFFFFA9A8A9A9A97EA9%A9A97EFFA8A9A2A2A8A9A9A8A8FD4EFFA8A9A9FFFD04A9A8FFFFFFA9A9A9%FFA9A8A8FFFD04A97ECBA9A9FFFFA8FD09A9FFA9A9CBA2A9A9FFA8FD4FFF%A8A8FD05A97EA9FFFFA8FD05A97EFD05A97EA8A9A97EFFFFA87EA9A9A97E%A9A9A97EFFA8A9A2A8A2A9A9A8A8FD4EFFA8A9A9FFA9CBA9A9A8FFFFFFA9%CBA9FFA9A9A9FFA9CBA9A97EFFA9A9FFFFA8A9A9FFA9A9A9CBA9A9FFA9A9%CBA9CBA9FFA8FD4FFFA9A8FD05A9A8A9FFFFA8FD04A9CB7EFD05A9A2A8A9%A97EFFFFA8A2A9A9A97EA9A9A97EFFA8A9A2A9A2A9A9A9CFFD4EFFA8FD04%A9FFA9A9A8FFFFFFA9FFFD07A9FFA9A97EFFA9A9FFFFA8A9A9FFA9A9A9FF%A9A9FFA9A8CBA9CBA9A97EFD4FFFA87EFD05A9A8A8FFFFA8FD05A97EFD05%A9A8A8A9A97EFFFFA8A8A9A9A97EA9A9A97EFFA8A97D7EA2A9A9A8A8FD4E%FFA8A9A9CBA9FFA9A9A8FFFFFFA9FFA9CBA9A9A9FFA9FFA9A97EFFA9A9FF%FFA8A9A9FFA9A9A9FFA9A9FFFFA9A27ECBA9FFA8FD4FFFA8A2FD06A9A8FF%FFA8FD05A97EFD05A9A8A8A9A97EFFFFA9A8A9A9A97EA9A9A97EFFA8A97D%7EA2AFA9A8A8FD4EFFA8A9A9FFFD04A9A8FFFFFFA9A9A9FFA9A8A8FFFD04%A97ECBA9A9FFFFA8A9A9CBFD06A9FFA9A2A8A2A27EFFA8FD4FFFA8A8FD05%A97EA9FFFFA8FD05A97EFD05A97EA8A9A97EFFFFA87EA9A9A97EAFA9A97E%FFA8A87EA9767EA9A8A8FD4EFFA8A9A9FFA9CBA9A9A8FFFFFFA9CBA9FFA9%A9A9FFA9CBA9A97EFFA9A9FFFFA8FF7EA1A9A8A8FFA9A9FFA9A2A8A89BA1%FFA8FD4FFFA9A8FD05A9A8A9FFFFA8FD04A9FF7EFD05A9A8A97E7E7EFFFF%A87EA29BA877A1A2A97EFFA8A2A2A87DA2A9A9CFFD4EFFA8FD04A9FFA9A9%A8FFFFFFA9FFFD07A9CBA1A97EA29BA8FFFFA9A9A1A9A1A27EA2A9A9FFFF%7DA97EA9A2A284FD4FFFA87EFD05A9A8A8FFFFA8A9A9A97E777DA9A9A977%7DA2847DA27DA8A1A177A2A9A17DAF77A97EFF7E7DA9A97EA976A8AEFD05%FFA8FFFFFFA1A8FD06FFA8FD1CFFA8A8FD1EFFA8FFA9CBA2CBA9A9A9FFFF%FFA9FFA9A2A2A1A2A2A1CBA9A177CBA9A1A8FFA1A1A9FFA1A2AFCBA17EAE%A2A8FFA9FFA9CB77FD05FFCACAA8FFCAFFA8FFFFCAA1FFA8CAA1CAFFFFAF%FFA8FFFFFFA8FFA8FD0DFFA8A8A8FD06FF7D7D7DA17D7D7DA17D7D7DA17D%7D7DA17D7D7DA17D7D7DA17D7D537D52764B76527D7DA77D775277527E4B%77527D597E5252537E4B7DA87E7D7E7D76527E7D7752A1767D7D7E7D7E59%5276A1767D767D7DA1767D847D767D7D7D52A87D7D7676527D52FD047DA8%7D7D767D767D7DA17D7D7DA1767D7DA87DA87D7D7DA17DA1FFA8FFA8FFA8%FFA8A1FFFFA8FFA8FFA8FFA8FFA8A87DFFA8FFA8FFA8FFAFFFAFFF7DA8A8%FFA8FFA8FFA8FFA8FFFF7DA8FFFFFFA8FFFFFFA8FFAEFF7DFFA8FFA8FFA8%FFA8FFA8FFA8A8FFFFA8FFA8FFA8FFAFFFAFA87DFFA8FFAFFFA8FFFFFFCA%FF7DA8A8FFA8FFA8FFCAFFA8FFFF7DA8FFA8FFA8FFFFFFA8FFCAFF7DFFA8%FFA8FD08FFA8FD0BFFA8FD33FFA8FD3EFF7D7DFD0AFF527D527DFD07FFA8%FD047D52FD07FF7DA8FD047DFD07FF7D7D7D527DA8FD07FF7D52527D52A8%FD07FF7D52A87D7D7DFD06FFA8527D525252FD07FFFD047D527DFD07FFA8%527D7D527DFD09FF7D27FD09FFA87D7D5227FD07FF7D5252522752A8FD06%FF525252272752FD07FF27522727277DFD07FF7DF852275252FD07FF2727%2752277DFD06FF7D272727F852A8FD06FF7D2752272727FD07FF27272752%F852FD21FFA8FFFFFFA8FD07FFA8FFA8FFA8FD09FFA8FD0BFFA8FFA8FFA8%FD0BFFA8FD09FFA8FFA8FFA8FD09FFA8FFA8FD09FFA8FFA8FFA8FD81FFFF%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                              
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 73 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		clonedict
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: (Page 1) 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.1-c036 46.277092, Fri Feb 23 2007 14:16:18        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/"
            xmlns:xapGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xap:CreatorTool>Adobe Illustrator CS3</xap:CreatorTool>
         <xap:CreateDate>2008-05-28T07:46:04-07:00</xap:CreateDate>
         <xap:ModifyDate>2009-03-23T20:22:56-07:00</xap:ModifyDate>
         <xap:MetadataDate>2009-03-23T20:22:56-07:00</xap:MetadataDate>
         <xap:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xapGImg:width>256</xapGImg:width>
                  <xapGImg:height>168</xapGImg:height>
                  <xapGImg:format>JPEG</xapGImg:format>
                  <xapGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAqAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A6n508ofm3P5m1nVPKWpw&#xA;2S3cEMdlLdXU0wj4mD1FitDH6MVfSk68jVuQYciAqlVt5M/5yLDXEcvmm2iie4nnjeJkLUkN3LGi&#xA;+pavRRLJBVT0UEAkUAVX+aNJ/wCchrKwlk0zUxqLrGkMcNq1qk71CJG1Z7dI0dJA8k0hajIwRUUj&#xA;niqL1Tyn+fk2sRvYeaIYdMnc/XEb0vUjja+LsIP9FYArZqiLX9otWuxxVOfKOhfm9Z6/pr+YNbhv&#xA;tGhtJV1BAY/UkuXNUYBIItlJp1GwHvyVeiYqxHzLZ2lxrrG4gjmK2sPH1FVqVkm6VGZukGxYlLv0&#xA;RpX/ACxQf8ik/pmXQQyPyjDFDaXccSLHGtyeKIAoFYozsBmu1H1lkGPz6dp813dyS2sUkjXM/J3R&#xA;WJpKw3JGZmADgCCgb7StLFzp4FnAAbhgf3abj6vKfDLCBshF/ojSv+WKD/kUn9MNBUJY6VpZudQB&#xA;s4CBcKB+7TYfV4j4YABurI7CKKPyLexoipGI9QARQAoHqzbUGa7L9ZZBJ/0RpX/LFB/yKT+mbKgx&#xA;Quk6TpZ0uzJs4CTBHU+mn8g9sAApUa9nZt5a0iBoIzAup3ZWIopQb3fRaUzFgP3pT0Q1nZaTcxNI&#xA;LCBeMksVPTQ/3UjR16d+NcyYESF13/YabM2PgNeQPzAP6U98oWttb6jqKwQpCGhtiwjUKCeU/hmJ&#xA;qxuGAZRmIl2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVi2vf8d1/+YWH/AJOTZnaT&#xA;kWJQmZaE68rf7z3n/MT/AMyY81up+ssgkrf70XP/ADE3H/J58zNP9AQUHff71ad/zEN/1Dy5aeiE&#xA;ZhVB2P8AvVqP/MQv/UPFgHVU7tP+UIvv9TUP+Ts2a3L9Z97IIDNmxQmkf8cqy/4wRf8AEBgHJUSf&#xA;+OBpX/bTu/13eYsP70p6JNoeoCa+vLaIhrdJrg8hWodZijr/AMHy7dclhn6iOm/3uw1WMeHGfWoj&#xA;7GWeV/8Ajp6h/wAYbb/ic+VavmHADI8xEuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVpmVVLMQqqK&#xA;sx2AA7nFVP61a/D++T419RfiG6AV5Dfp74quSaFwhSRWEg5RkEHkB3Hj1xVfiq2WWKJOcrrGlQOT&#xA;EAVYhVFT4k0GKQLYprt1anWTIJkMb28CI/IUL+rMvEGu5rtTM3SHYoMSlTa9oah2bUbULGpeQmaO&#xA;iqr+mWO+wD/DXx2zJ8SPeGXgT/mnfyZB5a1HT0t7/ndQr6Vz+85SKOP7qJfiqdt9s1+pPrKIxJGw&#xA;SS51PTbee9M93DEIriUy+pIq8ecz8OVTty7eOZmCQEBZQMcidgUoufM2iyajawtcpA8F/LbfvmWP&#xA;m8VuefDkdwrTqn+t9FZeLG+fWmZ086Bq9r+CJvfM+mW/FYpBcSG6is2VDsrSuVZix24oEcn3Ur1x&#xA;lmA5d9fj7fkzx6aR57bE/ZsPjt8wUvl8y2tvPO9pLDcrLqsNnOwcERh4Iw5JHdeByJzAct96WGmk&#xA;b4gY1EnknVl528sN5N1BI75ZeEF1KXjDSCk804jUcA1W+EsV6hfiNBmvyZImZIZflclbij57fekN&#xA;150tLXWZWM4n0gWqOWjCnhKl21vK4OxKqp5P1+FKr3rnS1AEv6Nfppnj0UpRAr1k/wC9v7eijofn&#xA;ewX0rS7YRW5itGtLk7L6c1ostZa04gMKcv8AKAwQ1Auj5V8k5NFLhBjuRYPv4q2TW+836FbeVLK5&#xA;Fyspgv75xEpoZDHHczcUJoCSsi036mnXKjlEchLRhwSyED7e7zYXomuNB5kVmcxWLPe6ixBNXid7&#xA;uR0beh4/u29jgxzqZPTf9LsM+MyxRh12/V+kPTfJnmPS5rqd55ktJ7i3t62szqrpJG03qxNX9qMm&#xA;hwamYNOuOGQvrX6eRZY2saQsaSNfW4jkl9BHMqUaX/fYNd3/AMnrmNYQcUrqjaHi8zaBIsZN9DCZ&#xA;Zmt4VmcRNJIpAoiycS3LkrLT7SspGxGPEEnDPu6X8Ftr5p0G4ViLyOIq0gKTMI2Ii3ZwGIqhWjhv&#xA;5TXBxBkcE7qr/H4+K4+Z/Locp+kYOa+jVeYrS44+kQO4f1Foem+PEEeBPuP9i2y80aFdpaNHdojX&#xA;sZlt45DwZlVxGdj35mlO/bCJBEsUo8xy2VU8waE4iMWoW8omkEMXpSLJykJA4jgTv8Yr4VxtiYkd&#xA;FUatppVWFwpDTm1BFT+/BI4HwO2Fish13Rpo1kjvYSjRG4BLgUiWgZ2BoVCk716YqrHUtOCsxuoQ&#xA;q1DN6i0BUEtXfsFNflirYv7EllFzFyQsHHNagxirg77ce/hiqhJruiR8Od/bgy8TGPVQlg3GhAB3&#xA;FJFNfAg9MVW2vmDRrop6F0jepz9OtVB9NQz/AGgOitX/AGjiqMjuLeQIY5UcSgtGVYHkopUrTqN8&#xA;VQf+HtA/6tlp/wAiI/8AmnBwhs8Wfefm2PL+gggjTbUEbgiCP/mnHhC+LPvPzXHQ9ENa6fbGrBz+&#xA;5j3YdG6dd+uPCF8afefm02g6GxYtp1qxY8mJhjNT4nb3x4Qviz7z81v+HtA/6tlp/wAiI/8AmnHh&#xA;C+LPvPzXLoGhKSV061UkFSRDGNmFCPs9waY0EeLLvLF9e0TRf05IPqFtQ2kKkejH0LyqR06cRTM3&#xA;SwBB2Qcs+8/NCDRNG9RpPqMBdmRyxjQnlEgjQ7jbigoPDMrw49wXx51Vn596d+VdF0dbe4AsLcCK&#xA;4pEBEnwAQxgcdtvozXZ4gT2CfFmeZKTDSNJS5mZLKBWiuLoRkRICoeVlbjQbcgADmbggOAbMTll3&#xA;lJ5vKegW17a+jaIsVwxt3goOAT0LktxHUF/WKtv0Cjth8GAPL8btktVkNWeRv7v1fi0ZdeVdHniV&#xA;BEYvTtWs4ijNRIyrIpAJoXQO3FjuKnxwywxI+FLDUzib573+O7l0Sm88l6bqMN7bxVt5rbjb2ko3&#xA;ChbaERlwKcvT3477VNOuQlgjIV+OTLHq5Rlexs2R0/sPVkkHlXR28ty6hHEIHt4tVUwxBUjkExki&#xA;PqKBU8VWi7/2YOSAGTbvR+YmYmJN2xyLyJaWmrWk1sqyaerSrcWs5LgQtbLCsahuXMGRS7cu7HM0&#xA;aYCQI5fsbpa6UokS59CO+/1bbKHlzyTb/Vbae/K3ET2rRGEg7q1x68Dcqg1jiCp8hToMGPT9T+N9&#xA;vsXNq7FRsXV/6UCX22m9/wCTvL935Y02A2whDahPGHiPFlSKa7mVU6hRy60G426UyoYonIR0aI6i&#xA;cTxXZ82D6P5fmvI5rhlY3kH6Ps5EhqQIb1IDdMP9WKWtT71ByGKBI/0vyP7C7XUzEZb9OL5xo/aY&#xA;18XqflLy7okep6ufqcchuVhmmMqiQs8ktwx+3Xap6YdVjAPLm6mOee252ZOdC0UrKosYE9aE20rJ&#xA;GqMYWHEx8lAbjTtXMaggZJCtzspReWdCiinijtFVLm3WznoWq0CJ6YQtWv2KAnqaCp2GPCGXjTvn&#xA;yN/FZb+VdAgaUrZxyLMkEbxzD1V42ycIqB+X2VGDhCnPM9fwVk3k7yvNEY5dNhYFpn5FfjBuFZZO&#xA;L/aWquQKHbtSgx4AkajIDYP4CoPKnlvjMrabbulxL60ySRq6s/ErXi9R0Y0HTc+OHhDEZpjqVeTQ&#xA;dDklaWTT7d5HjETM0SNWNQVC7jpxNPljQQMkh1KhP5U8tTxvG+l2oEkfpMyRJG/AAAKHQKy04ilD&#xA;tTHhCfFn3n5q3+H9C9Qy/o62MjMshYxITzSoVunUV2OPCF8afefm5fL+grx46bajh9ikEY47g7fD&#xA;t0GPCF8Wfefm2NB0MLxGnWoX4TQQx0+A1Xt+z2x4Qviz7z81Gfyr5anR1k0u1+OvJlhRWqSxJDqA&#xA;wNXY1B7nHhC+LPvPzaTyr5dSSVxp1uVm9MtE0aGMGKvFlQjip+LtjwhfFn3n5q7aFojli2n2zFjy&#xA;YmGM1PidvfHhC+NPvPzR2FrdirsVdirsVdirFte/47r/APMLD/ycmzO0nIsShMy0J15W/wB57z/m&#xA;J/5kx5rdT9ZZBJW/3ouf+Ym4/wCTz5maf6AgoO+/3q07/mIb/qHly09EIzCqDsf96tR/5iF/6h4s&#xA;A6qndp/yhF9/qah/ydmzW5frPvZBAZs2KE0j/jlWX/GCL/iAwDkqJP8AxwNK/wC2nd/ru8xYf3pT&#xA;0SzSrS3ttV1QQIEEjQMyjZRxhEYCjoAFjG2W4wBKVeTl5yTjgTuTxfeybyv/AMdPUP8AjDbf8Tnz&#xA;H1fMOKGR5iJdirsVdirsVdirsVdirsVdirsVdirsVQv6W0r/AJbYP+Rqf1xV36W0r/ltg/5Gp/XF&#xA;XfpbSv8Altg/5Gp/XFXfpbSv+W2D/kan9cVd+ltK/wCW2D/kan9cVd+ltK/5bYP+Rqf1xViXmPXt&#xA;Dh1xvV1G1j5WsPHnNGtaSTVpU5m6UgAsSgP8TeW/+rrZ/wDSRF/zVmXxDvQyDynrOjyWt26X1uyN&#xA;cHiyyoQaRRjYg5rdQfWWQSGbzDoEV1dJJqdoji4nqrTxg7ysRsWzMwSHAEFA3vmTy6bnTyNUtCFu&#xA;GLETxbD0JRv8XicsMhtuhGf4m8t/9XWz/wCkiL/mrJcQ71Qdl5k8ui51AnVLQBrhSpM8W49CIbfF&#xA;4jIiQ33VkVjrGkP5HvWS+t2Vo78qRKhBBll6b5rsv1lkEp/xN5b/AOrrZ/8ASRF/zVmz4h3sULpX&#xA;mTy6ul2atqtmCIIwQZ4qg8B/lYBIVzVGPruiL5c0mVtQthEdSuqOZo+O5u+9aZiwI8Up6IC08x+X&#xA;hqV+x1S0Ct6XFvXioaJvT4suhIcUvg5OU/uoD+t97IvKeuaJLqOoNFqFtIohtgSs0ZFeU3gcxtUQ&#xA;SHHDJ/0tpX/LbB/yNT+uYqXfpbSv+W2D/kan9cVd+ltK/wCW2D/kan9cVd+ltK/5bYP+Rqf1xV36&#xA;W0r/AJbYP+Rqf1xV36W0r/ltg/5Gp/XFXfpbSv8Altg/5Gp/XFXfpbSv+W2D/kan9cVd+ltK/wCW&#xA;2D/kan9cVd+ltK/5bYP+Rqf1xV36W0r/AJbYP+Rqf1xV36W0r/ltg/5Gp/XFXfpbSv8Altg/5Gp/&#xA;XFWM6tq35TaRdT2mpy6PaXVsqvcwSrbq8avx4l1pVa816+I8Riq9r/8AKxbR7tm0f6rFP9Vkm42/&#xA;FZ/S9f02NNm9L46H9nfFUNpM/wCUkJi0O0l0mW4sZY9KEDiBpvrCo3CFqirSlYWNOppirJP8MeWv&#xA;+rTZ/wDSPF/zTirv8MeWv+rTZ/8ASPF/zTiqCfyr5S06LUL46TbuJCbqdRbxuaxwpHSNeP8ALENh&#xA;3+eTxwMpCI6lUPfQ+UbWdYRocFwzRrMGht7bjwckLu5TrxPTJRwylddEWoep5U/6ltP+kez/AOa8&#xA;l+WmtonTPLvlC/uZNSj0eCOZVFrJFJBDQBT6g+FQy1Pqda5VKJiaKVGb/CUc0kS+X4pRE7RmRLe1&#xA;ClkJVqcmU9R4ZZHBKQsItQkuvKEbxI3ltQ0zFI/9Hs92Cs/8/ghw/l5ray4t/J9xNayv5co1pKZo&#xA;gsNmAWMTxUYc9xxlO3jQ4/lpra+O68oSPKi+W1LQsEk/0ez2Yqr/AM/g4x/LzW0ygsPKM2lPqf6G&#xA;tkgjWVnRraHmPRLK4oAR1Q98qMSDSUpv7byffWctpN5c4xzDixSGzVqddmD7Zb+Wmi1WC68ozwxz&#xA;R+W1KSqHStvZjZhUft4/lprauw8oLp9vejQoWW5me3SEW1tzDx+pyrUhafuW/ayAxSMuHqm1Pn5U&#xA;/wCpaT/pHs/+a8n+Wmi1Ty7o3k97ZdOt9EijXT4YYx9Ygt2dkoUQll51P7s1rlc8ZjzSnH+GPLX/&#xA;AFabP/pHi/5pyCu/wx5a/wCrTZ/9I8X/ADTiqhb+TPK1vNdSppVqWu5RNKGgiIDCJIqKOOw4xDbx&#xA;qcVV/wDDHlr/AKtNn/0jxf8ANOKu/wAMeWv+rTZ/9I8X/NOKqCeTPKyX014NKtfVmiihdTBFwCwt&#xA;IykLx2NZjU99vDFVf/DHlr/q02f/AEjxf804q7/DHlr/AKtNn/0jxf8ANOKqFx5M8rXE1rK+lWoa&#xA;0lM0QWCIAsYniow47jjKdvGhxVX/AMMeWv8Aq02f/SPF/wA04q7/AAx5a/6tNn/0jxf804qh7/yX&#xA;5VvrOW0m0q1WOYcWKQxq1OuzBdsVRH+GPLX/AFabP/pHi/5pxVjurflbpup+YtQ1qbUbyI6jEkU1&#xA;nB6McNUEQDPxjDymlutPVZqdtuIVVJX/ACH0M3d/Kuq33o6nFdveQyMkh/SF3zDX0ZZaI4jmlThx&#xA;40btQ1VR15+TumaheJf6lq+oXOoJfLqq3CtDCBfRw2cEU3CKNFPppp60U/D8TV7UVegYq7FUNqIB&#xA;tgp3VpYVYdirSqCD7EHLcP1fA/cUFi1z/vTb7U/3H2m30y5m4vrn/WQUBY3z3F1dxMgCQuPQcftJ&#xA;ujcvBhLG4+VMzcmIRjE9/P7/ALiGLJ/K3+895/zE/wDMmPNPqfrLMJK3+9Fz/wAxNx/yefMzT/QE&#xA;FLrm5hmvrSONuT292Y5hQji5tHkA36/DIp2y+cCKJ6/tH6EJjgVB2P8AvVqP/MQv/UPFgHVU7tP+&#xA;UIvv9TUP+Ts2a3L9Z97IIDNmxQmkf8cqy/4wRf8AEBgHJUSf+OBpX/bTu/13eYsP70p6Jdo0splv&#xA;o5ZGkb6xJJHyJPGMu0aqKnahibptm11ERUSB/CPnV/pYhknlf/jp6h/xhtv+Jz5p9XzDMMjzES7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FUr1fUUiuLO048/rEqfGp+y0csZoR7gnv2zKw&#xA;YrEpdw+8FBKQ3m2pyLSgWLioHQKtzcBQPkBmRi5n3R+5BSnS/hvLjkKGT1OHuI7mbl93qL9+bHP9&#xA;I8q+2Mf1MQy7yt/vPef8xP8AzJjzR6n6yzCSt/vRc/8AMTcf8nnzM0/0BBY9brTVojQDlcuTTua3&#xA;or9wGZ+oPpj+P4YsQyHMZKDsf96tR/5iF/6h4sA6qndp/wAoRff6mof8nZs1uX6z72QQGbNihNI/&#xA;45Vl/wAYIv8AiAwDkqJP/HA0r/tp3f67vMWH96U9Et0fcq/eS0t5HPcs7SsxPzJrm11H++l+hiGS&#xA;+V/+OnqH/GG2/wCJz5p9XzDMMjzES7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FVC7u1to1PEvLI3p&#xA;wxDq7kE0H0AknsATk8cOI+Q5qpLaXso5XV0ycusFvREAp9nmQZCa/tAr8hkzOI+kfE/q5fDf3obX&#xA;T3SoivLhE6hCySU8filWR/8AhsTlB5xj933EBaafTFk/vLm4Y1qSJWj+f93w9v8AMmqM1chH5X96&#xA;0h7by7YQT+srSMxkSZgzVDSoHHqHYbt6tT2qBtlk9XOQrblXw22+xaYvr1/HYXdxcyKXVVAKJTlQ&#xA;3dxyIBIrxWrH2BzN0mIzlwjuH+5/AYlB2BrPaOdvWhuZ1HgJZY5APoD5mZeUh3GI+QIQGXeVv957&#xA;z/mJ/wCZMeaPU/WWYSVv96Ln/mJuP+Tz5maf6AgseT4dS0l1rxvHnmof5eMskfyNLg1zPz8q/mkD&#xA;/Y0f9yxCaavfvY2TTxoJZR/dxEkcuILvuAeiKx+jI4MXHKjsPx+lSW7H/erUf+Yhf+oeLMcdUp3a&#xA;f8oRff6mof8AJ2bNbl+s+9kEsM8CzrA0iid1Z0iLDmyoQGYL1IBYVPvm14TV1sxUNI/45Vl/xgi/&#xA;4gMgOSok/wDHA0r/ALad3+u7zFh/elPRLdPArph7/Um3/wCRObXL/H/X/wCKYhkvlf8A46eof8Yb&#xA;b/ic+afV8wzDI8xEqctxbxMFllSNmqVDMATTrSuSECeQVYb+xAqbiKgAYnmtKHYHrh8KXcVts31k&#xA;DQ3Edalac16r1HXt3x8OXcVto39iBU3EVAAxPNaUOwPXHwpdxW2zfWQNDcR1qVpzXqvUde3fHw5d&#xA;xW2jf2IFTcRUADE81pQ7A9cfCl3FbbN9ZA0NxHWpWnNeq9R17d8fDl3Fba+v2PEt9Zi4gciea0oT&#xA;SvXxw+FLuK22b6yBobiOtStOa9V6jr274PDl3Fba+v2PEt9Zi4gciea0oTSvXxw+FLuK22b6yBob&#xA;iOtStOa9V6jr274PDl3Fba+v2PEt9Zi4gciea0oTSvXxw+FLuK2r5WqBtALm8lvDukRa3tfkpHqt&#xA;/spF4/7Go65fk9MRHv3P6Ps3+PkhHZQl2KuxV2KvPvM8K3Hmee3Jpz9MNTqFNrMpIqO3IZutDLhj&#xA;f9Ef7thJCyWGrRabYraSQjULWJY5HYMY2Ajo6qK1+J1Xqdv15Qy4zOXEDwSPx5/qtDLvJ8yT2FxP&#xA;H9iWYOlfBoIiM0mriY5CD0ZhIb+8itDdSuCxN1MkcS05O7zsFReRUVJ8TTx2zO0eMziAGJSS4P1K&#xA;bQTcD0/q0MxmA34+nbfF0r0p2zLn6ya6zH++QjrWW81C5jkntmtIrQtyikFWacqUPFqcWjCP9pft&#xA;E9uJBM4xxxIB4jL7v1306fFUqt4Dd6V9TVgoupYkJNdilhHIu/XZ4xXJwlwZpy/mn9IH3FejKbXV&#xA;kHkmojYpeQ378unBTK4FR1JLyqv49s02TAeOe/0n5/gAsrSm9X/cgblSS0D2iL/KGeSSNwad/Tn/&#xA;AFHNvjPo4e/i+4H74sVHy1fXEtvBHLx9J4AbUKDUegfRlDHvvxYbdyO2VzxgQBHPa/iLH6fkqYaq&#xA;7p5PsjGxWVr+8SEr9r1H+tqlPfkRmFpgDqN+X6OrI8nMixX9oFHCIRSxIB0rWNlX/gYzmYDcJd9g&#xA;/f8ArYp75X/46eof8Ybb/ic+avV8wzDI8xEqCAfXpjtX0oq9eX2pOvanhlh+ke8/oVbp+oQX0Jli&#xA;DKAQCrgA/EodTsT9pHVvp3odsOXEYGj+On3oBVIbq3nEhicMIXaOSn7Lr1B+WQlAxq+qVRWVlDKQ&#xA;VIqCNwQciQreKuxV2KuxV2KuxV2KuxVJEN0mjWMcF1It3cxQxwfDGaHgOTkFOirVjXrSm1czTwnJ&#xA;IkDhBN8+/lz68mPRMYLBoII4IrmURxLwQH0zRQvFRUpX4abfjXMeWXiJJAs+/wDWml5t5v8AlqlH&#xA;TtF2/wBh3yPGO4fb+tLvq83/AC1S9+0XcUH7Hbt+OPGO4fb+tXG3m/5apR07Rdv9h3x4x3D7f1q7&#xA;6vN/y1S9+0XcUH7Hbt+OPGO4fb+tWC63Z3I88ygTTcDYRSGYKlAWkKBd041Pok/0zcaWcfB5D6q6&#xA;+Z7/AOkwPNW+rTf8tUvftF3FB+x+z2/HJcY7h9v61VPKM89vo0sFtK89xFdm1WENEpP1eACpJR6F&#xA;1hNAe+23XMfVREs0jIUD6uvWvPpaRySu3UX2r3V1Ddu8MLTrDIBH1uJWdgapXZVjYfPeuZWM8GER&#xA;MRZPn/Dt3+9iealrekG6utL9S6lAW4IcAR/EnoSMyn4KUdkXlUdNu+GGo4P4R9u3nz6b181pNfq0&#xA;3/LVL37RdxQfsfs9vxyHGO4fb+tKQaLZX36Vv1kkmWOC5mYyERULyLE0ZUcTU+mTU9q061pkTyR4&#xA;TQFnh7+kd+vehNdE06e58h6ghuJEFtb3Vuj8I+Int5pixX4fiRXC99yCD0zB1WUQy3wjc315S+PM&#xA;j70gIIaHdWmkajB9dnuWmWRoy3F5CBGFUFirMzUUCv3ZsfzMZ5InhEar3c2NKGlWs0OiaFOZ5UKp&#xA;EJqrGGH1mIJTdK/3zKxr9NaZHjBMgAPLn/D8f5tpTLUraZvLOjRi4kZ21l+IpH+xLcux+x/KpOa/&#xA;TzHjSND6Zd/dXek8l2o2N68Ky29zI1zbs00KMIqMShTgTwFPhYhT2O5qNszMWWINECjsefz5/jy5&#xA;oKb+UAZ7q8miu5WjltrR43pGCVLTEH7HcZrdceGVGIsX3/rZRZLLG0UbyyXkiRoGd2IioFp/qfs9&#xA;f15iRNmhEX8f1pScXN7FDLBeTM17qEKfUkYIjKz8lMYCULejyDO3hvQUzL4IkgxHpgd/17/zuQCE&#xA;wmmisLmeQpSI2ytHGgG5hZgVA/mPqIo8enbMeMTkiB14vv8A7ClDQ6JN6sUM5DWRhVrpUYr6tyoK&#xA;OZAOPNZFb4getBXLZakUSPqvbyj5dxHTuRS6KwkstQhlM3JZpXhiQAqqQMrzBKVI5CQbH+WgwSyi&#xA;cCK5C/jsPu+3dNJxmGl2KuxV2KuxV2KuxV2Ksct7+6t5Xli8r6mJH5VJmsGpzbmwUNekKGbchafh&#xA;lk8spCj+P1opE/p/Vv8AqWtS/wCRmnf9lmVpQ+n+bb3ULC2v7by5qTW13Ek8DF9OBKSKHU0N5UbH&#xA;FUR+n9W/6lrUv+Rmnf8AZZirv0/q3/Utal/yM07/ALLMVQ9t5tvbma7hi8uakZLKUQXAL6cKO0ST&#xA;AD/TN/glU4qlWq3PmK41NrmLyzqDRtDHH/e6aDyR5GPW8/yxmTgzCF2ghDep5m/6lfUf+R2mf9lm&#xA;X/mo+aKb0C9uLHWLmJvLGoR6lIpuWjR9N4mKTjGHal3TnzjfvWhPjlObUymKvb8fYkBbTzFHNcGP&#xA;ytfhZp5pqrLpgr6shep/0wb775Zj1QEQDeyKULlPNMs1o6+V9QpBKZHrNpvQxOm3+meLjCdVHzWm&#xA;7nUtet5rWGbyzqKyXkpgtx6umnlIInmI2vNvgiY74fzUfNaatk80xTXbt5X1Ck8okSk2m9BEib/6&#xA;Z4ocA1UfNaTW3uvMCeWrnTm8tagLiZboL+907iDO8jJU/W/BxXMScgZWySrUNT13T7OW8uvLOopb&#xA;wjlI4l01qCtOgvCczPzUfNjSnFaeZW0mOxn8r6jtCsTsk+mVBVQOSn651BFQclj1sYkEdFpyJ52b&#xA;TdLtbjyxdl7C+uLqSRLjT6usq3Cr8BuQFJ+sAkcjT3yI1GOM5SF+ocu7cHv35LRRnqeZv+pX1H/k&#xA;dpn/AGWY/mo+a0hvK9zr4R9V03Q9RhtNSit7i2jdtNeNlf1JGLIbtZFqJuQAcfF1yObVRyEcQvar&#xA;5Hy8vs5KAnzal5om4RXWh3klryBlRFsEdwtCFJOoOtCftfDuNu+UjJCO8QeL3/s+XzTSY/p/Vv8A&#xA;qWtS/wCRmnf9lmY6UvXX5NQvZP8AnWtTefSpvRkBk08KJHijnAI+uUb4XRh4H3GWRySiCB1Wkw/T&#xA;+rf9S1qX/IzTv+yzK1UrnV9SuITFJ5b1QKSrVSbT1aqMGFCLyvUZKEzE2FQEfmbXl1Cawg0XUZpb&#xA;eKGeWKf9HcuEzSIlJUvEG5gbqrEfdlnHA8xXu/Uf1hCJ/wASeaqf8old1/5i7D/qtgqHefl/x5VW&#xA;PzJr1P3vlTUQ3/Fc2msKfNrtD+GRIHQ/j7UqVz5x1C3mtYZvK+qrJeymC3HqaYeTrE8xG17t8ETH&#xA;fBQ71V/8Saz/ANSrqn/I3S/+y3Gh3q7/ABJrP/Uq6p/yN0v/ALLcaHeqH1Dznf6fZS3l15X1VLeA&#xA;cpGD6Y1BWnQXtca81RH+JNZ/6lXVP+Rul/8AZbjQ71SPWfzf8vaL5k1PR9TtbyGDSo43uNTSFpoC&#xA;8qJIsaiIO9eElTt2PbfIqgdc/wCcgvyy0m2umOome7t0vOFmsUqvJNYxepLAGdQqv0XfucVRl1+e&#xA;H5b2iNJdajLBAnqM9xJaXSxCOPhSX1DHxKSGVBGw+2WAGKpj5O/NDyV5xuZLby9fG8lhgW5k/dSI&#xA;ojdilQzqoPxqRttUGnQ4qyvFXYqkmr6zfW2ofVbYRBViSVmkVnJLs60HFkpT08vw4ePqglB/p7Wv&#xA;5rb/AJFSf9Vcu/KeaLTfRNQnvbeVpwokhlMZKAhT8CvWhLU+3TrmNkhwypkErn1/VPrEyw+gkccs&#xA;kah43dv3blKkiRevGvTLsem4o3aLQ0/mbWopbaP/AEY/WJDHX0pBSkbyV/vf8imSOk80Wrfp7Wv5&#xA;rb/kVJ/1Vw/lPNbUYPM2tSy3Mf8Aow+ryCOvpSGtY0kr/e/5dMA0nmtpva6xO/l6bUpEUzQpcMUW&#xA;oUm3d1HUkivDxzGnCpUyS79Pa1/Nbf8AIqT/AKq5lflPNjajZ+ZdauLSC4P1ZfWjWTj6UhpyUGn9&#xA;7iNJ5raKfzFqH6IsrpViFxc3U1s5KsUAiM3xBeQO/oj9rvlIw3MxtNoODzTrUt1cwEWym3ZArem5&#xA;5K6Bq/3u29Rk46ayRfJtyY+GEZfzr+wpvoerXl5c3UFyI6wJE6tGrLX1DICCGZ+np5XmxcBagU4y&#xA;lLsVdirsVdirsVdirsVdirsVdirsVdiqS3nkvyle6hPqN5pFpcX11GIrm4kiVnkQAKFYkb/CoHyx&#xA;VZe+Q/JV9teaFYzisrEPbxkE3ChZqim/qBRy8aYqhW/LD8vW1AX7eX7E3AE4P7lOBN1x9ZmjpwLO&#xA;EA5EVptiqYaL5Q8r6HNJPpGlWthPKgiklgiVGZFNQpYCtK4qm+KuxVi2vf8AHdf/AJhYf+Tk2Z2k&#xA;5FiUJmWhOvK3+895/wAxP/MmPNbqfrLIJK3+9Fz/AMxNx/yefMzT/QEFB33+9Wnf8xDf9Q8uWnoh&#xA;GYVQdj/vVqP/ADEL/wBQ8WAdVTu0/wCUIvv9TUP+Ts2a3L9Z97IIDNmxQmkf8cqy/wCMEX/EBgHJ&#xA;USf+OBpX/bTu/wBd3mLD+9KeiB07/eq5agqep7mk0w3+gZdj5n8dS5Wo+iP4/hgyHyv/AMdPUP8A&#xA;jDbf8TnzG1fMOMGR5iJdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVYtr3/Hdf/mFh&#xA;/wCTk2Z2k5FiUJmWhOvK3+895/zE/wDMmPNbqfrLIJK3+9Fz/wAxNx/yefMzT/QEFB33+9Wnf8xD&#xA;f9Q8uWnohGYVQdj/AL1aj/zEL/1DxYB1VO7T/lCL7/U1D/k7Nmty/WfeyCAzZsUJpH/HKsv+MEX/&#xA;ABAYByVEn/jgaV/207v9d3mLD+9KeiCsNrmau3Llx9+M8tafLkMux8z+OpcrP9I/H8MWQeV/+Onq&#xA;H/GG2/4nPmNq+YcYMjzES7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqxbXv8Ajuv/&#xA;AMwsP/JybM7ScixKEzLQnXlb/ee8/wCYn/mTHmt1P1lkElb/AHouf+Ym4/5PPmZp/oCCg77/AHq0&#xA;7/mIb/qHly09EIzCqDsf96tR/wCYhf8AqHiwDqqd2n/KEX3+pqH/ACdmzW5frPvZBAZs2KE0j/jl&#xA;WX/GCL/iAwDkqJP/ABwNK/7ad3+u7zFh/elPRLdLure4Nu0LiQrHKs5FdpSY2cGverZbA8vd+pys&#xA;38Y7pAfLiDJfK/8Ax09Q/wCMNt/xOfMfV8w4wZHmIl2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Kux&#xA;V2KuxV2KuxVi2vf8d1/+YWH/AJOTZnaTkWJQmZaE68rf7z3n/MT/AMyY81up+ssgkrf70XP/ADE3&#xA;H/J58zNP9AQUHff71ad/zEN/1Dy5aeiEZhVB2P8AvVqP/MQv/UPFgHVU7tP+UIvv9TUP+Ts2a3L9&#xA;Z97IJfyXlxqOVK8e9PHNmxQukf8AHKsv+MEX/EBgHJUSf+OBpX/bTu/13eYsP70p6MQ0nUItMl04&#xA;MtU1NIpAAwqJb1ye/Wioo2yUJAcPmP1OXkiZcdD+L/inoXlf/jp6h/xhtv8Aic+VavmHFDI8xEux&#xA;V2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KsW17/AI7r/wDMLD/ycmzO0nIsShMy0J15&#xA;W/3nvP8AmJ/5kx5rdT9ZZBJW/wB6Ln/mJuP+Tz5maf6AgpTLqdjdanb21vLzmtLmk6hWABaCcCjE&#xA;cW3RgeJNCCDvk+IE0OjKWOQAJGxVNa1y10uJWko8z1KwgnlxVSzNRQ7cQqnelPEgb45J8PmWeHEJ&#xA;Hc8IHX8firSnVNWu7cXT6aQ8zztckUqGggs45G7N9pii+JrsR1Fc8lCxv/YyxYOKREjw1991X46X&#xA;zZPHr+lQeVZ7SSYCS4g1CRHp+7CmScqWk+wvPg3Gp+LiadMwcsh4iIYZEX+PwOrGJpFfVZddilV4&#xA;7W4trIMh+B7aVF51YfCQJLoPX/IzNMrPEDyofj5/Y2iFR4CNyJHzFdP9ifn5O8rXt7Fa6WbtgbXV&#xA;bcPatVjwk4+okfxFvtw1YUoBxpSu5cRIq/4vx933LnAIIA3ga+HKz8f90nWs3xsfJtndKKypqF2I&#xA;EoSXlY3axIANyXchQPfKTKski04ocUgDy6+7r9jHdX0N1vLeKL1JHsdMZrAgA8ri0ZeBNAaNV1+e&#xA;9O+XTxXVdBs2YdSYk3ykd2b+RdQh1CW8u4VdEkhgHCQAOpSS4VgwBIqCp75j6mXFRDTKBiSDzDLc&#xA;xkLIZoZoxJDIskbVo6EMpoaHce+KqdpqFheBzaXMVyIzxkMTq/FgSCDxJoag4gplExNEUr4oUra6&#xA;tbqFZ7WZJ4WrxliYOpoaGjKSOuKquKuxV2KuxV2KuxVYlxA8skKSK00XH1YwwLLyFV5AbivauKr8&#xA;VY/9S/MD/q9aT/3Crn/vI4GWzvqP5gf9XrSf+4Vc/wDeRxXZDafB+ZVxYW091qek2tzLEjz2p0y4&#xA;cxSMoLR8hqI5cTtXFdkT9S/MD/q9aT/3Crn/ALyOK7O+pfmB/wBXrSf+4Vc/95HFdkPbQfmTJNdp&#xA;LqWlQxwyhLeQ6ZcN60ZiRzJQaj8NHdkp/k174rshb3yv56urw3Ta9pauY1iKjSrilEZmH/Sx/wAs&#xA;5djzShyR6UrP5c+fPVeVPOUUbSGsgXTOS9+IVZLqQIFG3w9e9TU4fHl3toyRquEfb+gj8cqTDSdF&#xA;/MjT7qSyGr6ZNatGs7X8mlzVabaMpwTUFA+GMMSBTfK5yMjZa/T3KM/knz5LLJIvmewh9RpGKx6T&#xA;IQGlYuW+O+fdSdu3iDlsNRKIoI9KWS/lJ5kkexceZLeJ7P1OckenzJJP6xLSGR1vQwLOWaqFeppT&#xA;I+Kdvxbd4/OwPLy932c75K0H5e+adMnhFpqNhcfXJTFd3MthcO8MAhdl+KS/ZmjDxqgSu3Kvjko5&#xA;65BrnklIUTt3ch8g1o/5V+ZNLupbiHzDayl1EcSTafO6xJRVKxj69sCIkB/1R9IhmMTbLJmMxR/t&#xA;PeURpX5Z67Y6BNo0+s2OoRSgost3pju0ajkY1QC8VR6bSMy7VqTvlFMp6iRlxD0+5Dal+Xvmq18t&#xA;31hpmoaeUlilRLWDTpYyTNUNxZr5gp+IkbUGZBz+kxAq/wBLGOaXGJHfhrn5dFc/lp5jbR7fSX1y&#xA;wa3to4o4m/Rk3MeiAFIP17Y7dsTnJFUxhMgk875r0/LjzEsFjENY03lY3Mt2kv6MuC7ySiUH1C2o&#xA;Hlx9duJO48euVjIeLiSJAAgDmjv8I+cf+r5p3/cMn/7L8v8Azcu5qpLvL3kzz3ah9TTXLOwvNTjh&#xA;lu7H9HSvHDL6Z5oB9dCsQ7klqbtv3zHyS4jfJvjmNVICQ8/18/2JtdeXvzDuomhk802ccLoUkEGl&#xA;sjMCOJ+M3jFajutCD0yuj3o8SPMRH2/j8b2o3PknzHIx+r6vY2UUqrHdQ22nzRpNEABwel7yFVUL&#xA;yUggdCKmrwhl+Ylz5y7+qyPy554e/u5LfVLDSli4WkTQaa/GaBYY2WQKbwhSjM0a1rTjtsaY8KBl&#xA;2AIuvx+PeVsfkLzGjt/uct2t5VpdWptLoRzuQQ0kvG+UsWBowrxoAKUGPCEnUSI6X31v+Px3Kj+S&#xA;/N63kl7a+Y4La4cjiVsZnRQE4ECOS8ZTVQv2gaU2oa1eFBzWKICxfL/5jy6jNDP5htzbpFDIlytl&#xA;NGJJSZEK8I71ePphFdqfC5fcUFMLXsiV8recSwFxrdhd26nlHb3Gn3MqBjT4jz1A8qFary+ySadq&#xA;K7NQeV/PVuAIPMtpEq/DGi6dKyJEAAkapJeutFp9qnLxOK7Kslr+Zdu9nFHq2mXaSymO4nfS5laK&#xA;MRSOJGC36q3xqqUAH2q9sV2RC6f+YI5f7ndLbkSRy0qf4a9lpqA2HvXFdkM/lzztNVb3X7G8hIA9&#xA;CXTZRGadeSxXsfOvcPUe2K7IW+8v+erPTC+m6nYy31vyeArYT+tIXPxK8kt9IGBH84PQdwKK7Jt9&#xA;R/MD/q9aT/3Crn/vI4rsyDCxQHmDTZ9U0HUtMt7p7Ge+tZ7aK9i/vIHmjZFlShHxIW5DfFVDynot&#xA;1ovl6z0y6uvrk9urB56MB8Ts4RA7SNwjDcEqxPEDFU2xVJPOfloeZfL8+jmc2wuHi5zryDrGJFMv&#xA;plGQq5j5BGr8LEGhpirGNH/K2/03zpD5hj1uX6t9au7q40wer6JE6SQxRxq0rIq+m8bSfCeUkasK&#xA;VIxV6FiqRecdC1PWdOtYNNvRYXNtf2d96zeqVZLS4SdomWKSLksoTgQ1RQ9K0IVebzfkT5pexSBf&#xA;OtypW2ubcwcJRbhp7yO5SUBJ0lLosfGrOa0XsDyVexxIUiRCxcqoUu3ViBSpp3OKpd5m0y81Ty/f&#xA;6dZzR291dQtFDPMrvGrMNiyRvEzD25D7tsVeZ3P5L+b5Gd7fza9o8sNtbu6fXGYejYzWkkoLXR5S&#xA;sbjmGeu6qcVek+U9FutF8vWemXV19cnt1YPPRgPidnCIHaRuEYbglWJ4gYqmrqWRlBoSCAd/4EHF&#xA;Xidx+QHmyWCKOLzpNaFEdXECXKqed004UVudkjDfB+1yH2sVej+QvKeoeWtOvbS+1STVZLq8e6Sa&#xA;QOCiNHHHx+N5DVjEZX3pzdqADFWTYq8y89flLr/mTzdDrll5ll0i2iEAazgE/wC99JqsZCs6LUdU&#xA;4qKexqxVRHkH8rtZ8s67HqV3r76hCtpPbvbcZVDPNcmZSec0o4xpsPh5VqeXbFXouKsL/MryFrXm&#xA;2GyXTPM155fa0+sc0tQpSYzwPCvqdH+DntRtgTSjcWCrHNN/J/zVb6tYXlx5oLw2M2nO0UMc8YlW&#xA;xVPULIZ2jDzcDGSFp6blabLRV6virG/P3lW98z6HHptnqH6NlW6guDcBWf4YX5FOKvHWvuaYq81b&#xA;/nH7zYxDr53ubfjBLAtvAkqwgzXEkoYVnL/uBIGi+L7agnavJV7diqC12wudR0TUNPtbt7C5vLaa&#xA;3gvov7yCSWMosqbj4kJ5DfFXlJ/JHzm0VrB/jWaCO3axJaKOYki0jlR/hecoCfVBUqAKjmQX+LFX&#xA;o/kry/eeX/LVppN5eG/uIGmZ7ijAUmmeVY0DtI3CJXEaVYnioxVPMVePSfkf5pkvrq6k85XEyzS6&#xA;hKlvIkoRvrqhI1lKzAn0d2FKAkKCCqhcVZZ+WPkHVvJ1neW2o67NrjXDIY5ZhIGHDkSzepJN8R5h&#xA;Nj9lF71OKv8A/9k=</xapGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xap:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#">
         <xapMM:DocumentID>uuid:40C70F741C2EDD119B5A975DF2A02D70</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:770CAD817A19DE1193749E7F51350181</xapMM:InstanceID>
         <xapMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:7E62B656142EDD119B5A975DF2A02D70</stRef:instanceID>
            <stRef:documentID>uuid:7D62B656142EDD119B5A975DF2A02D70</stRef:documentID>
         </xapMM:DerivedFrom>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
            xmlns:xapG="http://ns.adobe.com/xap/1.0/g/">
         <xapTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>612.000000</stDim:w>
            <stDim:h>792.000000</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xapTPg:MaxPageSize>
         <xapTPg:NPages>1</xapTPg:NPages>
         <xapTPg:HasVisibleTransparency>False</xapTPg:HasVisibleTransparency>
         <xapTPg:HasVisibleOverprint>False</xapTPg:HasVisibleOverprint>
         <xapTPg:Fonts>
            <rdf:Bag>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>Verdana</stFnt:fontName>
                  <stFnt:fontFamily>Verdana</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>Open Type</stFnt:fontType>
                  <stFnt:versionString>Version 5.01x</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>Verdana.ttf</stFnt:fontFileName>
               </rdf:li>
            </rdf:Bag>
         </xapTPg:Fonts>
         <xapTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xapTPg:PlateNames>
         <xapTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xapG:groupName>Default Swatch Group</xapG:groupName>
                  <xapG:groupType>0</xapG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xapTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -299.587 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 299.587 li
463.861 299.587 li
463.861 0 li
cp
clp
[1 0 0 1 0 0 ]ct
0.5 lw
0 lc
0 lj
10 ml
[] 0 dsh
true sadj
0.25 86.9829 mo
463.861 86.9829 li
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 1 cmyk
@
447.637 86.9829 mo
447.637 89.1074 li
401.275 86.9829 mo
401.275 89.1074 li
354.912 86.9829 mo
354.912 89.1074 li
308.553 86.9829 mo
308.553 89.1074 li
262.191 86.9829 mo
262.191 89.1074 li
215.83 86.9829 mo
215.83 89.1074 li
169.468 86.9829 mo
169.468 89.1074 li
123.107 86.9829 mo
123.107 89.1074 li
76.7451 86.9829 mo
76.7451 89.1074 li
30.3843 86.9829 mo
30.3843 89.1074 li
447.637 86.9829 mo
447.637 91.2329 li
401.275 86.9829 mo
401.275 91.2329 li
354.912 86.9829 mo
354.912 91.2329 li
308.553 86.9829 mo
308.553 91.2329 li
262.191 86.9829 mo
262.191 91.2329 li
215.83 86.9829 mo
215.83 91.2329 li
169.468 86.9829 mo
169.468 91.2329 li
123.107 86.9829 mo
123.107 91.2329 li
76.7451 86.9829 mo
76.7451 91.2329 li
30.3843 86.9829 mo
30.3843 91.2329 li
@
93.7446 86.7905 mo
119.823 86.7905 li
119.823 0.25 li
93.7446 0.25 li
93.7446 86.7905 li
cp
0.113725 0.113725 0 0 cmyk
f
93.7446 86.7905 mo
119.823 86.7905 li
119.823 0.25 li
93.7446 0.25 li
93.7446 86.7905 li
cp
0 0 0 1 cmyk
@
133.924 86.7905 mo
154.787 86.7905 li
154.787 0.25 li
133.924 0.25 li
133.924 86.7905 li
cp
0.113725 0.113725 0 0 cmyk
f
133.924 86.7905 mo
154.787 86.7905 li
154.787 0.25 li
133.924 0.25 li
133.924 86.7905 li
cp
0 0 0 1 cmyk
@
154.787 86.7905 mo
178.354 86.7905 li
178.354 0.25 li
154.787 0.25 li
154.787 86.7905 li
cp
0.113725 0.113725 0 0 cmyk
f
154.787 86.7905 mo
178.354 86.7905 li
178.354 0.25 li
154.787 0.25 li
154.787 86.7905 li
cp
0 0 0 1 cmyk
@
178.354 86.7905 mo
191.296 86.7905 li
191.296 0.25 li
178.354 0.25 li
178.354 86.7905 li
cp
0.113725 0.113725 0 0 cmyk
f
178.354 86.7905 mo
191.296 86.7905 li
191.296 0.25 li
178.354 0.25 li
178.354 86.7905 li
cp
0 0 0 1 cmyk
@
202.115 86.7905 mo
217.568 86.7905 li
217.568 0.25 li
202.115 0.25 li
202.115 86.7905 li
cp
0.113725 0.113725 0 0 cmyk
f
202.115 86.7905 mo
217.568 86.7905 li
217.568 0.25 li
202.115 0.25 li
202.115 86.7905 li
cp
0 0 0 1 cmyk
@
217.568 86.7905 mo
235.533 86.7905 li
235.533 0.25 li
217.568 0.25 li
217.568 86.7905 li
cp
0.113725 0.113725 0 0 cmyk
f
217.568 86.7905 mo
235.533 86.7905 li
235.533 0.25 li
217.568 0.25 li
217.568 86.7905 li
cp
0 0 0 1 cmyk
@
241.328 86.7905 mo
267.6 86.7905 li
267.6 0.25 li
241.328 0.25 li
241.328 86.7905 li
cp
0.113725 0.113725 0 0 cmyk
f
241.328 86.7905 mo
267.6 86.7905 li
267.6 0.25 li
241.328 0.25 li
241.328 86.7905 li
cp
0 0 0 1 cmyk
@
338.301 44.4854 mo
338.494 44.2925 li
338.494 44.0996 li
338.686 44.0996 li
338.686 43.9063 li
338.879 43.7134 li
339.072 43.7134 li
339.072 43.521 li
339.266 43.521 li
339.266 43.7134 li
340.23 43.7134 li
340.23 43.521 li
340.424 43.3276 li
340.424 43.1348 li
340.617 43.1348 li
340.617 42.9414 li
340.811 42.749 li
340.811 42.3628 li
341.002 42.3628 li
341.002 41.7832 li
341.195 41.7832 li
341.195 41.3975 li
341.389 41.3975 li
341.389 41.2036 li
341.775 40.8179 li
341.967 40.8179 li
341.967 41.0107 li
342.16 41.2036 li
342.16 41.3965 li
342.354 41.5898 li
342.354 41.9761 li
342.547 42.1685 li
342.547 42.5547 li
342.74 42.748 li
342.74 43.1338 li
342.932 43.3267 li
342.932 43.9063 li
343.125 44.0996 li
343.125 44.4854 li
343.318 44.6782 li
343.318 45.0649 li
343.512 45.0649 li
343.512 45.2578 li
343.705 45.2578 li
343.705 45.4502 li
343.896 45.4502 li
344.283 45.0645 li
344.283 44.8721 li
344.477 44.6782 li
344.477 44.4854 li
344.67 44.293 li
344.67 43.9063 li
344.863 43.7134 li
344.863 43.521 li
345.055 43.3276 li
345.055 43.1348 li
345.441 42.749 li
345.828 42.749 li
346.021 42.9414 li
346.021 43.1338 li
346.213 43.1338 li
346.213 43.3276 li
346.406 43.52 li
346.406 43.7134 li
346.6 43.9063 li
346.6 44.0986 li
346.793 44.2925 li
346.793 44.4849 li
347.178 44.8706 li
347.371 44.8706 li
347.371 45.0645 li
347.564 44.8706 li
347.758 44.8706 li
347.758 44.6782 li
347.951 44.4854 li
347.951 44.2925 li
348.143 44.2925 li
348.143 44.0996 li
348.336 43.9063 li
348.336 43.52 li
348.529 43.3276 li
348.529 43.1338 li
348.723 43.1338 li
348.723 42.9414 li
348.916 42.749 li
348.916 42.5552 li
349.301 42.5552 li
349.301 42.3628 li
349.494 42.5552 li
349.688 42.5552 li
349.688 42.749 li
349.881 42.749 li
349.881 42.9414 li
350.072 42.9414 li
350.072 43.1338 li
350.266 43.1338 li
350.266 43.3276 li
351.039 43.3276 li
351.039 43.1338 li
351.232 43.1338 li
351.232 42.9414 li
351.424 42.9414 li
351.424 42.749 li
351.617 42.5552 li
351.617 42.3628 li
351.811 42.3628 li
352.004 42.1694 li
352.197 42.1694 li
352.584 42.5562 li
352.584 42.749 li
352.775 42.9414 li
352.775 43.1348 li
352.969 43.3276 li
352.969 43.9072 li
353.162 44.1006 li
353.162 44.293 li
353.354 44.4854 li
353.354 44.8726 li
353.547 45.0649 li
353.547 45.2578 li
353.934 45.6445 li
354.127 45.6445 li
354.127 45.4512 li
354.32 45.4512 li
354.32 45.2588 li
354.512 45.2588 li
354.512 44.8726 li
354.707 44.6792 li
354.707 44.4863 li
354.898 44.293 li
354.898 43.7134 li
355.092 43.521 li
355.092 43.3286 li
355.285 43.1348 li
355.285 42.9424 li
355.477 42.9424 li
355.477 42.749 li
355.672 42.749 li
355.672 42.5562 li
355.863 42.5562 li
355.863 42.749 li
356.057 42.749 li
356.057 42.9424 li
356.25 43.1348 li
356.25 43.3286 li
356.441 43.521 li
356.441 43.7134 li
356.635 43.9072 li
356.635 44.0996 li
356.828 44.293 li
356.828 44.4854 li
357.021 44.6782 li
357.408 44.6782 li
357.6 44.4854 li
357.6 44.293 li
357.793 44.0996 li
357.793 43.9072 li
357.986 43.7134 li
357.986 43.3276 li
358.18 43.1348 li
358.18 42.749 li
358.373 42.5552 li
358.373 42.1694 li
358.564 42.1694 li
358.564 41.5898 li
358.758 41.5898 li
358.758 41.3975 li
358.951 41.2036 li
359.529 41.2036 li
359.529 41.5898 li
359.723 41.5898 li
359.723 41.9771 li
359.916 42.1694 li
359.916 42.3623 li
360.109 42.5552 li
360.109 42.748 li
360.303 42.9414 li
360.303 43.3276 li
360.494 43.3276 li
360.494 43.7134 li
360.688 43.9063 li
360.688 44.0996 li
360.881 44.2925 li
360.881 44.4854 li
361.074 44.4854 li
361.074 44.6782 li
361.268 44.6782 li
361.459 44.8706 li
361.846 44.8706 li
361.846 45.0645 li
363.199 45.0645 li
363.199 44.8706 li
363.391 44.8706 li
363.391 44.6782 li
363.584 44.6782 li
363.584 44.4854 li
363.777 44.4854 li
363.777 44.0986 li
363.971 44.0986 li
363.971 43.7129 li
364.164 43.7129 li
364.164 43.1333 li
364.355 43.1333 li
364.355 42.7471 li
364.549 42.5547 li
364.549 42.3613 li
364.742 42.1685 li
364.742 41.7827 li
364.934 41.7827 li
364.934 41.5889 li
365.129 41.3965 li
365.129 41.2031 li
365.707 41.2031 li
365.707 41.3965 li
365.9 41.5889 li
365.9 41.7827 li
366.094 41.7827 li
366.094 42.1685 li
366.285 42.3613 li
366.285 42.7471 li
366.479 42.9409 li
366.479 43.1333 li
366.672 43.3267 li
366.672 43.7129 li
366.865 43.7129 li
366.865 44.0986 li
367.25 44.4849 li
367.637 44.4849 li
368.023 44.0986 li
368.023 43.9063 li
368.217 43.9063 li
368.217 43.7129 li
368.41 43.7129 li
368.41 43.52 li
369.182 43.52 li
369.182 43.7129 li
369.375 43.7129 li
369.375 43.9063 li
369.568 43.9063 li
369.568 44.0986 li
369.76 44.291 li
369.76 44.4849 li
369.953 44.6777 li
369.953 44.8706 li
370.146 44.8706 li
370.146 45.0635 li
370.727 45.0635 li
370.918 44.8706 li
370.918 44.6777 li
371.111 44.6777 li
371.111 44.4849 li
371.305 44.291 li
371.305 44.0986 li
371.498 43.9063 li
371.498 43.519 li
371.691 43.3267 li
371.691 42.9409 li
371.885 42.9409 li
371.885 42.5547 li
372.076 42.3613 li
372.076 42.1685 li
372.27 41.9751 li
372.27 41.5889 li
372.463 41.5889 li
372.463 41.2031 li
372.656 41.2031 li
372.656 41.0107 li
372.848 41.0107 li
372.848 40.8169 li
373.234 40.8169 li
373.428 41.0107 li
373.428 41.2031 li
373.621 41.2031 li
373.621 41.5889 li
373.813 41.5889 li
373.813 41.9751 li
374.006 42.1685 li
374.006 42.5547 li
374.199 42.7471 li
374.199 43.1338 li
374.393 43.3267 li
374.393 44.0986 li
374.586 44.2925 li
374.586 44.8716 li
374.777 45.0645 li
374.777 45.4502 li
374.971 45.644 li
374.971 46.0298 li
375.164 46.2222 li
375.164 46.6094 li
375.357 46.6094 li
375.357 46.9956 li
375.742 46.9956 li
375.936 46.8018 li
375.936 46.6094 li
376.129 46.4165 li
376.129 46.0298 li
376.322 45.8369 li
376.322 45.2578 li
376.516 45.0649 li
376.516 44.4854 li
376.707 44.2925 li
376.707 43.7129 li
376.9 43.52 li
376.9 42.9404 li
377.094 42.7471 li
377.094 41.9751 li
377.287 41.7827 li
377.287 41.5889 li
377.48 41.3965 li
377.48 41.2031 li
377.672 41.0107 li
378.059 41.0107 li
378.059 41.2031 li
378.252 41.3965 li
378.252 41.5889 li
378.445 41.7827 li
378.445 41.9751 li
378.639 42.168 li
378.639 42.5547 li
378.83 42.5547 li
378.83 42.9409 li
379.023 43.1333 li
379.023 43.3267 li
379.217 43.519 li
379.217 43.7119 li
379.797 43.7119 li
380.375 43.1323 li
380.955 43.1323 li
380.955 43.3257 li
381.148 43.3257 li
381.148 43.5186 li
381.342 43.7119 li
381.342 43.9043 li
381.533 43.9043 li
381.533 44.2905 li
381.727 44.4839 li
381.727 44.8701 li
381.92 44.8701 li
381.92 45.063 li
382.113 45.2559 li
382.113 45.4487 li
382.307 45.4487 li
382.307 45.6426 li
382.691 45.6426 li
382.691 45.4487 li
382.885 45.2559 li
382.885 45.063 li
383.078 45.063 li
383.078 44.6768 li
383.271 44.4839 li
383.271 44.2905 li
383.465 44.0981 li
383.465 43.7119 li
383.656 43.5186 li
383.656 42.939 li
383.85 42.7466 li
383.85 42.5527 li
384.043 42.3604 li
384.043 42.168 li
384.234 41.9741 li
384.234 41.7817 li
384.43 41.7817 li
384.621 41.5884 li
384.814 41.5884 li
384.814 41.7817 li
385.008 41.7817 li
385.199 41.9741 li
385.199 42.168 li
385.395 42.168 li
385.395 42.5537 li
385.586 42.5537 li
385.586 42.7466 li
385.779 42.9395 li
385.779 43.1323 li
385.973 43.1323 li
385.973 43.3247 li
386.357 43.7119 li
386.357 43.9043 li
386.553 43.9043 li
386.553 44.0972 li
386.744 44.0972 li
386.744 44.2905 li
386.938 44.2905 li
387.131 44.4834 li
388.289 44.4834 li
388.289 44.2905 li
388.676 44.2905 li
388.676 44.0972 li
388.869 44.0972 li
388.869 43.9043 li
389.061 43.9043 li
389.061 43.7119 li
389.254 43.7119 li
389.254 43.5186 li
389.447 43.5186 li
389.447 43.3257 li
389.834 42.9395 li
389.834 42.7466 li
390.025 42.7466 li
390.025 42.5537 li
390.221 42.5537 li
390.221 42.3604 li
390.412 42.3604 li
390.412 42.168 li
390.799 42.168 li
391.379 42.7471 li
391.379 42.9395 li
391.572 42.9395 li
391.572 43.1333 li
391.764 43.3257 li
391.764 43.519 li
391.957 43.7119 li
391.957 43.9043 li
392.15 44.0981 li
392.15 44.2905 li
392.344 44.2905 li
392.344 44.4839 li
392.537 44.4839 li
392.537 44.6768 li
393.115 44.6768 li
393.115 44.4839 li
393.309 44.4839 li
393.309 44.2905 li
393.502 44.2905 li
393.502 44.0981 li
393.693 44.0981 li
393.693 43.9043 li
393.887 43.7119 li
393.887 43.519 li
394.08 43.519 li
394.08 43.3257 li
394.273 43.1333 li
394.467 43.1333 li
394.467 42.9395 li
394.852 42.9395 li
394.852 43.1333 li
395.238 43.1333 li
395.238 43.3257 li
395.432 43.3257 li
395.625 43.519 li
395.816 43.519 li
396.01 43.7119 li
396.203 43.7119 li
396.203 43.519 li
396.59 43.519 li
396.59 43.3257 li
396.975 43.3257 li
396.975 43.1333 li
397.748 43.1333 li
397.941 43.3257 li
398.135 43.3257 li
398.135 43.519 li
398.326 43.519 li
398.326 43.7119 li
398.52 43.7119 li
398.52 43.9043 li
398.713 43.9043 li
398.713 44.0981 li
399.484 44.0981 li
399.484 43.9043 li
399.678 43.9043 li
399.678 43.7119 li
399.871 43.7119 li
399.871 43.519 li
400.064 43.519 li
400.064 43.3257 li
400.258 43.3257 li
400.258 43.1333 li
400.449 43.1333 li
400.449 42.9395 li
401.223 42.9395 li
401.223 43.1333 li
401.416 43.1333 li
401.416 43.3257 li
401.609 43.3257 li
401.609 43.519 li
401.801 43.519 li
401.801 43.7119 li
401.994 43.7119 li
401.994 43.9043 li
402.188 43.9043 li
402.188 44.0981 li
403.152 44.0981 li
403.152 43.9043 li
403.346 43.9043 li
403.346 43.7119 li
403.539 43.7119 li
403.539 43.519 li
403.732 43.519 li
404.117 43.1323 li
404.504 43.1323 li
404.504 42.9395 li
405.084 42.9395 li
405.277 43.1323 li
405.662 43.1323 li
405.662 43.3257 li
405.855 43.3257 li
405.855 43.5186 li
406.049 43.5186 li
406.242 43.7119 li
406.436 43.7119 li
406.436 43.9043 li
406.627 43.9043 li
406.627 44.0972 li
407.014 44.0972 li
407.014 44.2905 li
407.4 44.2905 li
407.594 44.0972 li
407.785 44.0972 li
407.785 43.9043 li
407.979 43.9043 li
407.979 43.7119 li
408.172 43.7119 li
408.172 43.5186 li
408.365 43.5186 li
408.365 43.3257 li
408.559 43.3257 li
408.559 43.1323 li
408.943 42.7466 li
409.137 42.7466 li
409.137 42.5537 li
409.523 42.5537 li
409.523 42.7466 li
409.91 42.7466 li
409.91 42.9395 li
410.104 42.9395 li
410.104 43.1323 li
410.295 43.1323 li
410.295 43.3247 li
410.488 43.5186 li
410.488 43.7114 li
410.682 43.7114 li
410.682 43.9043 li
410.875 43.9043 li
410.875 44.0972 li
411.068 44.0972 li
411.26 44.2896 li
411.84 44.2896 li
412.033 44.0972 li
412.227 44.0972 li
412.227 43.9043 li
412.418 43.9043 li
412.418 43.7114 li
412.611 43.7114 li
412.805 43.5186 li
412.998 43.5186 li
412.998 43.3247 li
413.191 43.3247 li
413.383 43.1323 li
415.508 43.1323 li
415.508 43.3247 li
416.088 43.3247 li
416.088 43.5186 li
416.281 43.5186 li
416.473 43.7114 li
416.666 43.7114 li
416.666 43.9043 li
417.053 43.9043 li
417.053 44.0972 li
417.633 44.0972 li
417.633 44.2896 li
417.824 44.2896 li
417.824 44.0972 li
418.404 44.0972 li
418.404 43.9043 li
418.791 43.9043 li
418.791 43.7114 li
418.984 43.7114 li
418.984 43.5186 li
419.178 43.5186 li
419.369 43.3247 li
419.563 43.3247 li
419.563 43.1323 li
419.756 43.1323 li
419.756 42.9395 li
420.141 42.9395 li
420.141 42.7466 li
420.527 42.7466 li
420.527 42.5537 li
421.107 42.5537 li
421.301 42.7466 li
421.494 42.7466 li
421.494 42.9395 li
421.686 42.9395 li
421.686 43.1323 li
422.072 43.5186 li
422.072 43.7119 li
422.266 43.7119 li
422.266 43.9043 li
422.459 44.0972 li
422.459 44.2905 li
422.652 44.2905 li
422.652 44.4834 li
422.844 44.4834 li
422.844 44.6768 li
423.424 44.6768 li
423.424 44.4834 li
423.617 44.4834 li
423.617 44.2905 li
423.811 44.0972 li
423.811 43.9043 li
424.002 43.9043 li
424.002 43.7119 li
424.195 43.5186 li
424.195 43.3257 li
424.389 43.3257 li
424.389 42.9395 li
424.582 42.9395 li
424.582 42.7466 li
425.16 42.7466 li
425.354 42.9395 li
425.354 43.1323 li
425.547 43.1323 li
425.547 43.3247 li
425.74 43.5186 li
425.74 43.7114 li
425.932 43.9043 li
425.932 44.0972 li
426.125 44.0972 li
426.125 44.2896 li
426.318 44.4834 li
426.318 44.6758 li
426.705 44.6758 li
426.705 44.4834 li
426.896 44.4834 li
426.896 44.2896 li
427.092 44.2896 li
427.092 43.9038 li
427.283 43.7114 li
427.283 43.3247 li
427.477 43.3247 li
427.477 42.938 li
427.67 42.7456 li
427.67 42.5527 li
427.861 42.3594 li
427.861 42.167 li
428.055 41.9731 li
428.055 41.7808 li
428.441 41.7808 li
428.441 41.9731 li
428.635 41.9731 li
428.635 42.3604 li
428.828 42.3604 li
428.828 42.7466 li
429.02 42.939 li
429.02 43.5186 li
429.215 43.7119 li
429.215 44.0981 li
429.406 44.2905 li
429.406 44.4839 li
429.6 44.6768 li
429.6 45.063 li
429.793 45.063 li
429.793 45.2559 li
430.178 45.2559 li
430.178 45.063 li
430.373 44.8701 li
430.373 44.6768 li
430.564 44.4839 li
430.564 44.0981 li
430.758 43.9043 li
430.758 43.5186 li
430.951 43.1323 li
430.951 42.5527 li
431.143 42.3604 li
431.143 41.9731 li
431.338 41.7808 li
431.338 41.3945 li
431.529 41.3945 li
431.529 41.2012 li
431.916 41.2012 li
431.916 41.5884 li
432.109 41.5884 li
432.109 41.9741 li
432.303 42.3604 li
432.303 42.7466 li
432.494 43.1323 li
432.494 43.519 li
432.688 43.9053 li
432.688 44.6777 li
432.881 45.0635 li
432.881 45.4502 li
433.074 45.8364 li
433.074 46.2222 li
433.266 46.2222 li
433.266 46.6089 li
433.652 46.6089 li
433.652 46.416 li
433.846 46.2222 li
433.846 45.8364 li
434.039 45.644 li
434.039 45.2578 li
434.23 44.8706 li
434.23 44.291 li
434.424 44.0986 li
434.424 43.519 li
434.617 43.1333 li
434.617 42.3604 li
434.811 42.168 li
434.811 41.7817 li
435.004 41.5884 li
435.004 41.3955 li
435.195 41.2031 li
435.389 41.2031 li
435.582 41.3955 li
435.582 41.7817 li
435.775 41.9751 li
435.775 42.3613 li
435.969 42.5537 li
435.969 42.9395 li
436.16 43.1333 li
436.16 43.7129 li
436.354 43.9053 li
436.354 44.4849 li
436.547 44.6782 li
436.547 44.8706 li
436.74 45.0635 li
437.127 45.0635 li
437.127 44.8706 li
437.318 44.6782 li
437.318 44.0986 li
437.512 43.9053 li
437.512 43.3257 li
437.705 43.1333 li
437.705 42.5537 li
437.898 42.3604 li
437.898 41.7808 li
438.09 41.5884 li
438.09 41.2021 li
438.283 41.0088 li
438.283 40.6226 li
438.477 40.4302 li
438.67 40.4302 li
438.863 40.6226 li
438.863 40.8164 li
439.055 41.0088 li
439.055 41.3945 li
439.248 41.5884 li
439.248 42.5537 li
439.441 42.7466 li
439.441 43.519 li
439.635 43.7119 li
439.635 44.4839 li
439.826 44.6777 li
439.826 45.4497 li
440.02 45.6431 li
440.02 46.2222 li
440.213 46.415 li
440.213 46.9946 li
440.406 47.188 li
440.406 47.3809 li
440.6 47.3809 li
440.6 47.5732 li
440.791 47.3809 li
440.984 47.3809 li
440.984 46.9946 li
441.178 46.8013 li
441.178 46.415 li
441.371 46.2222 li
441.371 45.8354 li
441.564 45.6431 li
441.564 45.0635 li
441.756 44.8706 li
441.756 44.291 li
441.949 44.0981 li
441.949 43.3257 li
442.143 43.1323 li
442.143 42.7466 li
442.336 42.5537 li
442.336 42.168 li
442.529 41.9741 li
442.529 41.7817 li
442.721 41.5884 li
442.721 41.3955 li
442.914 41.2031 li
442.914 41.0093 li
443.107 41.0093 li
443.107 40.8169 li
443.494 40.8169 li
443.879 41.2031 li
443.879 41.3955 li
444.072 41.3955 li
444.072 41.7827 li
444.266 41.7827 li
444.266 41.9751 li
444.459 42.168 li
444.459 42.3608 li
444.652 42.5537 li
444.652 42.7471 li
444.844 42.9395 li
444.844 43.3257 li
445.037 43.3257 li
445.037 43.7119 li
445.23 43.7119 li
445.23 43.9053 li
445.424 44.0981 li
445.424 44.291 li
445.617 44.291 li
445.617 44.4839 li
445.809 44.4839 li
445.809 44.6768 li
446.002 44.6768 li
446.195 44.8701 li
446.775 44.8701 li
446.967 44.6768 li
447.354 44.6768 li
447.354 44.4839 li
447.547 44.4839 li
447.547 44.291 li
447.74 44.291 li
447.934 44.0981 li
448.125 44.0981 li
448.125 43.9053 li
448.318 43.9053 li
448.318 43.7119 li
448.512 43.7119 li
448.512 43.519 li
448.705 43.519 li
448.705 43.3267 li
448.898 43.3267 li
449.09 43.1333 li
449.283 43.1333 li
449.283 42.9404 li
450.828 42.9404 li
451.021 43.1333 li
451.408 43.1333 li
451.408 43.3267 li
451.986 43.3267 li
451.986 43.519 li
452.566 43.519 li
452.76 43.7119 li
455.658 43.7119 li
455.85 43.519 li
456.814 43.519 li
456.814 43.3267 li
458.746 43.3267 li
458.746 43.519 li
459.713 43.519 li
459.713 43.7119 li
460.293 43.7119 li
460.486 43.519 li
463.77 43.519 li
219.306 45.8374 mo
219.306 46.8037 li
219.5 47.1899 li
219.5 48.5415 li
219.693 48.9272 li
219.693 49.7007 li
219.884 49.8931 li
219.884 50.2788 li
220.079 50.4727 li
220.079 50.665 li
220.271 50.665 li
220.271 50.4727 li
220.464 50.2788 li
220.464 49.5068 li
220.658 49.1211 li
220.658 48.3477 li
220.849 47.9619 li
220.849 46.9961 li
221.043 46.4165 li
221.043 45.2578 li
221.236 44.6782 li
221.236 43.519 li
221.429 42.9399 li
221.429 41.2012 li
221.623 40.6221 li
221.623 39.6563 li
221.814 39.0771 li
221.814 38.3042 li
222.007 37.918 li
222.007 37.3384 li
222.201 36.9526 li
222.201 36.5664 li
222.394 36.373 li
222.394 36.1807 li
222.587 35.9878 li
222.587 36.1807 li
222.779 36.373 li
222.779 36.5664 li
222.972 36.7588 li
222.972 37.3384 li
223.166 37.7246 li
223.166 38.8838 li
223.359 39.2705 li
223.359 40.2358 li
223.552 40.6221 li
223.552 41.5874 li
223.744 42.167 li
223.744 43.1323 li
223.937 43.7119 li
223.937 44.6782 li
224.13 45.2578 li
224.13 46.8032 li
224.324 47.189 li
224.324 47.9609 li
224.516 48.3477 li
224.516 48.9272 li
224.708 49.3135 li
224.708 49.6992 li
224.902 49.8921 li
224.902 50.0854 li
225.095 50.0854 li
225.289 49.8921 li
225.289 49.6992 li
225.481 49.3135 li
225.481 48.9272 li
225.674 48.5405 li
225.674 47.9609 li
225.867 47.5752 li
225.867 46.8032 li
226.06 46.4165 li
226.06 45.0645 li
226.253 44.6782 li
226.253 43.9063 li
226.445 43.3267 li
226.445 42.5537 li
226.639 42.168 li
226.639 41.5884 li
226.832 41.2021 li
226.832 40.6226 li
227.025 40.4292 li
227.025 39.8496 li
227.218 39.6572 li
227.218 39.4648 li
227.41 39.271 li
227.796 39.271 li
227.796 39.4648 li
227.99 39.6572 li
227.99 39.8496 li
228.183 40.0435 li
228.183 40.4292 li
228.376 40.6221 li
228.376 41.0088 li
228.569 41.2012 li
228.569 41.5874 li
228.761 41.7808 li
228.761 42.5527 li
228.955 42.939 li
228.955 43.3247 li
229.148 43.5186 li
229.148 44.0981 li
229.34 44.2905 li
229.34 44.6768 li
229.533 44.8701 li
229.533 45.2559 li
229.726 45.4487 li
229.726 46.0293 li
229.919 46.0293 li
229.919 46.2217 li
230.113 46.2217 li
230.113 46.4146 li
230.305 46.4146 li
230.691 46.0283 li
230.691 45.6426 li
230.884 45.4487 li
230.884 45.063 li
231.078 44.8701 li
231.078 44.2905 li
231.27 44.0972 li
231.27 43.7114 li
231.462 43.5186 li
231.462 42.939 li
231.656 42.7456 li
231.656 42.166 li
231.849 41.9731 li
231.849 41.7808 li
232.042 41.5874 li
232.042 41.395 li
232.428 41.395 li
232.428 41.5874 li
232.621 41.7808 li
232.621 41.9731 li
232.814 42.166 li
232.814 42.5527 li
233.006 42.7456 li
233.006 43.1318 li
233.201 43.3247 li
233.201 43.7114 li
233.393 44.0972 li
233.393 44.6768 li
233.586 44.8701 li
233.586 45.2559 li
233.779 45.4487 li
233.779 45.6426 li
234.166 46.0283 li
234.358 46.0283 li
234.358 45.835 li
234.551 45.6426 li
234.551 45.4487 li
234.744 45.2559 li
234.744 44.8701 li
234.937 44.6768 li
234.937 44.2905 li
235.13 44.0981 li
235.13 43.7119 li
235.323 43.3247 li
235.323 42.7456 li
235.516 42.5527 li
235.516 41.9731 li
235.708 41.7808 li
235.708 41.3936 li
235.902 41.2012 li
235.902 41.0088 li
236.094 40.8154 li
236.094 40.6226 li
236.288 40.6226 li
236.288 40.4292 li
236.481 40.4292 li
236.481 40.6226 li
236.673 40.6226 li
236.673 40.8154 li
236.867 41.0088 li
236.867 41.395 li
237.059 41.5874 li
237.059 42.167 li
237.252 42.3604 li
237.252 42.9399 li
237.445 43.1323 li
237.445 43.7119 li
237.638 43.9043 li
237.638 44.4839 li
237.832 44.6777 li
237.832 45.2573 li
238.024 45.4497 li
238.024 45.8354 li
238.217 46.0293 li
238.217 46.2217 li
238.41 46.2217 li
238.41 46.415 li
238.604 46.415 li
238.99 46.0293 li
238.99 45.6426 li
239.182 45.4497 li
239.182 45.0635 li
239.375 44.8701 li
239.375 44.4839 li
239.568 44.2915 li
239.568 43.9043 li
239.762 43.7119 li
239.762 43.3262 li
239.955 43.1323 li
239.955 42.7466 li
240.146 42.5537 li
240.146 42.168 li
240.34 42.168 li
240.34 41.9746 li
240.533 41.7817 li
240.533 41.5884 li
240.727 41.5884 li
240.727 41.3955 li
240.92 41.3955 li
240.92 41.2031 li
241.498 41.2031 li
241.498 41.3955 li
241.691 41.3955 li
241.691 41.5884 li
241.885 41.5884 li
241.885 41.9751 li
242.078 41.9751 li
242.078 42.3613 li
242.27 42.5537 li
242.27 42.9399 li
242.463 43.1333 li
242.463 43.7129 li
242.656 43.9053 li
242.656 44.8706 li
242.85 45.0645 li
242.85 45.644 li
243.043 46.0298 li
243.043 46.416 li
243.234 46.6094 li
243.234 46.9956 li
243.428 47.188 li
243.428 47.3813 li
243.621 47.5742 li
243.621 47.3813 li
243.814 47.3813 li
243.814 46.9946 li
244.008 46.8018 li
244.008 46.2222 li
244.199 45.8364 li
244.199 45.0635 li
244.393 44.6777 li
244.393 43.7119 li
244.586 43.1323 li
244.586 41.7808 li
244.779 41.2012 li
244.779 40.4287 li
244.971 40.0425 li
244.971 39.2705 li
245.164 39.0771 li
245.164 38.6909 li
245.357 38.4985 li
245.357 38.6909 li
245.551 38.6909 li
245.551 39.4629 li
245.744 39.8496 li
245.744 40.8154 li
245.936 41.395 li
245.936 42.7466 li
246.129 43.519 li
246.129 45.0645 li
246.322 45.8364 li
246.322 48.1543 li
246.516 48.9272 li
246.516 50.2788 li
246.709 50.8584 li
246.709 52.0171 li
246.9 52.4033 li
246.9 52.9829 li
247.094 53.1763 li
247.287 52.9829 li
247.287 51.8237 li
247.48 51.2441 li
247.48 49.6992 li
247.674 48.7339 li
247.674 46.6094 li
247.865 45.4502 li
247.865 42.939 li
248.059 41.7803 li
248.059 39.0762 li
248.252 37.7236 li
248.252 33.8608 li
248.445 32.7021 li
248.445 30.3838 li
248.639 29.4175 li
248.639 27.8721 li
248.83 27.293 li
248.83 26.3276 li
249.023 26.1348 li
249.023 25.9414 li
249.217 26.3276 li
249.217 27.6797 li
249.41 28.4517 li
249.41 30.3838 li
249.604 31.543 li
249.604 34.2466 li
249.795 35.792 li
249.795 38.8828 li
249.988 40.4272 li
249.988 43.7119 li
250.182 45.4502 li
250.182 50.2788 li
250.375 51.8247 li
250.375 54.7222 li
250.568 56.0737 li
250.568 58.3916 li
250.76 59.3569 li
250.76 60.7095 li
250.953 61.2891 li
250.953 62.0615 li
251.146 61.8687 li
251.146 61.2891 li
251.34 60.9023 li
251.34 59.5508 li
251.533 58.585 li
251.533 56.6533 li
251.725 55.4941 li
251.725 52.9829 li
251.918 51.6313 li
251.918 47.3813 li
252.111 46.0298 li
252.111 43.5186 li
252.303 42.166 li
252.303 39.8481 li
252.496 38.8828 li
252.496 36.9507 li
252.689 36.3711 li
252.689 35.2124 li
252.883 34.8262 li
252.883 34.2466 li
253.076 34.4404 li
253.076 34.8262 li
253.268 35.4058 li
253.268 36.3711 li
253.461 37.1431 li
253.461 38.4956 li
253.654 39.2681 li
253.654 41.0063 li
253.848 41.7793 li
253.848 44.2896 li
254.041 45.063 li
254.041 46.4146 li
254.232 46.9941 li
254.232 47.7666 li
254.426 47.9595 li
254.426 48.1528 li
254.619 48.1528 li
254.619 47.7656 li
254.813 47.5732 li
254.813 45.835 li
255.006 45.2554 li
255.006 43.5171 li
255.197 42.7451 li
255.197 40.813 li
255.391 39.8477 li
255.391 37.9155 li
255.584 36.9502 li
255.584 34.4385 li
255.777 33.6655 li
255.777 32.5068 li
255.971 31.9272 li
255.971 31.3477 li
256.162 31.1553 li
256.355 31.3477 li
256.355 31.9272 li
256.549 32.5068 li
256.549 34.6318 li
256.742 35.4043 li
256.742 37.5283 li
256.936 38.4941 li
256.936 40.8125 li
257.127 41.9712 li
257.127 44.2891 li
257.32 45.4482 li
257.32 47.5732 li
257.514 48.5391 li
257.514 51.4365 li
257.707 52.2085 li
257.707 53.5605 li
257.9 53.9468 li
257.9 54.7192 li
258.092 55.105 li
258.092 55.2988 li
258.285 55.2988 li
258.285 55.105 li
258.479 54.7192 li
258.479 53.7534 li
258.672 53.3677 li
258.672 52.2085 li
258.863 51.6289 li
258.863 50.4702 li
259.057 49.8906 li
259.057 48.9248 li
259.25 48.3452 li
259.25 47.1865 li
259.443 46.7993 li
259.443 45.4482 li
259.637 45.062 li
259.637 44.2891 li
259.828 44.0967 li
259.828 43.5171 li
260.021 43.3242 li
260.021 42.9375 li
260.215 42.7451 li
260.215 42.1655 li
260.408 41.9717 li
260.408 41.7793 li
260.602 41.5864 li
260.602 41.1997 li
260.793 41.0068 li
260.793 40.6211 li
260.986 40.4272 li
260.986 39.8481 li
261.18 39.6553 li
261.18 39.0762 li
261.373 38.8838 li
261.373 38.3042 li
261.566 38.1104 li
261.566 37.918 li
261.758 37.7246 li
261.758 37.5317 li
261.951 37.5317 li
262.145 37.7246 li
262.145 38.1113 li
262.336 38.3042 li
262.336 38.6899 li
262.531 39.0762 li
262.531 39.6553 li
262.723 40.0425 li
262.723 41.0078 li
262.916 41.3936 li
262.916 42.166 li
263.109 42.7456 li
263.109 43.9043 li
263.301 44.291 li
263.301 45.0635 li
263.496 45.4497 li
263.496 46.0293 li
263.688 46.2222 li
263.688 46.8018 li
263.881 46.8018 li
263.881 46.9946 li
264.074 47.188 li
264.266 46.9946 li
264.266 46.8018 li
264.461 46.6089 li
264.461 46.2222 li
264.652 46.0298 li
264.652 45.6431 li
264.846 45.4502 li
264.846 44.6782 li
265.039 44.4849 li
265.039 44.0986 li
265.232 43.9063 li
265.232 43.519 li
265.424 43.3267 li
265.424 43.1338 li
265.617 42.9404 li
265.617 42.748 li
266.197 42.748 li
266.197 42.9404 li
266.391 42.9404 li
266.391 43.1338 li
266.582 43.3267 li
266.582 43.519 li
266.775 43.519 li
266.775 43.9063 li
266.969 43.9063 li
266.969 44.0986 li
267.162 44.0986 li
267.162 44.291 li
267.355 44.291 li
267.355 44.4849 li
267.74 44.4849 li
267.74 44.291 li
267.934 44.291 li
268.32 43.9053 li
268.32 43.7129 li
268.512 43.7129 li
268.512 43.519 li
268.705 43.519 li
268.705 43.3267 li
268.898 43.3267 li
268.898 43.1338 li
269.092 43.1338 li
269.285 42.9404 li
270.057 42.9404 li
270.25 43.1338 li
270.443 43.1338 li
270.637 43.3267 li
270.83 43.3267 li
271.021 43.519 li
271.215 43.519 li
271.408 43.7129 li
272.373 43.7129 li
272.373 43.519 li
272.76 43.519 li
272.953 43.3267 li
273.338 43.3267 li
273.531 43.1338 li
274.111 43.1338 li
274.111 43.3267 li
274.885 43.3267 li
275.076 43.519 li
275.27 43.519 li
275.463 43.7129 li
275.656 43.7129 li
275.85 43.9053 li
276.041 43.9053 li
276.234 44.0986 li
277.006 44.0986 li
277.006 43.9053 li
277.393 43.9053 li
277.393 43.7129 li
277.586 43.7129 li
277.586 43.519 li
277.779 43.519 li
277.971 43.3267 li
277.971 43.1338 li
278.164 43.1338 li
278.357 42.9404 li
278.551 42.9404 li
278.744 42.748 li
278.936 42.748 li
278.936 42.9404 li
279.324 42.9404 li
279.324 43.1338 li
279.516 43.1338 li
279.516 43.3267 li
279.709 43.3267 li
279.709 43.519 li
279.902 43.519 li
279.902 43.7129 li
280.094 43.7129 li
280.289 43.9053 li
281.061 43.9053 li
281.061 43.7129 li
281.252 43.7129 li
281.447 43.519 li
282.219 43.519 li
282.412 43.7129 li
282.604 43.7129 li
282.604 43.9053 li
282.99 44.291 li
283.184 44.291 li
283.184 44.4849 li
283.57 44.4849 li
283.57 44.291 li
283.762 44.291 li
284.15 43.9053 li
284.15 43.7129 li
284.342 43.7129 li
284.342 43.3267 li
284.535 43.3267 li
284.535 42.9395 li
284.729 42.9395 li
284.729 42.7471 li
284.92 42.5547 li
284.92 42.3608 li
285.115 42.3608 li
285.115 42.1685 li
285.887 42.1685 li
285.887 42.3608 li
286.078 42.3608 li
286.078 42.5547 li
286.273 42.5547 li
286.273 42.7471 li
286.658 43.1333 li
286.852 43.1333 li
286.852 43.3267 li
287.816 43.3267 li
287.816 43.1333 li
288.203 43.1333 li
288.783 43.7129 li
288.783 43.9063 li
288.977 44.0986 li
288.977 44.4849 li
289.17 44.6782 li
289.17 45.0645 li
289.361 45.2568 li
289.361 45.4502 li
289.555 45.6431 li
289.555 46.0293 li
289.748 46.0293 li
289.748 46.415 li
289.939 46.415 li
289.939 46.6089 li
290.135 46.8013 li
290.326 46.8013 li
290.326 46.6089 li
290.52 46.415 li
290.52 46.2222 li
290.713 46.0298 li
290.713 45.8364 li
290.904 45.4502 li
290.904 44.8706 li
291.1 44.4849 li
291.1 44.0986 li
291.291 43.7119 li
291.291 43.1323 li
291.484 42.9395 li
291.484 42.3604 li
291.678 42.168 li
291.678 41.5884 li
291.869 41.3945 li
291.869 40.6226 li
292.063 40.4292 li
292.063 40.2368 li
292.256 40.0439 li
292.256 39.8506 li
292.449 39.8506 li
292.449 39.6577 li
292.643 39.6577 li
292.643 39.8506 li
292.834 39.8506 li
292.834 40.0439 li
293.027 40.0439 li
293.027 40.4297 li
293.221 40.4297 li
293.221 40.8164 li
293.414 40.8164 li
293.414 41.2021 li
293.607 41.3955 li
293.607 41.9751 li
293.799 42.168 li
293.799 42.5537 li
293.992 42.5537 li
293.992 42.9395 li
294.186 43.1333 li
294.186 43.519 li
294.379 43.7119 li
294.379 44.0986 li
294.572 44.0986 li
294.572 44.6782 li
294.764 44.6782 li
294.764 45.0645 li
294.957 45.2568 li
294.957 45.4502 li
295.15 45.4502 li
295.15 45.8364 li
295.344 45.8364 li
295.344 46.0293 li
295.537 46.0293 li
295.537 46.2222 li
295.729 46.415 li
296.115 46.415 li
296.115 46.2222 li
296.309 46.2222 li
296.309 46.0293 li
296.502 46.0293 li
296.502 45.6431 li
296.695 45.6431 li
296.695 45.4502 li
296.887 45.2568 li
296.887 44.8706 li
297.08 44.6782 li
297.08 44.4849 li
297.273 44.292 li
297.273 43.7129 li
297.465 43.519 li
297.465 43.3267 li
297.66 43.1338 li
297.66 42.9404 li
297.852 42.748 li
297.852 42.5547 li
298.045 42.3618 li
298.045 42.1694 li
298.238 42.1694 li
298.238 41.9756 li
298.43 41.7832 li
298.816 41.7832 li
298.816 41.9756 li
299.01 41.9756 li
299.01 42.1694 li
299.203 42.1694 li
299.203 42.3618 li
299.396 42.3618 li
299.396 42.5547 li
299.588 42.5547 li
299.588 42.748 li
299.781 42.748 li
299.781 42.9404 li
299.975 42.9404 li
299.975 43.1338 li
300.939 43.1338 li
300.939 42.9404 li
301.133 42.9404 li
301.133 42.748 li
301.52 42.748 li
301.52 42.5547 li
302.1 42.5547 li
302.1 42.748 li
302.291 42.748 li
302.486 42.9404 li
302.486 43.1338 li
302.678 43.1338 li
302.678 43.3267 li
302.871 43.519 li
302.871 43.9063 li
303.064 43.9063 li
303.064 44.292 li
303.256 44.292 li
303.256 44.6782 li
303.449 44.6782 li
303.449 45.0645 li
303.643 45.2573 li
303.643 45.4502 li
303.836 45.4502 li
303.836 45.8364 li
304.029 45.8364 li
304.029 46.0298 li
304.221 46.2222 li
304.801 46.2222 li
304.801 46.0298 li
304.994 46.0298 li
304.994 45.8364 li
305.188 45.644 li
305.188 45.4502 li
305.379 45.2573 li
305.379 45.0649 li
305.572 44.8716 li
305.572 44.4854 li
305.766 44.293 li
305.766 43.7134 li
305.959 43.52 li
305.959 43.1338 li
306.152 42.748 li
306.152 42.3618 li
306.344 42.1685 li
306.344 41.7827 li
306.537 41.5898 li
306.537 40.8169 li
306.73 40.624 li
306.73 40.2383 li
306.924 40.0444 li
306.924 39.8521 li
307.117 39.6587 li
307.117 39.4663 li
307.309 39.4663 li
307.309 39.2734 li
307.502 39.2734 li
307.502 39.4663 li
307.695 39.4663 li
307.695 39.6587 li
307.889 39.6587 li
307.889 40.0459 li
308.082 40.2383 li
308.082 40.624 li
308.273 41.0103 li
308.273 41.3975 li
308.467 41.7832 li
308.467 42.5552 li
308.66 42.9414 li
308.66 43.521 li
308.854 43.9077 li
308.854 44.4873 li
309.047 44.873 li
309.047 45.4526 li
309.238 45.6455 li
309.238 46.2246 li
309.432 46.418 li
309.432 46.998 li
309.625 47.1904 li
309.625 47.3828 li
309.818 47.3828 li
309.818 47.5767 li
310.012 47.5767 li
310.012 47.3828 li
310.203 47.3828 li
310.203 47.1904 li
310.396 47.1904 li
310.396 46.6108 li
310.59 46.418 li
310.59 46.0313 li
310.783 45.8389 li
310.783 45.4526 li
310.975 45.2593 li
310.975 44.6797 li
311.168 44.4873 li
311.168 43.9077 li
311.361 43.5215 li
311.361 43.1357 li
311.555 42.9419 li
311.555 42.5562 li
311.748 42.5562 li
311.748 42.1699 li
311.939 42.1699 li
311.939 41.9766 li
312.133 41.7842 li
312.133 41.5913 li
312.52 41.5913 li
312.52 41.7842 li
312.713 41.7842 li
312.904 41.9766 li
312.904 42.1699 li
313.098 42.1699 li
313.098 42.3623 li
313.291 42.5562 li
313.291 42.749 li
313.484 42.749 li
313.484 42.9414 li
314.063 43.521 li
315.801 43.521 li
315.994 43.7144 li
316.188 43.7144 li
316.188 43.9067 li
316.381 43.9067 li
316.381 44.1006 li
316.766 44.1006 li
316.766 44.293 li
317.346 44.293 li
317.346 44.1006 li
317.732 44.1006 li
317.732 43.9067 li
317.926 43.7144 li
317.926 43.521 li
318.119 43.521 li
318.119 43.3281 li
318.313 43.3281 li
318.313 43.1357 li
318.504 43.1357 li
318.504 42.9419 li
318.697 42.9419 li
318.697 42.7495 li
318.891 42.5562 li
319.084 42.5562 li
319.084 42.3638 li
319.855 42.3638 li
319.855 42.5562 li
320.049 42.5562 li
320.049 42.7495 li
320.242 42.7495 li
320.242 42.9419 li
320.436 42.9419 li
320.436 43.3281 li
320.627 43.3281 li
320.627 43.7153 li
320.82 43.7153 li
320.82 44.1011 li
321.014 44.1011 li
321.014 44.4873 li
321.207 44.6797 li
321.207 44.873 li
321.4 45.0659 li
321.4 45.4521 li
321.592 45.4521 li
321.592 45.8389 li
321.785 45.8389 li
321.785 46.0313 li
322.365 46.0313 li
322.365 45.6455 li
322.557 45.4521 li
322.557 45.2593 li
322.752 45.0669 li
322.752 44.6797 li
322.943 44.4873 li
322.943 43.9077 li
323.137 43.7153 li
323.137 43.3281 li
323.33 43.1357 li
323.33 42.3638 li
323.521 42.1699 li
323.521 41.7842 li
323.715 41.5913 li
323.715 41.2046 li
323.908 41.0122 li
323.908 40.8193 li
324.295 40.8193 li
324.488 41.0122 li
324.488 41.2046 li
324.68 41.3979 li
324.68 41.5903 li
324.875 41.7842 li
324.875 42.1699 li
325.066 42.3628 li
325.066 42.9419 li
325.26 43.1357 li
325.26 43.5215 li
325.453 43.7144 li
325.453 43.9077 li
325.645 44.1006 li
325.645 44.293 li
325.84 44.4863 li
326.225 44.4863 li
326.225 44.293 li
326.418 44.293 li
326.418 44.1006 li
326.611 43.9077 li
326.611 43.7144 li
326.803 43.7144 li
326.803 43.3286 li
326.998 43.3286 li
326.998 43.1357 li
327.189 42.9419 li
327.576 42.9419 li
327.77 43.1357 li
327.77 43.3286 li
327.963 43.3286 li
327.963 43.7144 li
328.154 43.9077 li
328.154 44.2935 li
328.348 44.2935 li
328.348 44.6797 li
328.541 44.8726 li
328.541 45.0659 li
328.734 45.0659 li
328.734 45.2583 li
328.928 45.4521 li
329.119 45.4521 li
329.119 45.2583 li
329.313 45.2583 li
329.313 45.0659 li
329.506 44.8726 li
329.506 44.6797 li
329.699 44.4873 li
329.699 43.9077 li
329.891 43.7144 li
329.891 43.3286 li
330.084 42.9419 li
330.084 42.5562 li
330.277 42.3628 li
330.277 41.9766 li
330.471 41.9766 li
330.471 41.5903 li
330.664 41.5903 li
330.664 41.3975 li
330.855 41.2046 li
330.855 41.3975 li
331.049 41.3975 li
331.049 41.5903 li
331.242 41.5903 li
331.242 41.9766 li
331.436 42.1694 li
331.436 42.5562 li
331.629 42.749 li
331.629 43.521 li
331.82 43.7144 li
331.82 44.2935 li
332.014 44.4863 li
332.014 44.8726 li
332.207 45.2593 li
332.207 45.6455 li
332.4 45.8379 li
332.4 46.0313 li
332.594 46.2236 li
332.594 46.4165 li
332.785 46.6104 li
332.785 46.4165 li
332.979 46.4165 li
332.979 46.2236 li
333.172 46.2236 li
333.172 45.8379 li
333.363 45.6445 li
333.363 45.2583 li
333.559 44.8726 li
333.559 44.1006 li
333.75 43.7134 li
333.75 43.1338 li
333.943 42.748 li
333.943 42.1685 li
334.137 41.7827 li
334.137 41.2031 li
334.328 41.0103 li
334.328 40.2373 li
334.523 40.0444 li
334.523 39.6587 li
334.715 39.4648 li
334.715 39.2725 li
335.102 39.2725 li
335.102 39.4648 li
335.295 39.6587 li
335.295 40.0444 li
335.488 40.4307 li
335.488 40.8169 li
335.682 41.2031 li
335.682 41.7827 li
335.873 41.9756 li
335.873 42.748 li
336.066 42.9414 li
336.066 43.7134 li
336.26 43.9063 li
336.26 44.8726 li
336.451 45.0649 li
336.451 45.6445 li
336.646 45.8369 li
336.646 46.2236 li
336.838 46.4165 li
336.838 46.6094 li
337.031 46.6094 li
337.031 46.8027 li
337.225 46.8027 li
337.416 46.6094 li
337.416 46.4165 li
337.609 46.4165 li
337.609 46.0308 li
337.803 46.0308 li
337.803 45.6445 li
337.996 45.4512 li
337.996 45.0649 li
338.189 45.0649 li
338.189 44.4854 li
0.25 43.519 mo
24.9746 43.519 li
24.9746 43.7129 li
27.293 43.7129 li
27.4854 43.519 li
27.8711 43.519 li
28.064 43.3267 li
28.6436 43.3267 li
28.6436 43.1338 li
29.9961 43.1338 li
29.9961 43.3267 li
30.7681 43.3267 li
30.7681 43.519 li
31.5405 43.519 li
31.5405 43.7129 li
32.3125 43.7129 li
32.3125 43.9053 li
33.6636 43.9053 li
33.8564 43.7129 li
34.6284 43.7129 li
34.6284 43.519 li
35.4009 43.519 li
35.5933 43.3267 li
36.1729 43.3267 li
36.3657 43.1338 li
38.2974 43.1338 li
38.2974 43.3267 li
38.6836 43.3267 li
38.6836 43.519 li
38.876 43.519 li
38.876 43.7129 li
39.2617 43.7129 li
39.2617 43.9053 li
39.6484 43.9053 li
39.6484 44.0986 li
40.8071 44.0986 li
40.8071 43.9053 li
41.1929 43.9053 li
41.1929 43.7129 li
41.5791 43.7129 li
41.5791 43.519 li
42.1587 43.519 li
42.1587 43.3267 li
43.124 43.3267 li
43.124 43.1338 li
43.7036 43.1338 li
43.7036 43.3267 li
45.2485 43.3267 li
45.4414 43.519 li
46.4067 43.519 li
46.4067 43.7129 li
48.918 43.7129 li
48.918 43.519 li
51.4297 43.519 li
51.4297 43.3267 li
52.5889 43.3267 li
52.7813 43.519 li
83.689 43.519 li
83.689 43.3267 li
85.4272 43.3267 li
85.4272 43.519 li
85.8135 43.519 li
85.8135 43.7129 li
86.0063 43.7129 li
86.1992 43.9053 li
86.5854 43.9053 li
86.5854 44.0986 li
87.165 44.0986 li
87.165 43.9053 li
87.5518 43.9053 li
87.5518 43.7129 li
87.7446 43.7129 li
87.937 43.519 li
88.1304 43.519 li
88.1304 43.3267 li
88.5166 43.3267 li
88.5166 43.1338 li
89.4819 43.1338 li
89.6758 43.3267 li
90.0615 43.3267 li
90.0615 43.519 li
95.4702 43.519 li
95.4702 43.7129 li
96.6294 43.7129 li
96.6294 43.519 li
97.2085 43.519 li
97.2085 43.3267 li
97.4014 43.3267 li
97.5938 43.1338 li
98.7529 43.1338 li
99.1396 43.52 li
99.3325 43.52 li
99.3325 43.7129 li
99.5249 43.7129 li
99.7188 43.9063 li
99.9111 43.9063 li
99.9111 44.0986 li
100.876 44.0986 li
100.876 43.9063 li
101.264 43.9063 li
101.456 43.7129 li
102.229 43.7129 li
102.229 43.52 li
102.615 43.52 li
102.808 43.3267 li
103 43.3267 li
103 43.1338 li
103.194 43.1338 li
103.194 42.9414 li
103.386 42.9414 li
103.386 42.748 li
103.58 42.748 li
103.58 42.5552 li
103.772 42.5552 li
103.772 42.3623 li
104.159 42.3623 li
104.159 42.1694 li
104.352 42.1694 li
104.738 42.5552 li
104.738 42.749 li
104.931 42.749 li
104.931 42.9414 li
105.125 43.1338 li
105.125 43.521 li
105.317 43.521 li
105.317 43.9072 li
105.509 44.0996 li
105.509 44.4854 li
105.703 44.6792 li
105.703 44.8721 li
105.896 45.0649 li
105.896 45.2578 li
106.089 45.2578 li
106.089 45.4502 li
106.475 45.4502 li
106.861 45.0645 li
106.861 44.8721 li
107.054 44.6782 li
107.054 44.4854 li
107.247 44.293 li
107.247 43.7134 li
107.44 43.7134 li
107.44 43.3267 li
107.633 43.1338 li
107.633 42.9414 li
107.826 42.748 li
107.826 42.5552 li
108.019 42.5552 li
108.019 42.3623 li
108.212 42.3623 li
108.212 42.1694 li
108.598 42.1694 li
108.792 42.3623 li
108.984 42.3623 li
108.984 42.5552 li
109.177 42.5552 li
109.177 42.748 li
109.37 42.9414 li
109.563 42.9414 li
109.563 43.1338 li
109.756 43.1338 li
109.949 43.3267 li
110.335 43.3267 li
110.335 43.52 li
110.721 43.52 li
110.914 43.7129 li
111.107 43.7129 li
111.107 43.9063 li
111.687 44.4854 li
111.879 44.4854 li
111.879 44.6782 li
112.652 44.6782 li
112.652 44.4854 li
112.844 44.4854 li
112.844 44.0986 li
113.038 44.0986 li
113.038 43.7129 li
113.23 43.7129 li
113.23 43.3267 li
113.424 43.3267 li
113.424 42.9409 li
113.617 42.9409 li
113.617 42.7471 li
113.809 42.5547 li
113.809 42.3623 li
114.196 41.9751 li
114.583 41.9751 li
114.775 42.1685 li
114.775 42.3613 li
114.968 42.3613 li
114.968 42.5547 li
115.161 42.7471 li
115.161 42.9395 li
115.354 43.1333 li
115.354 43.3262 li
115.547 43.519 li
115.547 43.7119 li
115.739 43.7119 li
115.739 44.0981 li
116.319 44.6777 li
116.898 44.6777 li
116.898 44.4849 li
117.092 44.4849 li
117.092 44.291 li
117.285 44.291 li
117.285 44.0986 li
117.478 44.0986 li
117.478 43.7129 li
117.67 43.7129 li
117.67 43.519 li
117.863 43.519 li
117.863 43.3267 li
118.057 43.3267 li
118.25 43.1338 li
119.022 43.1338 li
119.215 43.3267 li
119.601 43.3267 li
119.601 43.519 li
120.374 43.519 li
120.374 43.3267 li
121.146 43.3267 li
121.146 43.1338 li
121.338 43.1338 li
121.338 43.3267 li
121.918 43.3267 li
122.111 43.519 li
122.304 43.519 li
122.304 43.7129 li
122.883 43.7129 li
122.883 43.9053 li
123.27 43.9053 li
123.27 43.7129 li
123.849 43.7129 li
124.042 43.519 li
124.622 43.519 li
124.622 43.3267 li
125.008 43.3267 li
125.008 43.519 li
125.588 43.519 li
125.588 43.7129 li
126.939 43.7129 li
127.132 43.519 li
127.325 43.519 li
127.519 43.3267 li
127.711 43.3267 li
127.711 43.1338 li
128.291 43.1338 li
128.291 42.9409 li
128.677 42.9409 li
128.677 43.1338 li
129.063 43.1338 li
129.063 43.3267 li
129.45 43.3267 li
129.45 43.519 li
129.642 43.519 li
129.642 43.7129 li
130.028 43.7129 li
130.028 43.9053 li
130.994 43.9053 li
130.994 43.7129 li
131.38 43.7129 li
131.573 43.519 li
133.119 43.519 li
133.119 43.7129 li
134.471 43.7129 li
134.663 43.519 li
135.05 43.519 li
135.05 43.3267 li
135.243 43.3267 li
135.436 43.1338 li
135.629 43.1338 li
135.822 42.9409 li
136.208 42.9409 li
136.208 42.748 li
136.787 42.748 li
136.787 42.9409 li
137.173 42.9409 li
137.173 43.1338 li
137.367 43.1338 li
137.367 43.3267 li
137.559 43.3267 li
137.559 43.519 li
137.752 43.519 li
137.752 43.7129 li
137.945 43.7129 li
137.945 43.9053 li
138.332 44.291 li
138.524 44.291 li
138.524 44.4849 li
139.297 44.4849 li
139.489 44.291 li
139.683 44.291 li
139.683 44.0986 li
139.876 44.0986 li
139.876 43.9063 li
140.069 43.9063 li
140.069 43.7129 li
140.262 43.7129 li
140.454 43.52 li
140.648 43.52 li
140.648 43.3267 li
141.807 43.3267 li
141.807 43.1338 li
142.193 43.1338 li
142.385 42.9414 li
142.579 42.9414 li
142.579 42.748 li
142.771 42.748 li
142.771 42.5552 li
143.737 42.5552 li
143.737 42.748 li
143.93 42.748 li
143.93 42.9414 li
144.123 42.9414 li
144.123 43.1338 li
144.316 43.1338 li
144.316 43.3267 li
144.703 43.7134 li
144.895 43.7134 li
144.895 43.9063 li
145.281 43.9063 li
145.475 44.0986 li
145.667 44.0986 li
145.861 44.2925 li
146.053 44.2925 li
146.053 44.4849 li
146.246 44.6782 li
146.246 44.8706 li
146.439 45.0635 li
146.439 45.2568 li
146.632 45.2568 li
146.632 45.4497 li
146.825 45.6431 li
146.825 45.8354 li
147.018 45.8354 li
147.018 46.0293 li
147.211 46.0293 li
147.404 45.8354 li
147.404 45.6431 li
147.597 45.6431 li
147.597 45.2559 li
147.79 45.0635 li
147.79 44.6777 li
147.983 44.291 li
147.983 43.7119 li
148.176 43.3247 li
148.176 42.3594 li
148.369 41.9731 li
148.369 41.2012 li
148.562 41.0078 li
148.562 40.2358 li
148.755 39.8496 li
148.755 39.4629 li
148.947 39.0771 li
148.947 38.6909 li
149.141 38.4985 li
149.333 38.4985 li
149.333 38.6909 li
149.526 38.6909 li
149.526 39.2705 li
149.72 39.4629 li
149.72 40.0425 li
149.912 40.4292 li
149.912 41.7808 li
150.106 42.167 li
150.106 43.1323 li
150.298 43.7119 li
150.298 44.6782 li
150.491 45.0645 li
150.491 45.8364 li
150.685 46.2222 li
150.685 46.9956 li
150.877 47.188 li
150.877 47.9609 li
151.07 48.1533 li
151.263 48.1533 li
151.456 47.9609 li
151.456 47.7676 li
151.65 47.3813 li
151.65 46.9956 li
151.841 46.6094 li
151.841 45.6431 li
152.035 45.4502 li
152.035 44.6782 li
152.228 44.2915 li
152.228 43.7119 li
152.421 43.3262 li
152.421 42.9399 li
152.614 42.5537 li
152.614 42.168 li
152.806 41.9746 li
152.806 41.7817 li
153 41.5884 li
153.193 41.5884 li
153.193 41.7817 li
153.386 41.7817 li
153.386 42.168 li
153.579 42.168 li
153.579 42.7471 li
153.771 42.7471 li
153.771 43.1333 li
153.964 43.3267 li
153.964 43.519 li
154.158 43.7119 li
154.158 43.9053 li
154.351 44.0981 li
154.543 44.0981 li
154.543 44.2915 li
154.736 44.2915 li
154.736 44.0981 li
154.929 44.0981 li
154.929 43.9053 li
155.123 43.9053 li
155.123 43.7119 li
155.316 43.519 li
155.316 43.3267 li
155.508 43.1333 li
155.508 42.7471 li
155.701 42.7471 li
155.701 42.5547 li
155.894 42.3613 li
155.894 42.1685 li
156.087 42.1685 li
156.087 41.9751 li
156.281 41.9751 li
156.281 41.7827 li
156.86 41.7827 li
156.86 41.9751 li
157.052 41.9751 li
157.052 42.1685 li
157.246 42.1685 li
157.246 42.3613 li
157.439 42.3613 li
157.439 42.5547 li
157.63 42.7471 li
157.63 42.9399 li
157.825 42.9399 li
157.825 43.1333 li
158.017 43.3262 li
158.017 43.519 li
158.21 43.7119 li
158.21 44.0981 li
158.403 44.0981 li
158.403 44.4839 li
158.595 44.4839 li
158.595 44.8706 li
158.79 44.8706 li
158.79 45.0635 li
158.982 45.2559 li
158.982 45.4497 li
159.175 45.6426 li
159.175 45.8354 li
159.368 45.8354 li
159.368 46.0283 li
159.56 46.0283 li
159.753 46.2217 li
159.753 46.0283 li
159.947 46.0283 li
160.14 45.8354 li
160.14 45.6426 li
160.333 45.6426 li
160.333 45.2559 li
160.525 45.2559 li
160.525 44.8701 li
160.718 44.8701 li
160.718 44.4839 li
160.912 44.2905 li
160.912 44.0981 li
161.105 43.9043 li
161.105 43.5186 li
161.297 43.3262 li
161.297 43.1323 li
161.49 42.9399 li
161.49 42.7471 li
161.683 42.7471 li
161.683 42.5537 li
161.876 42.5537 li
161.876 42.3613 li
162.07 42.3613 li
162.07 42.168 li
163.035 42.168 li
163.228 41.9751 li
163.421 41.9751 li
163.614 41.7827 li
163.806 41.7827 li
163.806 41.5889 li
164 41.5889 li
164 41.3965 li
164.772 41.3965 li
164.772 41.5889 li
164.965 41.5889 li
164.965 41.7827 li
165.158 41.9751 li
165.158 42.168 li
165.351 42.3613 li
165.351 42.5537 li
165.544 42.7471 li
165.544 43.1333 li
165.737 43.3262 li
165.737 44.0986 li
165.93 44.2915 li
165.93 44.6777 li
166.123 44.8706 li
166.123 45.2573 li
166.316 45.4497 li
166.316 45.8354 li
166.509 46.0293 li
166.509 46.415 li
166.702 46.6079 li
166.702 46.9946 li
166.895 46.9946 li
166.895 47.187 li
167.087 47.187 li
167.087 47.3809 li
167.474 47.3809 li
167.474 47.187 li
167.667 47.187 li
167.667 46.9946 li
167.86 46.8013 li
167.86 46.6089 li
168.053 46.6089 li
168.053 46.415 li
168.246 46.2227 li
168.246 45.8364 li
168.438 45.8364 li
168.438 45.2573 li
168.632 45.0635 li
168.632 44.6777 li
168.824 44.4849 li
168.824 44.0986 li
169.017 43.9053 li
169.017 43.519 li
169.21 43.3267 li
169.21 42.9399 li
169.403 42.7471 li
169.403 41.9751 li
169.597 41.7817 li
169.597 41.2021 li
169.789 41.0098 li
169.789 40.4302 li
169.982 40.2368 li
169.982 39.8506 li
170.175 39.6577 li
170.175 39.272 li
170.368 39.0786 li
170.368 38.6924 li
170.754 38.3062 li
170.754 38.499 li
170.947 38.499 li
170.947 38.6924 li
171.14 38.6924 li
171.14 39.0786 li
171.333 39.271 li
171.333 39.8506 li
171.526 40.2368 li
171.526 40.8164 li
171.719 41.2031 li
171.719 41.7827 li
171.912 42.1685 li
171.912 42.748 li
172.105 43.1338 li
172.105 44.293 li
172.298 44.4854 li
172.298 45.2588 li
172.491 45.4512 li
172.491 46.0308 li
172.684 46.2241 li
172.684 46.6104 li
172.876 46.8032 li
172.876 47.189 li
173.07 47.189 li
173.07 47.3823 li
173.457 47.3823 li
173.457 47.189 li
173.649 47.189 li
173.649 46.8032 li
173.842 46.8032 li
173.842 46.4165 li
174.035 46.4165 li
174.035 45.8374 li
174.228 45.6445 li
174.228 45.4512 li
174.421 45.2588 li
174.421 44.8726 li
174.614 44.6792 li
174.614 44.4863 li
174.807 44.293 li
174.807 44.1006 li
175 44.1006 li
175 43.9082 li
175.386 43.521 li
175.58 43.521 li
175.58 43.3286 li
175.964 43.3286 li
175.964 43.1357 li
176.158 43.1357 li
176.158 42.9424 li
176.351 42.9424 li
176.351 42.7495 li
176.544 42.7495 li
176.544 42.5562 li
176.737 42.5562 li
176.737 42.1699 li
176.929 42.1699 li
176.929 41.9775 li
177.123 41.9775 li
177.123 41.7842 li
177.316 41.7842 li
177.316 41.5913 li
177.703 41.5913 li
177.703 41.3989 li
177.894 41.5913 li
178.088 41.5913 li
178.088 41.7842 li
178.281 41.7842 li
178.281 41.9775 li
178.473 41.9775 li
178.473 42.1699 li
178.667 42.3638 li
178.667 42.5562 li
178.859 42.749 li
178.859 42.9424 li
179.052 42.9424 li
179.052 43.1348 li
179.632 43.7144 li
179.825 43.7144 li
179.825 43.9082 li
180.791 43.9082 li
181.176 44.2939 li
181.176 44.4863 li
181.371 44.4863 li
181.371 45.0659 li
181.563 45.2593 li
181.563 45.4521 li
181.755 45.6445 li
181.755 46.0313 li
181.949 46.2241 li
181.949 46.6104 li
182.141 46.8037 li
182.141 47.1899 li
182.335 47.3823 li
182.335 47.7686 li
182.528 47.7686 li
182.528 47.9619 li
182.72 47.9619 li
182.914 47.7686 li
182.914 47.5757 li
183.107 47.3828 li
183.107 46.8037 li
183.299 46.6104 li
183.299 45.4512 li
183.492 45.0649 li
183.492 44.0996 li
183.685 43.52 li
183.685 42.5547 li
183.878 41.9751 li
183.878 40.8164 li
184.072 40.2368 li
184.072 39.2705 li
184.264 38.6909 li
184.264 37.146 li
184.457 36.7598 li
184.457 35.9878 li
184.65 35.7939 li
184.65 35.2148 li
184.843 35.022 li
185.037 35.022 li
185.037 35.2148 li
185.229 35.4082 li
185.229 36.3735 li
185.421 36.7598 li
185.421 37.7251 li
185.615 38.3047 li
185.615 39.4639 li
185.808 40.0435 li
185.808 41.3955 li
186.001 42.168 li
186.001 44.2925 li
186.194 45.0649 li
186.194 46.2241 li
186.386 46.9961 li
186.386 48.1553 li
186.58 48.5415 li
186.58 49.5068 li
186.773 49.8936 li
186.773 50.4731 li
186.966 50.6655 li
186.966 50.8584 li
187.159 50.8584 li
187.159 50.4727 li
187.351 50.2798 li
187.351 49.8936 li
187.544 49.5068 li
187.544 48.7349 li
187.738 48.3486 li
187.738 47.3828 li
187.931 46.8037 li
187.931 45.4512 li
188.124 44.8721 li
188.124 43.9063 li
188.316 43.52 li
188.316 42.7471 li
188.509 42.3613 li
188.509 41.7817 li
188.703 41.5889 li
188.703 41.2031 li
188.896 41.2031 li
188.896 41.0098 li
189.088 41.2031 li
189.088 41.3955 li
189.281 41.3955 li
189.281 41.7817 li
189.474 41.9751 li
189.474 42.3613 li
189.667 42.7471 li
189.667 43.1333 li
189.86 43.3267 li
189.86 43.9063 li
190.052 44.0986 li
190.052 44.2915 li
190.246 44.4849 li
190.632 44.4849 li
190.632 44.0986 li
190.825 44.0986 li
190.825 43.7119 li
191.019 43.519 li
191.019 43.1333 li
191.21 43.1333 li
191.21 42.7471 li
191.404 42.5537 li
191.404 42.3613 li
191.597 42.168 li
191.597 41.9751 li
191.984 41.9751 li
191.984 42.168 li
192.175 42.168 li
192.175 42.3613 li
192.369 42.5537 li
192.369 42.9399 li
192.562 42.9399 li
192.562 43.519 li
192.755 43.7129 li
192.755 43.9053 li
192.948 43.9053 li
192.948 44.0986 li
193.333 44.0986 li
193.527 43.9053 li
193.527 43.519 li
193.72 43.3267 li
193.72 42.9399 li
193.913 42.7471 li
193.913 42.168 li
194.106 41.9751 li
194.106 41.5884 li
194.298 41.3955 li
194.298 40.8164 li
194.492 40.6235 li
194.492 40.2368 li
194.685 40.2368 li
194.685 40.0444 li
194.876 40.0444 li
194.876 40.2368 li
195.071 40.2368 li
195.071 40.4302 li
195.263 40.6226 li
195.263 41.3955 li
195.457 41.7817 li
195.457 42.3613 li
195.65 42.7471 li
195.65 43.519 li
195.841 43.9063 li
195.841 44.6782 li
196.036 45.0645 li
196.036 45.644 li
196.228 46.0298 li
196.228 46.9961 li
196.421 47.3823 li
196.421 47.7681 li
196.615 47.9609 li
196.615 48.3477 li
196.808 48.5405 li
196.808 48.7329 li
197 48.7329 li
197 48.5405 li
197.193 48.5405 li
197.193 48.1548 li
197.386 47.9609 li
197.386 47.5752 li
197.58 47.3823 li
197.58 46.9961 li
197.772 46.6094 li
197.772 46.0298 li
197.964 45.8369 li
197.964 45.2578 li
198.158 45.0649 li
198.158 44.2925 li
198.351 43.9063 li
198.351 43.52 li
198.544 43.3267 li
198.544 42.9409 li
198.737 42.748 li
198.737 42.5547 li
198.929 42.3623 li
198.929 42.1694 li
199.123 42.1694 li
199.123 41.7827 li
199.316 41.7827 li
199.508 41.5898 li
199.702 41.5898 li
199.702 41.3975 li
199.894 41.3975 li
199.894 41.2036 li
200.087 41.2036 li
200.087 41.0112 li
200.281 41.0112 li
200.281 40.8179 li
200.473 40.8179 li
200.473 40.625 li
200.667 40.625 li
200.667 40.4326 li
200.859 40.4326 li
200.859 40.2388 li
201.246 40.2388 li
201.246 40.4326 li
201.439 40.4326 li
201.439 40.625 li
201.631 40.8179 li
201.631 41.0112 li
201.824 41.2036 li
201.824 41.7832 li
202.017 42.1694 li
202.017 42.5562 li
202.21 42.9424 li
202.21 43.5215 li
202.404 43.7144 li
202.404 44.2939 li
202.596 44.4873 li
202.596 45.0669 li
202.79 45.2593 li
202.79 46.0313 li
202.982 46.2251 li
202.982 46.6108 li
203.175 46.6108 li
203.175 46.8037 li
203.369 46.9971 li
203.561 46.9971 li
203.753 46.8037 li
203.753 46.4175 li
203.947 46.2251 li
203.947 45.8389 li
204.14 45.6455 li
204.14 45.2593 li
204.333 44.8735 li
204.333 44.4873 li
204.525 44.1006 li
204.525 43.3286 li
204.718 43.1357 li
204.718 42.5562 li
204.912 42.3628 li
204.912 41.9771 li
205.105 41.7842 li
205.105 41.3975 li
205.297 41.2046 li
205.297 41.0122 li
205.49 41.0122 li
205.683 41.2046 li
205.683 41.3975 li
205.876 41.5903 li
205.876 41.9771 li
206.069 42.3628 li
206.069 42.9424 li
206.262 43.1357 li
206.262 43.9082 li
206.455 44.2939 li
206.455 45.4526 li
206.648 45.8389 li
206.648 46.6118 li
206.841 46.998 li
206.841 47.77 li
207.034 48.1567 li
207.034 48.7363 li
207.227 48.9287 li
207.227 49.3149 li
207.419 49.5083 li
207.419 49.7012 li
207.613 49.7012 li
207.613 49.3149 li
207.806 49.1216 li
207.806 48.7358 li
207.998 48.3491 li
207.998 47.3838 li
208.192 46.998 li
208.192 45.8389 li
208.384 45.2593 li
208.384 43.3276 li
208.578 42.5547 li
208.578 41.0098 li
208.771 40.4302 li
208.771 38.8853 li
208.964 38.3057 li
208.964 36.9541 li
209.157 36.3745 li
209.157 34.6362 li
209.349 34.2495 li
209.349 33.4771 li
209.542 33.2847 li
209.542 32.8975 li
209.736 32.8975 li
209.929 33.0908 li
209.929 33.4771 li
210.122 33.8628 li
210.122 35.022 li
210.314 35.6016 li
210.314 36.9541 li
210.507 37.5337 li
210.507 38.8853 li
210.701 39.6572 li
210.701 41.2031 li
210.893 42.1685 li
210.893 43.7134 li
211.085 44.4854 li
211.085 46.6108 li
211.279 47.3828 li
211.279 48.7344 li
211.472 49.314 li
211.472 50.4731 li
211.666 50.8599 li
211.666 51.6318 li
211.858 52.0181 li
211.858 52.5977 li
212.05 52.791 li
212.05 52.9834 li
212.244 52.9834 li
212.244 52.791 li
212.437 52.5977 li
212.437 52.2114 li
212.629 52.0186 li
212.629 51.4395 li
212.823 51.0522 li
212.823 50.2803 li
213.015 49.8945 li
213.015 48.3491 li
213.208 47.9624 li
213.208 46.8032 li
213.402 46.4175 li
213.402 45.2583 li
213.594 44.8726 li
213.594 43.7134 li
213.788 43.3276 li
213.788 41.7827 li
213.98 41.3955 li
213.98 40.6235 li
214.173 40.2373 li
214.173 39.4648 li
214.367 39.272 li
214.367 38.6924 li
214.558 38.5 li
214.558 38.3062 li
214.752 38.1138 li
214.752 37.9204 li
214.945 37.9204 li
214.945 38.1138 li
215.138 38.3062 li
215.138 38.6924 li
215.332 38.8857 li
215.332 39.272 li
215.523 39.6577 li
215.523 40.2373 li
215.717 40.6235 li
215.717 41.5898 li
215.91 41.9761 li
215.91 42.5552 li
216.103 42.748 li
216.103 43.3276 li
216.296 43.521 li
216.296 44.1006 li
216.488 44.1006 li
216.488 44.4863 li
216.875 44.4863 li
216.875 44.293 li
217.068 44.1006 li
217.068 43.7144 li
217.261 43.521 li
217.261 42.9414 li
217.454 42.749 li
217.454 42.3628 li
217.646 41.9771 li
217.646 41.3975 li
217.839 41.2036 li
217.839 40.8179 li
218.033 40.8179 li
218.033 40.625 li
218.418 41.0112 li
218.418 41.5903 li
218.613 41.9771 li
218.613 42.5562 li
218.804 42.9424 li
218.804 43.9082 li
218.998 44.2949 li
218.998 45.2603 li
219.191 45.8398 li
@
233.408 43.7129 mo
233.408 43.52 li
233.794 43.52 li
233.794 43.3267 li
234.566 43.3267 li
234.566 43.52 li
234.954 43.52 li
234.954 43.7129 li
235.339 43.7129 li
235.339 43.9063 li
235.532 43.9063 li
235.532 43.7129 li
236.111 43.7129 li
236.111 43.52 li
236.304 43.52 li
236.304 43.3267 li
236.498 43.3267 li
236.69 43.1338 li
237.463 43.1338 li
237.463 43.3267 li
237.656 43.3267 li
237.849 43.52 li
238.042 43.52 li
238.042 43.7129 li
238.234 43.7129 li
238.234 43.9063 li
238.814 43.9063 li
238.814 43.7129 li
239.201 43.7129 li
239.201 43.52 li
239.393 43.52 li
239.586 43.3267 li
240.359 43.3267 li
240.359 43.52 li
241.131 43.52 li
241.131 43.3267 li
241.324 43.3267 li
241.324 43.1338 li
241.518 42.9414 li
241.518 42.748 li
241.711 42.748 li
241.711 42.3623 li
241.902 42.1694 li
241.902 41.7827 li
242.096 41.7827 li
242.096 41.5898 li
242.289 41.3975 li
242.482 41.3975 li
242.482 41.2036 li
242.482 41.3975 li
242.674 41.3975 li
242.674 41.5898 li
242.867 41.7827 li
242.867 42.1694 li
243.061 42.5552 li
243.061 42.9414 li
243.254 43.3276 li
243.254 44.1006 li
243.447 44.293 li
243.447 45.0649 li
243.639 45.4521 li
243.639 46.6108 li
243.832 46.9971 li
243.832 47.5767 li
244.025 47.769 li
244.025 48.1553 li
244.219 48.3486 li
244.412 48.3486 li
244.412 48.1553 li
244.604 47.9624 li
244.604 46.9971 li
244.797 46.6108 li
244.797 45.6445 li
244.99 45.0649 li
244.99 43.9063 li
245.184 43.3267 li
245.184 41.9751 li
245.377 41.3955 li
245.377 40.2368 li
245.568 39.6572 li
245.568 38.3057 li
245.762 37.9189 li
245.762 37.3394 li
245.955 37.3394 li
246.148 37.5327 li
246.148 38.1123 li
246.342 38.6914 li
246.342 40.8164 li
246.533 41.5884 li
246.533 43.52 li
246.727 44.6792 li
246.727 46.9971 li
246.92 48.1563 li
246.92 50.6675 li
247.113 51.8262 li
247.113 54.144 li
247.307 55.3032 li
247.307 58.0073 li
247.498 58.5869 li
247.498 59.3599 li
247.691 59.5522 li
247.691 59.3599 li
247.885 58.9727 li
247.885 57.6211 li
248.078 56.6558 li
248.078 54.144 li
248.271 52.5996 li
248.271 46.8037 li
248.463 44.6792 li
248.463 40.0435 li
248.656 37.5322 li
248.656 32.3164 li
248.85 29.8062 li
248.85 24.7832 li
249.043 22.272 li
249.043 17.8291 li
249.234 15.8975 li
249.234 10.875 li
249.428 9.71582 li
249.428 8.1709 li
249.621 7.97852 li
249.621 7.78467 li
249.621 8.1709 li
249.814 8.75 li
249.814 10.8755 li
250.008 12.4204 li
250.008 16.4771 li
250.199 18.9883 li
250.199 27.6807 li
250.393 30.9639 li
250.393 37.9189 li
250.586 41.5884 li
250.586 49.1226 li
250.779 52.7925 li
250.779 60.1328 li
250.973 63.6094 li
250.973 73.0747 li
251.164 75.7793 li
251.164 80.6079 li
251.357 82.3462 li
251.357 85.2437 li
251.551 86.21 li
251.551 86.9819 li
251.744 86.7896 li
251.744 85.6304 li
251.938 84.4717 li
251.938 79.4487 li
252.129 77.3242 li
252.129 72.1089 li
252.322 69.4053 li
252.322 63.417 li
252.516 60.3262 li
252.516 54.144 li
252.709 50.8608 li
252.709 44.8726 li
252.902 41.7827 li
252.902 33.8623 li
253.094 31.5444 li
253.094 27.4878 li
253.287 25.7495 li
253.287 23.0459 li
253.48 22.0801 li
253.48 20.5342 li
253.674 20.1484 li
253.674 19.9556 li
253.867 20.1484 li
253.867 21.6929 li
254.059 22.2725 li
254.059 24.0112 li
254.252 24.9775 li
254.252 27.1021 li
254.445 28.0674 li
254.445 30.1919 li
254.639 31.1577 li
254.639 33.0894 li
254.832 33.8623 li
254.832 35.9868 li
255.023 36.5659 li
255.023 37.5317 li
255.217 37.918 li
255.217 38.4971 li
255.41 38.6909 li
255.41 38.8838 li
255.604 39.0762 li
255.604 39.2695 li
255.795 39.2695 li
255.795 39.4619 li
255.988 39.4619 li
255.988 39.8481 li
256.182 40.0415 li
256.182 40.6211 li
256.375 41.0068 li
256.375 41.7793 li
256.568 42.3584 li
256.568 43.9043 li
256.76 44.4839 li
256.76 45.8354 li
256.953 46.415 li
256.953 47.7666 li
257.146 48.5396 li
257.146 49.8911 li
257.34 50.4707 li
257.34 51.6294 li
257.533 52.209 li
257.533 53.5615 li
257.725 53.7544 li
257.725 54.334 li
257.918 54.5269 li
257.918 54.7197 li
258.111 54.9121 li
258.111 54.7197 li
258.305 54.7197 li
258.305 54.334 li
258.498 53.9473 li
258.498 52.981 li
258.689 52.5952 li
258.689 51.8232 li
258.883 51.437 li
258.883 50.4707 li
259.076 49.8911 li
259.076 48.9258 li
259.268 48.3462 li
259.268 47.187 li
259.463 46.8013 li
259.463 45.2559 li
259.654 44.6768 li
259.654 43.7114 li
259.848 43.3242 li
259.848 42.3584 li
260.041 41.9727 li
260.041 41.1997 li
260.232 41.0068 li
260.232 40.0415 li
260.428 39.8481 li
260.428 39.4619 li
260.619 39.2695 li
260.619 38.8838 li
260.813 38.6899 li
260.813 38.4971 li
261.006 38.4971 li
261.197 38.3042 li
261.197 38.4971 li
261.584 38.4971 li
261.584 38.6899 li
261.777 38.6899 li
261.777 38.8838 li
261.971 39.0762 li
261.971 39.2686 li
262.164 39.2686 li
262.164 39.6553 li
262.355 39.8481 li
262.355 40.0405 li
262.549 40.2344 li
262.549 40.4268 li
262.742 40.6201 li
262.742 41.0063 li
262.936 41.0063 li
262.936 41.3921 li
263.129 41.5859 li
263.129 41.9717 li
263.32 42.1646 li
263.32 42.5508 li
263.514 42.5508 li
263.514 42.9375 li
263.707 43.1299 li
263.707 43.3228 li
263.9 43.5161 li
263.9 43.709 li
264.094 43.9023 li
264.094 44.2881 li
264.285 44.2881 li
264.285 44.6743 li
264.479 44.6743 li
264.479 44.8667 li
264.672 44.8667 li
264.672 45.0605 li
264.865 45.2529 li
264.865 45.4463 li
265.059 45.4463 li
265.059 45.6392 li
265.25 45.6392 li
265.443 45.8315 li
266.408 45.8315 li
266.408 45.6392 li
266.795 45.6392 li
266.795 45.4463 li
266.988 45.4463 li
266.988 45.2529 li
267.182 45.2529 li
267.182 45.0605 li
267.373 45.0605 li
267.373 44.8667 li
267.568 44.8667 li
267.568 44.6743 li
267.76 44.6743 li
267.76 44.2881 li
267.953 44.0947 li
267.953 43.9023 li
268.146 43.71 li
268.146 43.5161 li
268.338 43.3232 li
268.338 43.1299 li
268.531 42.9375 li
268.531 42.5513 li
268.725 42.5513 li
268.725 42.1655 li
268.918 41.9717 li
268.918 41.7793 li
269.111 41.5859 li
269.111 41.3931 li
269.303 41.3931 li
269.303 41.1997 li
269.883 41.1997 li
269.883 41.3931 li
270.076 41.3931 li
270.076 41.5859 li
270.27 41.7793 li
270.27 41.9717 li
270.463 42.1655 li
270.463 42.5513 li
270.654 42.7441 li
270.654 42.9375 li
270.848 43.1299 li
270.848 43.3228 li
271.041 43.5161 li
271.041 43.709 li
271.234 43.709 li
271.234 43.9023 li
271.428 43.9023 li
271.428 44.0947 li
271.619 44.0947 li
271.813 43.9023 li
272.006 43.9023 li
272.006 43.709 li
272.199 43.709 li
272.199 43.5161 li
272.393 43.5161 li
272.393 43.3228 li
272.777 43.3228 li
272.777 43.1299 li
272.971 43.1299 li
272.971 43.3228 li
273.164 43.3228 li
273.357 43.5161 li
273.357 43.709 li
273.551 43.709 li
273.551 43.9023 li
273.742 44.0947 li
273.742 44.2871 li
273.936 44.2871 li
273.936 44.481 li
274.129 44.6738 li
274.129 44.8667 li
274.322 44.8667 li
274.322 45.0596 li
274.707 45.0596 li
275.094 44.6738 li
275.094 44.48 li
275.287 44.48 li
275.287 44.2871 li
275.48 44.0947 li
275.48 43.9014 li
275.672 43.709 li
275.672 43.5151 li
275.865 43.5151 li
275.865 43.3228 li
276.059 43.1299 li
276.059 42.9365 li
276.252 42.9365 li
276.252 42.7441 li
277.023 42.7441 li
277.023 42.9365 li
277.41 42.9365 li
277.41 43.1299 li
278.184 43.1299 li
278.375 42.9365 li
278.762 42.9365 li
278.762 42.7441 li
279.148 42.7441 li
279.34 42.9365 li
279.533 42.9365 li
279.533 43.1299 li
279.727 43.1299 li
279.727 43.3228 li
279.92 43.3228 li
279.92 43.5151 li
280.113 43.5151 li
280.113 43.709 li
280.498 44.0947 li
280.498 44.2871 li
280.691 44.2871 li
280.691 44.481 li
281.465 44.481 li
281.852 44.0947 li
282.045 44.0947 li
282.045 43.9014 li
282.236 43.9014 li
282.236 43.709 li
282.623 43.709 li
282.623 43.5151 li
283.395 43.5151 li
283.395 43.709 li
284.361 43.709 li
284.555 43.5151 li
284.748 43.5151 li
284.939 43.3228 li
285.133 43.3228 li
285.133 43.1299 li
285.326 43.1299 li
285.326 42.9365 li
285.52 42.9365 li
285.52 42.7441 li
285.713 42.7441 li
285.904 42.5508 li
286.098 42.5508 li
286.098 42.3579 li
287.256 42.3579 li
287.256 42.5508 li
287.449 42.5508 li
287.449 42.7441 li
287.643 42.7441 li
287.643 42.9365 li
287.836 42.9365 li
287.836 43.1299 li
288.027 43.1299 li
288.027 43.3228 li
288.221 43.5151 li
288.221 43.709 li
288.414 43.709 li
288.414 43.9014 li
288.607 44.0947 li
288.607 44.2871 li
288.801 44.48 li
288.801 44.6738 li
288.992 44.6738 li
288.992 45.0596 li
289.186 45.0596 li
289.186 45.252 li
289.379 45.4458 li
289.379 45.6387 li
289.572 45.6387 li
289.572 45.8315 li
290.346 45.8315 li
290.346 45.6387 li
290.537 45.6387 li
290.537 45.4458 li
290.73 45.4458 li
290.73 45.0596 li
290.924 45.0596 li
290.924 44.48 li
291.115 44.48 li
291.115 44.0933 li
291.309 43.9004 li
291.309 43.5146 li
291.502 43.3208 li
291.502 42.9351 li
291.695 42.7427 li
291.695 42.3564 li
291.889 42.1631 li
291.889 41.5835 li
292.08 41.5835 li
292.08 41.1973 li
292.273 41.1973 li
292.273 40.8115 li
292.467 40.8115 li
292.467 40.6182 li
292.66 40.6182 li
292.66 40.4253 li
292.854 40.4253 li
293.238 40.8115 li
293.238 41.0049 li
293.434 41.0049 li
293.434 41.3906 li
293.625 41.3906 li
293.625 41.9702 li
293.818 42.1631 li
293.818 42.3564 li
294.012 42.5488 li
294.012 42.9351 li
294.203 43.1284 li
294.203 43.5146 li
294.396 43.7075 li
294.396 43.9004 li
294.59 44.0933 li
294.59 44.4795 li
294.781 44.6729 li
294.781 44.8652 li
294.977 44.8652 li
294.977 45.0581 li
295.168 45.0581 li
295.168 45.2515 li
295.361 45.2515 li
295.555 45.4443 li
295.746 45.2515 li
295.941 45.2515 li
296.133 45.0581 li
296.326 45.0581 li
296.326 44.8652 li
296.52 44.8652 li
296.52 44.6729 li
296.711 44.6729 li
296.711 44.4795 li
296.906 44.4795 li
296.906 44.2866 li
297.291 44.2866 li
297.291 44.0933 li
297.484 44.0933 li
297.678 43.9004 li
297.869 43.9004 li
298.064 43.708 li
298.256 43.708 li
298.256 43.5146 li
298.449 43.5146 li
298.643 43.3218 li
298.834 43.3218 li
298.834 43.1284 li
299.029 43.1284 li
299.029 42.9355 li
299.221 42.9355 li
299.221 42.7432 li
299.414 42.7432 li
299.414 42.5498 li
299.607 42.5498 li
299.799 42.3569 li
299.994 42.3569 li
299.994 42.1641 li
300.572 42.1641 li
300.572 41.9712 li
301.152 41.9712 li
301.152 42.1641 li
301.537 42.1641 li
301.73 42.3569 li
301.924 42.3569 li
301.924 42.5498 li
302.117 42.5498 li
302.117 42.7432 li
302.311 42.9355 li
302.311 43.1284 li
302.502 43.1284 li
302.502 43.3218 li
302.695 43.5146 li
302.695 43.708 li
302.889 43.9004 li
302.889 44.2866 li
303.082 44.48 li
303.082 44.8662 li
303.275 45.0591 li
303.275 45.252 li
303.467 45.4448 li
303.467 45.8311 li
303.66 45.8311 li
303.66 46.2168 li
303.854 46.2168 li
303.854 46.604 li
304.24 46.9902 li
304.432 46.9902 li
304.432 46.7964 li
304.625 46.7964 li
304.625 46.604 li
304.818 46.604 li
304.818 46.2178 li
305.012 46.0244 li
305.012 45.6387 li
305.205 45.4458 li
305.205 44.8662 li
305.396 44.6729 li
305.396 44.0933 li
305.59 43.9004 li
305.59 43.3208 li
305.783 43.1284 li
305.783 42.3555 li
305.977 41.9692 li
305.977 41.5835 li
306.168 41.1973 li
306.168 40.8105 li
306.363 40.6182 li
306.363 40.2319 li
306.555 40.0386 li
306.555 39.8457 li
306.941 39.4595 li
306.941 39.6523 li
307.135 39.6523 li
307.328 39.8457 li
307.328 40.0386 li
307.52 40.231 li
307.52 40.6182 li
307.713 40.8105 li
307.713 41.3896 li
307.906 41.5825 li
307.906 41.9692 li
308.1 42.1621 li
308.1 42.7417 li
308.293 42.9341 li
308.293 43.5137 li
308.484 43.7075 li
308.484 44.2866 li
308.678 44.4795 li
308.678 44.8652 li
308.871 45.0591 li
308.871 45.4448 li
309.064 45.6377 li
309.064 45.8311 li
309.256 45.8311 li
309.256 46.0234 li
309.643 46.0234 li
310.029 45.6377 li
310.029 45.4448 li
310.223 45.4448 li
310.223 45.0581 li
310.416 45.0581 li
310.416 44.6719 li
310.607 44.4795 li
310.607 44.2856 li
310.801 44.0933 li
310.801 43.9004 li
310.994 43.7075 li
310.994 43.5146 li
311.188 43.5146 li
311.188 43.3208 li
311.381 43.1284 li
312.152 43.1284 li
312.152 43.3208 li
312.539 43.3208 li
312.539 43.5146 li
313.504 43.5146 li
313.504 43.3208 li
313.697 43.3208 li
313.697 43.1284 li
313.891 43.1284 li
313.891 42.9355 li
314.082 42.9355 li
314.082 42.7427 li
314.469 42.7427 li
314.469 42.5498 li
315.049 42.5498 li
315.049 42.7427 li
315.242 42.7427 li
315.242 42.9355 li
315.434 42.9355 li
315.434 43.1284 li
315.627 43.1284 li
315.627 43.3208 li
315.82 43.5146 li
315.82 43.7075 li
316.014 43.9004 li
316.014 44.0933 li
316.207 44.0933 li
316.207 44.2856 li
316.398 44.2856 li
316.398 44.4795 li
316.592 44.4795 li
316.592 44.6719 li
316.785 44.6719 li
316.785 44.8652 li
316.979 44.8652 li
316.979 44.6719 li
317.365 44.6719 li
317.365 44.4795 li
317.75 44.0933 li
317.75 43.7065 li
317.943 43.7065 li
317.943 43.3203 li
318.137 43.1279 li
318.137 42.9341 li
318.33 42.7417 li
318.33 42.5488 li
318.523 42.3555 li
318.523 42.1631 li
318.715 41.9692 li
318.715 41.7769 li
319.102 41.3906 li
319.488 41.3906 li
319.488 41.5835 li
319.682 41.5835 li
319.682 41.9692 li
319.873 41.9692 li
319.873 42.3564 li
320.068 42.5488 li
320.068 42.9351 li
320.26 43.1284 li
320.26 43.5146 li
320.453 43.7075 li
320.453 44.2866 li
320.646 44.48 li
320.646 44.8662 li
320.838 45.0591 li
320.838 45.4448 li
321.033 45.6387 li
321.033 46.0244 li
321.225 46.0244 li
321.225 46.2168 li
321.418 46.4106 li
321.418 46.603 li
321.805 46.603 li
321.805 46.4106 li
321.996 46.2168 li
321.996 46.0244 li
322.189 45.8315 li
322.189 45.6387 li
322.383 45.4458 li
322.383 44.8662 li
322.576 44.6729 li
322.576 44.2866 li
322.77 44.0942 li
322.77 43.708 li
322.961 43.5146 li
322.961 43.1284 li
323.154 42.9355 li
323.154 42.5488 li
323.348 42.3564 li
323.348 41.9702 li
323.541 41.9702 li
323.541 41.7769 li
323.734 41.7769 li
323.734 41.5845 li
324.119 41.5845 li
324.119 41.7769 li
324.313 41.7769 li
324.313 41.9702 li
324.506 41.9702 li
324.506 42.1631 li
324.699 42.1631 li
324.893 42.3564 li
325.084 42.3564 li
325.084 42.5488 li
326.244 42.5488 li
326.436 42.7417 li
326.629 42.7417 li
326.629 42.9351 li
326.822 43.1279 li
326.822 43.3208 li
327.016 43.5137 li
327.016 43.8999 li
327.207 44.0933 li
327.207 44.2856 li
327.4 44.4785 li
327.4 44.8652 li
327.594 45.0581 li
327.594 45.2505 li
327.787 45.4443 li
327.787 45.6367 li
327.98 45.6367 li
327.98 45.8301 li
328.172 46.0229 li
328.365 46.0229 li
328.365 45.8301 li
328.559 45.8301 li
328.559 45.6367 li
328.752 45.4443 li
328.752 45.0581 li
328.945 44.8647 li
328.945 44.2852 li
329.137 44.0928 li
329.137 43.7065 li
329.33 43.5132 li
329.33 42.9336 li
329.523 42.7412 li
329.523 42.3545 li
329.717 42.1616 li
329.717 41.7754 li
329.91 41.5825 li
329.91 41.3892 li
330.102 41.3892 li
330.102 41.1968 li
330.295 41.3892 li
330.488 41.3892 li
330.488 41.5825 li
330.682 41.7754 li
330.682 42.3545 li
330.875 42.5474 li
330.875 42.9341 li
331.066 43.127 li
331.066 43.5132 li
331.26 43.8989 li
331.26 44.2856 li
331.453 44.4785 li
331.453 44.8647 li
331.645 45.0581 li
331.645 45.6377 li
331.84 45.6377 li
331.84 45.8301 li
332.031 46.0229 li
332.418 46.0229 li
332.418 45.8301 li
332.611 45.6377 li
332.611 45.2505 li
332.805 45.0581 li
332.805 44.6719 li
332.998 44.4785 li
332.998 43.8989 li
333.189 43.7065 li
333.189 43.3203 li
333.383 43.127 li
333.383 42.7412 li
333.576 42.5483 li
333.576 41.9688 li
333.768 41.7754 li
333.768 41.5825 li
333.963 41.3896 li
333.963 41.1968 li
334.154 41.1968 li
334.154 41.0039 li
334.541 41.0039 li
334.541 41.1968 li
334.734 41.1968 li
334.734 41.3896 li
334.928 41.3896 li
334.928 41.5825 li
335.119 41.7754 li
335.119 41.9688 li
335.313 42.1616 li
335.313 42.3545 li
335.506 42.5474 li
335.506 42.7402 li
335.699 42.9336 li
335.699 43.1265 li
335.893 43.1265 li
335.893 43.3193 li
336.084 43.3193 li
336.084 43.5122 li
336.664 44.0918 li
336.857 44.0918 li
336.857 44.2842 li
337.051 44.2842 li
337.051 44.4775 li
337.242 44.4775 li
337.242 44.6699 li
337.436 44.6699 li
337.436 44.8638 li
337.629 44.8638 li
337.629 45.0566 li
337.822 45.0566 li
337.822 45.249 li
338.016 45.249 li
338.016 45.4424 li
338.207 45.4424 li
338.207 45.6348 li
338.787 45.6348 li
338.98 45.4424 li
338.98 45.249 li
339.174 45.0566 li
339.174 44.8638 li
339.365 44.6699 li
339.365 44.4775 li
339.559 44.2842 li
339.559 43.8984 li
339.752 43.7061 li
339.752 43.3193 li
339.945 43.1265 li
339.945 42.7402 li
340.139 42.5474 li
340.139 42.1606 li
340.33 41.9678 li
340.33 41.7754 li
340.523 41.582 li
340.523 41.3892 li
340.717 41.3892 li
340.717 41.1958 li
340.91 41.1958 li
340.91 41.0029 li
340.91 41.1958 li
341.295 41.1958 li
341.295 41.3892 li
341.488 41.582 li
341.488 41.7754 li
341.682 41.7754 li
341.682 42.1616 li
341.875 42.354 li
341.875 42.7402 li
342.068 42.9336 li
342.068 43.1265 li
342.26 43.3193 li
342.26 43.5122 li
342.453 43.7046 li
342.453 43.8984 li
342.646 43.8984 li
342.646 44.0908 li
342.84 44.2842 li
343.42 44.2842 li
343.998 43.7046 li
344.191 43.7046 li
344.191 43.5112 li
344.578 43.5112 li
344.578 43.3188 li
344.963 43.3188 li
344.963 43.5112 li
345.35 43.5112 li
345.35 43.7046 li
345.543 43.7046 li
345.736 43.8975 li
345.93 43.8975 li
346.121 44.0898 li
346.895 44.0898 li
346.895 43.8975 li
347.281 43.8975 li
347.473 43.7046 li
347.668 43.7046 li
347.859 43.5112 li
348.246 43.5112 li
348.246 43.3188 li
349.211 43.3188 li
349.211 43.1255 li
350.949 43.1255 li
350.949 43.3188 li
351.529 43.3188 li
351.723 43.5112 li
352.494 43.5112 li
352.494 43.7046 li
355.779 43.7046 li
355.779 43.5112 li
357.709 43.5112 li
357.709 43.3188 li
359.256 43.3188 li
359.447 43.5112 li
463.76 43.5112 li
0.25 43.519 mo
83.6992 43.519 li
83.6992 43.3267 li
85.4375 43.3267 li
85.4375 43.519 li
85.8237 43.519 li
86.0161 43.7129 li
86.21 43.7129 li
86.4023 43.9053 li
87.5615 43.9053 li
87.5615 43.7129 li
87.9473 43.7129 li
87.9473 43.519 li
88.334 43.519 li
88.334 43.3267 li
88.7207 43.3267 li
88.9131 43.1338 li
89.2988 43.1338 li
89.4927 43.3267 li
90.0723 43.3267 li
90.0723 43.519 li
95.2876 43.519 li
95.2876 43.7129 li
97.0259 43.7129 li
97.0259 43.519 li
97.4121 43.519 li
97.4121 43.3267 li
97.7979 43.3267 li
97.9912 43.1338 li
98.7637 43.1338 li
98.9561 43.3267 li
99.1494 43.3267 li
99.3423 43.519 li
99.5356 43.519 li
99.7285 43.7129 li
100.114 43.7129 li
100.114 43.9053 li
100.694 43.9053 li
100.694 43.7129 li
102.818 43.7129 li
102.818 43.519 li
103.012 43.519 li
103.204 43.3267 li
103.398 43.3267 li
103.398 43.1338 li
103.59 43.1338 li
103.59 42.7471 li
103.783 42.7471 li
103.783 42.5547 li
103.977 42.5547 li
103.977 42.3623 li
104.749 42.3623 li
104.749 42.5547 li
104.942 42.5547 li
104.942 42.7471 li
105.134 42.9409 li
105.134 43.1333 li
105.327 43.3267 li
105.327 43.7129 li
105.521 43.7129 li
105.521 44.2925 li
105.713 44.2925 li
105.713 44.6782 li
105.907 44.8706 li
105.907 45.0645 li
106.099 45.0645 li
106.099 45.2568 li
106.293 45.4502 li
106.679 45.4502 li
106.679 45.2568 li
106.872 45.2568 li
106.872 45.0645 li
107.065 44.8706 li
107.065 44.6782 li
107.257 44.4854 li
107.257 44.0986 li
107.45 43.9063 li
107.45 43.52 li
107.644 43.52 li
107.644 43.1338 li
107.836 42.9409 li
107.836 42.748 li
108.03 42.5547 li
108.03 42.3623 li
108.222 42.3623 li
108.222 42.1694 li
108.415 41.9761 li
108.802 41.9761 li
108.802 42.1694 li
108.994 42.1694 li
109.187 42.3623 li
109.187 42.5547 li
109.38 42.5547 li
109.38 42.748 li
109.573 42.748 li
109.573 42.9409 li
109.767 42.9409 li
109.767 43.1338 li
109.959 43.1338 li
110.152 43.3267 li
110.345 43.3267 li
110.345 43.519 li
110.731 43.519 li
110.731 43.7129 li
111.117 43.7129 li
111.117 43.9053 li
111.311 43.9053 li
111.311 44.0986 li
111.503 44.0986 li
111.889 44.4849 li
112.083 44.4849 li
112.083 44.6777 li
112.855 44.6777 li
112.855 44.4849 li
113.241 44.0986 li
113.241 43.9053 li
113.435 43.9053 li
113.435 43.7129 li
113.627 43.519 li
113.627 43.3267 li
113.82 43.3267 li
113.82 42.9409 li
114.013 42.9409 li
114.013 42.7471 li
114.206 42.5547 li
114.399 42.5547 li
114.399 42.3623 li
115.171 42.3623 li
115.171 42.5547 li
115.365 42.5547 li
115.365 42.7471 li
115.557 42.7471 li
115.557 42.9409 li
115.75 43.1333 li
115.75 43.3267 li
115.943 43.3267 li
115.943 43.519 li
116.136 43.519 li
116.136 43.7119 li
116.33 43.7119 li
116.33 43.9053 li
116.522 43.9053 li
116.522 44.0981 li
117.294 44.0981 li
117.294 43.9053 li
117.681 43.9053 li
117.681 43.7119 li
117.874 43.7119 li
118.066 43.519 li
119.226 43.519 li
119.226 43.7119 li
119.805 43.7119 li
119.998 43.9053 li
119.998 43.7119 li
120.578 43.7119 li
120.578 43.519 li
120.964 43.519 li
120.964 43.3267 li
121.35 43.3267 li
121.543 43.1333 li
121.929 43.1333 li
121.929 43.3267 li
122.509 43.3267 li
122.701 43.519 li
123.86 43.519 li
123.86 43.3267 li
125.213 43.3267 li
125.213 43.519 li
125.599 43.519 li
125.599 43.7119 li
125.985 43.7119 li
125.985 43.9053 li
126.371 43.9053 li
126.371 44.0981 li
126.951 44.0981 li
126.951 43.9053 li
127.53 43.9053 li
127.53 43.7119 li
127.723 43.7119 li
127.916 43.519 li
128.108 43.519 li
128.302 43.3267 li
128.688 43.3267 li
128.688 43.1333 li
129.847 43.1333 li
129.847 43.3267 li
130.813 43.3267 li
130.813 43.519 li
131.778 43.519 li
131.972 43.7119 li
134.676 43.7119 li
134.868 43.519 li
135.448 43.519 li
135.641 43.3267 li
136.027 43.3267 li
136.22 43.1333 li
137.572 43.1333 li
137.572 43.3267 li
137.958 43.3267 li
137.958 43.519 li
138.151 43.519 li
138.344 43.7119 li
138.537 43.7119 li
138.537 43.9053 li
138.924 43.9053 li
138.924 44.0981 li
140.083 44.0981 li
140.083 43.9053 li
140.662 43.9053 li
140.662 43.7119 li
141.048 43.7119 li
141.241 43.519 li
141.627 43.519 li
141.627 43.3267 li
141.82 43.3267 li
142.013 43.1333 li
142.207 43.1333 li
142.207 42.9409 li
142.592 42.9409 li
142.592 42.7471 li
143.558 42.7471 li
143.558 42.9409 li
143.944 42.9409 li
143.944 43.1333 li
144.33 43.1333 li
144.33 43.3267 li
144.91 43.3267 li
144.91 43.519 li
145.296 43.519 li
145.489 43.7119 li
145.682 43.7119 li
145.682 43.9053 li
145.875 43.9053 li
145.875 44.0981 li
146.068 44.291 li
146.068 44.4839 li
146.261 44.4839 li
146.261 44.8701 li
146.454 45.0635 li
146.454 45.2559 li
146.646 45.4487 li
146.646 45.6426 li
146.84 45.6426 li
146.84 45.835 li
147.033 45.835 li
147.033 46.0283 li
147.226 46.0283 li
147.226 45.835 li
147.418 45.835 li
147.418 45.6426 li
147.611 45.4487 li
147.611 45.063 li
147.805 44.8701 li
147.805 44.4839 li
147.998 44.0972 li
147.998 43.5176 li
148.19 43.3247 li
148.19 42.3594 li
148.383 41.9731 li
148.383 41.3936 li
148.576 41.0068 li
148.576 40.4272 li
148.77 40.2349 li
148.77 39.6553 li
148.962 39.4629 li
148.962 39.0762 li
149.349 39.0762 li
149.349 39.2695 li
149.542 39.2695 li
149.542 39.6553 li
149.734 40.0415 li
149.734 40.4272 li
149.928 40.8145 li
149.928 41.9731 li
150.12 42.3594 li
150.12 43.1318 li
150.314 43.5176 li
150.314 44.2905 li
150.506 44.6768 li
150.506 45.2559 li
150.699 45.6426 li
150.699 46.2217 li
150.893 46.415 li
150.893 46.9946 li
151.085 46.9946 li
151.085 47.187 li
151.471 47.187 li
151.471 46.8013 li
151.665 46.8013 li
151.665 46.415 li
151.857 46.2217 li
151.857 45.6426 li
152.05 45.2559 li
152.05 44.8701 li
152.244 44.6768 li
152.244 44.2905 li
152.435 44.0981 li
152.435 43.7119 li
152.629 43.5186 li
152.629 43.3257 li
152.822 43.1323 li
152.822 42.9395 li
153.208 42.9395 li
153.788 43.519 li
153.981 43.519 li
153.981 43.7119 li
154.367 43.7119 li
154.56 43.519 li
154.56 43.3267 li
154.753 43.3267 li
154.753 43.1333 li
154.945 43.1333 li
154.945 42.9409 li
155.139 42.7471 li
155.139 42.5547 li
155.332 42.5547 li
155.332 42.3623 li
155.525 42.3623 li
155.525 42.1685 li
155.717 41.9761 li
156.683 41.9761 li
156.683 42.1685 li
156.876 42.1685 li
156.876 42.3623 li
157.07 42.3623 li
157.261 42.5547 li
157.456 42.5547 li
157.456 42.7471 li
157.841 43.1338 li
157.841 43.3267 li
158.035 43.3267 li
158.035 43.519 li
158.228 43.519 li
158.228 43.9063 li
158.42 44.0986 li
158.42 44.291 li
158.613 44.291 li
158.613 44.6782 li
158.806 44.6782 li
158.806 44.8706 li
159 45.0635 li
159 45.2568 li
159.192 45.4497 li
159.192 45.6431 li
159.578 46.0293 li
160.158 46.0293 li
160.158 45.8354 li
160.351 45.8354 li
160.351 45.6431 li
160.543 45.4502 li
160.543 45.2568 li
160.736 45.2568 li
160.736 44.8706 li
160.93 44.8706 li
160.93 44.6782 li
161.123 44.4849 li
161.123 44.0986 li
161.316 43.9063 li
161.316 43.7129 li
161.508 43.7129 li
161.508 43.3267 li
161.701 43.3267 li
161.701 43.1338 li
162.087 42.7471 li
162.087 42.5547 li
162.281 42.5547 li
162.281 42.3623 li
162.473 42.3623 li
162.473 42.1685 li
162.667 42.1685 li
162.667 41.9761 li
162.859 41.9761 li
162.859 41.7827 li
163.052 41.7827 li
163.052 41.5898 li
163.246 41.5898 li
163.246 41.3975 li
163.438 41.3975 li
163.631 41.2036 li
163.824 41.2036 li
163.824 41.0112 li
164.404 41.0112 li
164.79 41.3975 li
164.79 41.5898 li
164.983 41.5898 li
164.983 41.9771 li
165.175 41.9771 li
165.175 42.3628 li
165.369 42.3628 li
165.369 42.749 li
165.562 42.9414 li
165.562 43.1348 li
165.754 43.3276 li
165.754 43.9072 li
165.948 44.1006 li
165.948 44.293 li
166.14 44.4854 li
166.14 44.8726 li
166.333 44.8726 li
166.333 45.2588 li
166.527 45.2588 li
166.527 45.4512 li
166.719 45.6445 li
166.719 45.8369 li
166.913 46.0298 li
166.913 46.2236 li
167.105 46.2236 li
167.105 46.416 li
167.298 46.416 li
167.685 46.8018 li
167.877 46.8018 li
167.877 46.9956 li
168.65 46.9956 li
168.65 46.8018 li
168.843 46.6094 li
168.843 46.4165 li
169.035 46.2236 li
169.035 46.0308 li
169.229 45.8369 li
169.229 45.2578 li
169.421 45.0649 li
169.421 44.293 li
169.615 43.9063 li
169.615 43.1338 li
169.808 42.748 li
169.808 42.1685 li
170 41.7827 li
170 41.0098 li
170.194 40.6235 li
170.194 39.8516 li
170.386 39.4648 li
170.386 38.3057 li
170.58 38.1133 li
170.58 37.5337 li
170.773 37.3408 li
170.773 36.9541 li
170.964 36.7612 li
170.964 36.5688 li
171.158 36.5688 li
171.351 36.7612 li
171.351 37.1475 li
171.544 37.3408 li
171.544 37.9204 li
171.738 38.1133 li
171.738 38.8853 li
171.929 39.272 li
171.929 40.2373 li
172.123 40.6235 li
172.123 41.9751 li
172.316 42.5547 li
172.316 43.521 li
172.509 43.9072 li
172.509 44.8726 li
172.703 45.2588 li
172.703 46.2241 li
172.894 46.6108 li
172.894 47.1904 li
173.087 47.5767 li
173.087 48.1563 li
173.281 48.3486 li
173.281 48.7349 li
173.474 48.7349 li
173.474 48.9282 li
173.667 48.9282 li
173.667 48.7349 li
173.86 48.7349 li
173.86 48.3486 li
174.052 48.3486 li
174.052 47.7695 li
174.246 47.5767 li
174.246 46.9971 li
174.439 46.8037 li
174.439 46.2241 li
174.631 46.0313 li
174.631 45.4521 li
174.825 45.2593 li
174.825 44.8726 li
175.017 44.4863 li
175.017 43.9072 li
175.21 43.7144 li
175.21 43.521 li
175.404 43.3286 li
175.404 43.1357 li
175.596 42.9424 li
175.596 42.7495 li
175.79 42.7495 li
175.982 42.5562 li
176.562 42.5562 li
176.754 42.7495 li
176.754 42.5562 li
177.333 42.5562 li
177.333 42.3638 li
177.527 42.3638 li
177.527 42.1709 li
177.72 42.1709 li
177.72 41.9775 li
177.914 41.9775 li
178.106 41.7847 li
178.878 41.7847 li
178.878 41.9775 li
179.072 41.9775 li
179.264 42.1709 li
179.264 42.3638 li
179.458 42.3638 li
179.458 42.5562 li
179.65 42.5562 li
179.65 42.7495 li
179.843 42.9424 li
179.843 43.1357 li
180.037 43.1357 li
180.037 43.3286 li
180.229 43.3286 li
180.229 43.521 li
180.615 43.9082 li
180.615 44.1006 li
180.808 44.1006 li
180.808 44.293 li
181.001 44.293 li
181.001 44.4863 li
181.195 44.6792 li
181.195 44.8726 li
181.386 44.8726 li
181.386 45.2588 li
181.58 45.2588 li
181.58 45.4512 li
181.773 45.6445 li
181.773 45.8369 li
181.966 46.0298 li
181.966 46.2231 li
182.16 46.416 li
182.16 46.6094 li
182.351 46.8018 li
182.351 46.9946 li
182.545 47.188 li
182.931 47.188 li
183.125 46.9946 li
183.125 46.8018 li
183.317 46.6094 li
183.317 46.0298 li
183.509 45.8364 li
183.509 45.2568 li
183.703 44.8706 li
183.703 44.291 li
183.896 43.9053 li
183.896 43.1323 li
184.089 42.5527 li
184.089 41.7808 li
184.282 41.3945 li
184.282 40.0425 li
184.474 39.6563 li
184.474 38.8843 li
184.667 38.4985 li
184.667 37.9189 li
184.861 37.7251 li
184.861 37.1455 li
185.053 36.9531 li
185.053 36.7598 li
185.247 36.5674 li
185.247 36.7598 li
185.439 36.7598 li
185.439 37.147 li
185.632 37.3394 li
185.632 37.9189 li
185.826 38.3047 li
185.826 39.0781 li
186.018 39.4639 li
186.018 41.0088 li
186.211 41.395 li
186.211 42.5537 li
186.404 43.1333 li
186.404 44.0986 li
186.597 44.6782 li
186.597 45.6445 li
186.791 46.2241 li
186.791 46.9961 li
186.983 47.3823 li
186.983 48.3477 li
187.176 48.7344 li
187.176 49.1206 li
187.369 49.1206 li
187.369 49.3135 li
187.755 48.9272 li
187.755 48.5415 li
187.949 48.3477 li
187.949 47.3823 li
188.141 46.9961 li
188.141 46.4165 li
188.333 46.0308 li
188.333 45.2573 li
188.527 44.8716 li
188.527 44.292 li
188.72 43.9063 li
188.72 43.3267 li
188.914 43.1338 li
188.914 42.5547 li
189.106 42.3613 li
189.106 42.1685 li
189.492 42.1685 li
189.685 42.3613 li
189.685 42.5547 li
189.877 42.7471 li
189.877 43.1333 li
190.072 43.3267 li
190.072 43.7129 li
190.264 43.7129 li
190.264 43.9053 li
190.457 44.0986 li
190.843 44.0986 li
190.843 43.9053 li
191.037 43.7129 li
191.037 43.3267 li
191.229 43.1333 li
191.229 42.9404 li
191.421 42.7471 li
191.421 42.3613 li
191.615 42.1685 li
191.615 41.7827 li
191.808 41.5889 li
191.808 41.3965 li
192.195 41.3965 li
192.386 41.5889 li
192.386 41.7827 li
192.581 41.9751 li
192.581 42.7471 li
192.773 42.9404 li
192.773 43.52 li
192.965 43.7129 li
192.965 44.292 li
193.159 44.4854 li
193.159 45.0649 li
193.351 45.2573 li
193.351 45.644 li
193.544 45.8369 li
193.544 46.0298 li
193.738 46.0298 li
193.93 45.8369 li
193.93 45.644 li
194.124 45.4512 li
194.124 45.0649 li
194.316 44.6782 li
194.316 44.0986 li
194.509 43.7129 li
194.509 42.7471 li
194.703 42.3613 li
194.703 41.5884 li
194.895 41.2021 li
194.895 40.6226 li
195.088 40.2368 li
195.088 39.8506 li
195.281 39.4648 li
195.281 39.0776 li
195.474 38.8853 li
195.667 38.8853 li
195.667 39.0776 li
195.861 39.0776 li
195.861 39.4648 li
196.053 39.6572 li
196.053 40.2368 li
196.246 40.6226 li
196.246 41.7817 li
196.439 42.168 li
196.439 42.9404 li
196.632 43.52 li
196.632 44.292 li
196.826 44.6782 li
196.826 45.6445 li
197.017 46.0308 li
197.017 46.8027 li
197.21 47.1885 li
197.21 47.9619 li
197.404 48.3477 li
197.404 48.7339 li
197.597 48.9272 li
197.597 49.1196 li
197.982 49.1196 li
197.982 48.9272 li
198.176 48.7339 li
198.176 48.3477 li
198.369 47.9619 li
198.369 47.5757 li
198.562 47.1885 li
198.562 46.6094 li
198.754 46.4165 li
198.754 45.8369 li
198.947 45.4512 li
198.947 44.8716 li
199.141 44.4854 li
199.141 43.7129 li
199.333 43.3267 li
199.333 42.9404 li
199.527 42.7471 li
199.527 42.168 li
199.719 42.168 li
199.719 41.7817 li
199.912 41.5889 li
199.912 41.3955 li
200.105 41.2031 li
200.298 41.2031 li
200.298 41.0103 li
201.263 41.0103 li
201.457 40.8169 li
201.65 40.8169 li
201.65 40.624 li
202.423 40.624 li
202.423 40.8169 li
202.615 41.0103 li
202.615 41.2031 li
202.808 41.3955 li
202.808 41.9751 li
203.001 42.3618 li
203.001 42.748 li
203.194 43.1338 li
203.194 43.7134 li
203.388 43.9063 li
203.388 44.6792 li
203.58 44.8716 li
203.58 45.4512 li
203.773 45.8369 li
203.773 46.4165 li
203.966 46.8032 li
203.966 46.9961 li
204.159 47.1885 li
204.159 47.3823 li
204.545 47.3823 li
204.545 46.9961 li
204.738 46.8027 li
204.738 46.2231 li
204.931 46.0308 li
204.931 45.4512 li
205.125 45.0649 li
205.125 44.4854 li
205.317 44.0986 li
205.317 43.519 li
205.51 43.1333 li
205.51 42.3608 li
205.703 42.168 li
205.703 41.7817 li
205.896 41.5889 li
205.896 41.3955 li
206.283 41.3955 li
206.283 41.7827 li
206.475 41.9751 li
206.475 42.7471 li
206.667 43.1338 li
206.667 43.7134 li
206.861 44.0996 li
206.861 45.0649 li
207.054 45.4512 li
207.054 46.2236 li
207.248 46.6104 li
207.248 47.3823 li
207.44 47.7681 li
207.44 48.5415 li
207.632 48.9272 li
207.632 49.1196 li
207.826 49.1196 li
207.826 49.3135 li
207.826 49.1196 li
208.019 49.1196 li
208.019 48.7339 li
208.212 48.5415 li
208.212 47.9619 li
208.405 47.5757 li
208.405 46.2231 li
208.597 45.644 li
208.597 44.4849 li
208.791 43.9053 li
208.791 42.5537 li
208.984 41.9741 li
208.984 40.6221 li
209.176 40.0425 li
209.176 38.1113 li
209.369 37.5317 li
209.369 36.5654 li
209.562 35.9863 li
209.562 35.2139 li
209.755 35.0215 li
209.755 34.4419 li
209.949 34.248 li
209.949 34.0557 li
210.141 34.0557 li
210.141 34.4419 li
210.333 34.6343 li
210.333 35.2139 li
210.528 35.6006 li
210.528 36.373 li
210.72 36.7588 li
210.72 37.918 li
210.913 38.4971 li
210.913 39.6563 li
211.106 40.2358 li
211.106 42.168 li
211.298 42.9395 li
211.298 44.292 li
211.492 44.8716 li
211.492 46.0308 li
211.685 46.8027 li
211.685 47.7681 li
211.877 48.3477 li
211.877 49.314 li
212.071 49.8936 li
212.071 50.8594 li
212.263 51.2451 li
212.263 51.6313 li
212.457 51.8247 li
212.457 52.0171 li
212.65 52.21 li
212.65 52.0171 li
212.841 52.0171 li
212.841 51.8247 li
213.036 51.6313 li
213.036 50.6655 li
213.228 50.4731 li
213.228 49.7002 li
213.421 49.1206 li
213.421 48.3486 li
213.615 47.769 li
213.615 46.8032 li
213.806 46.2236 li
213.806 44.6782 li
214 44.0986 li
214 42.9395 li
214.193 42.5537 li
214.193 41.5884 li
214.386 41.2021 li
214.386 40.2368 li
214.58 40.043 li
214.58 39.271 li
214.771 39.0776 li
214.771 38.6914 li
214.965 38.499 li
215.158 38.499 li
215.158 38.6914 li
215.351 38.8853 li
215.351 39.271 li
215.544 39.4634 li
215.544 40.043 li
215.736 40.4292 li
215.736 41.3955 li
215.929 41.5884 li
215.929 42.3604 li
216.123 42.5537 li
216.123 43.1333 li
216.316 43.3257 li
216.316 43.7119 li
216.509 43.9053 li
216.509 44.0981 li
216.702 44.0981 li
216.702 43.9053 li
216.894 43.7119 li
216.894 43.519 li
217.087 43.3267 li
217.087 42.7471 li
217.281 42.5537 li
217.281 41.9741 li
217.473 41.5884 li
217.473 41.0088 li
217.667 40.8164 li
217.667 40.043 li
217.859 39.8506 li
217.859 39.4644 li
218.052 39.4644 li
218.052 39.271 li
218.246 39.4644 li
218.246 39.6572 li
218.438 39.8496 li
218.438 40.8164 li
218.631 41.2021 li
218.631 42.168 li
218.824 42.5537 li
218.824 43.7129 li
219.017 44.4854 li
219.017 45.6445 li
219.21 46.2236 li
219.21 47.5757 li
219.402 48.1548 li
219.402 49.8936 li
219.596 50.4731 li
219.596 51.2451 li
219.789 51.6318 li
219.789 52.2114 li
219.982 52.4043 li
219.982 52.5967 li
220.175 52.5967 li
220.175 52.2109 li
220.367 52.0181 li
220.367 51.0522 li
220.561 50.4731 li
220.561 49.314 li
220.753 48.7344 li
220.753 47.3823 li
220.947 46.6104 li
220.947 45.0649 li
221.14 44.292 li
221.14 42.5537 li
221.332 41.7817 li
221.332 39.4634 li
221.526 38.6909 li
221.526 37.5317 li
221.718 36.7598 li
221.718 35.7939 li
221.911 35.4082 li
221.911 34.6353 li
222.105 34.4424 li
222.105 34.0566 li
222.296 34.0566 li
222.49 34.249 li
222.49 34.8286 li
222.683 35.2144 li
222.683 36.1802 li
222.876 36.5674 li
222.876 37.7261 li
223.07 38.498 li
223.07 40.4297 li
223.261 41.2021 li
223.261 42.5547 li
223.455 43.3267 li
223.455 44.6782 li
223.648 45.4512 li
223.648 46.6104 li
223.841 47.3823 li
223.841 48.3477 li
224.034 48.9272 li
224.034 50.0859 li
224.226 50.4731 li
224.226 50.8594 li
224.419 51.0518 li
224.419 51.2451 li
224.613 51.2451 li
224.613 51.0518 li
224.806 50.8594 li
224.806 50.2798 li
224.999 50.0859 li
224.999 48.9272 li
225.191 48.3477 li
225.191 47.3823 li
225.384 46.9961 li
225.384 45.8369 li
225.578 45.2573 li
225.578 44.292 li
225.771 43.7129 li
225.771 42.7471 li
225.962 42.168 li
225.962 41.0088 li
226.156 40.6221 li
226.156 40.0425 li
226.349 39.6563 li
226.349 39.2705 li
226.542 39.0776 li
226.542 38.8843 li
226.736 38.8843 li
226.927 39.0776 li
226.927 39.4634 li
227.121 39.6563 li
227.121 40.0425 li
227.314 40.2358 li
227.314 40.8154 li
227.507 41.0078 li
227.507 41.7808 li
227.701 41.9731 li
227.701 42.939 li
227.892 43.1323 li
227.892 43.7119 li
228.085 43.9043 li
228.085 44.4839 li
228.279 44.6768 li
228.279 44.8701 li
228.471 45.063 li
228.471 45.2559 li
228.666 45.4487 li
228.857 45.4487 li
229.244 45.063 li
229.244 44.8701 li
229.437 44.6768 li
229.437 44.4839 li
229.63 44.2905 li
229.63 43.9043 li
229.823 43.7119 li
229.823 43.5186 li
230.015 43.3257 li
230.015 43.1323 li
230.208 42.9395 li
230.208 42.7471 li
230.402 42.7471 li
230.594 42.5537 li
230.788 42.5537 li
230.788 42.7471 li
230.98 42.7471 li
231.367 43.1333 li
231.367 43.3257 li
231.56 43.3257 li
231.56 43.519 li
231.752 43.7119 li
231.752 43.9043 li
231.945 43.9043 li
232.138 44.0981 li
232.911 44.0981 li
232.911 43.9043 li
233.104 43.9043 li
233.104 43.7119 li
233.296 43.7119 li
0 0.992157 1 0 cmyk
@
1 lw
0.25 86.9829 mo
463.861 86.9829 li
0 0 0 1 cmyk
@
447.637 86.9829 mo
447.637 89.1074 li
401.275 86.9829 mo
401.275 89.1074 li
354.912 86.9829 mo
354.912 89.1074 li
308.553 86.9829 mo
308.553 89.1074 li
262.191 86.9829 mo
262.191 89.1074 li
215.83 86.9829 mo
215.83 89.1074 li
169.468 86.9829 mo
169.468 89.1074 li
123.107 86.9829 mo
123.107 89.1074 li
76.7451 86.9829 mo
76.7451 89.1074 li
30.3843 86.9829 mo
30.3843 89.1074 li
447.637 86.9829 mo
447.637 91.2329 li
401.275 86.9829 mo
401.275 91.2329 li
354.912 86.9829 mo
354.912 91.2329 li
308.553 86.9829 mo
308.553 91.2329 li
262.191 86.9829 mo
262.191 91.2329 li
215.83 86.9829 mo
215.83 91.2329 li
169.468 86.9829 mo
169.468 91.2329 li
123.107 86.9829 mo
123.107 91.2329 li
76.7451 86.9829 mo
76.7451 91.2329 li
30.3843 86.9829 mo
30.3843 91.2329 li
@
0.5 lw
0.25 183.904 mo
463.861 183.904 li
@
447.637 183.904 mo
447.637 186.029 li
401.275 183.904 mo
401.275 186.029 li
354.912 183.904 mo
354.912 186.029 li
308.553 183.904 mo
308.553 186.029 li
262.191 183.904 mo
262.191 186.029 li
215.83 183.904 mo
215.83 186.029 li
169.468 183.904 mo
169.468 186.029 li
123.107 183.904 mo
123.107 186.029 li
76.7451 183.904 mo
76.7451 186.029 li
30.3843 183.904 mo
30.3843 186.029 li
447.637 183.904 mo
447.637 188.154 li
401.275 183.904 mo
401.275 188.154 li
354.912 183.904 mo
354.912 188.154 li
308.553 183.904 mo
308.553 188.154 li
262.191 183.904 mo
262.191 188.154 li
215.83 183.904 mo
215.83 188.154 li
169.468 183.904 mo
169.468 188.154 li
123.107 183.904 mo
123.107 188.154 li
76.7451 183.904 mo
76.7451 188.154 li
30.3843 183.904 mo
30.3843 188.154 li
@
93.7446 183.904 mo
119.823 183.904 li
119.823 96.9775 li
93.7446 96.9775 li
93.7446 183.904 li
cp
0.113725 0.113725 0 0 cmyk
f
93.7446 183.904 mo
119.823 183.904 li
119.823 96.9775 li
93.7446 96.9775 li
93.7446 183.904 li
cp
0 0 0 1 cmyk
@
133.924 183.904 mo
154.787 183.904 li
154.787 96.9775 li
133.924 96.9775 li
133.924 183.904 li
cp
0.113725 0.113725 0 0 cmyk
f
133.924 183.904 mo
154.787 183.904 li
154.787 96.9775 li
133.924 96.9775 li
133.924 183.904 li
cp
0 0 0 1 cmyk
@
154.787 183.904 mo
178.354 183.904 li
178.354 96.9775 li
154.787 96.9775 li
154.787 183.904 li
cp
0.113725 0.113725 0 0 cmyk
f
154.787 183.904 mo
178.354 183.904 li
178.354 96.9775 li
154.787 96.9775 li
154.787 183.904 li
cp
0 0 0 1 cmyk
@
178.354 183.904 mo
191.296 183.904 li
191.296 96.9775 li
178.354 96.9775 li
178.354 183.904 li
cp
0.113725 0.113725 0 0 cmyk
f
178.354 183.904 mo
191.296 183.904 li
191.296 96.9775 li
178.354 96.9775 li
178.354 183.904 li
cp
0 0 0 1 cmyk
@
202.115 183.904 mo
217.568 183.904 li
217.568 96.9775 li
202.115 96.9775 li
202.115 183.904 li
cp
0.113725 0.113725 0 0 cmyk
f
202.115 183.904 mo
217.568 183.904 li
217.568 96.9775 li
202.115 96.9775 li
202.115 183.904 li
cp
0 0 0 1 cmyk
@
217.568 183.904 mo
235.533 183.904 li
235.533 96.9775 li
217.568 96.9775 li
217.568 183.904 li
cp
0.113725 0.113725 0 0 cmyk
f
217.568 183.904 mo
235.533 183.904 li
235.533 96.9775 li
217.568 96.9775 li
217.568 183.904 li
cp
0 0 0 1 cmyk
@
241.328 183.904 mo
267.6 183.904 li
267.6 96.9775 li
241.328 96.9775 li
241.328 183.904 li
cp
0.113725 0.113725 0 0 cmyk
f
241.328 183.904 mo
267.6 183.904 li
267.6 96.9775 li
241.328 96.9775 li
241.328 183.904 li
cp
0 0 0 1 cmyk
@
249.441 105.864 mo
249.635 105.477 li
249.635 104.897 li
249.826 104.705 li
249.826 104.125 li
250.02 103.933 li
250.02 103.739 li
250.213 103.546 li
250.406 103.546 li
250.598 103.739 li
250.598 103.933 li
250.791 104.125 li
250.791 104.511 li
250.984 104.705 li
250.984 105.477 li
251.178 105.863 li
251.178 106.442 li
251.371 106.829 li
251.371 107.602 li
251.564 107.988 li
251.564 108.953 li
251.756 109.339 li
251.756 110.306 li
251.949 110.885 li
251.949 112.43 li
252.143 113.009 li
252.143 114.168 li
252.336 114.748 li
252.336 116.1 li
252.529 116.679 li
252.529 118.031 li
252.721 118.611 li
252.721 119.962 li
252.914 120.735 li
252.914 122.86 li
253.107 123.632 li
253.107 125.177 li
253.301 125.949 li
253.301 127.495 li
253.494 128.268 li
253.494 129.813 li
253.686 130.585 li
253.686 132.323 li
253.879 133.096 li
253.879 135.606 li
254.072 136.572 li
254.072 138.118 li
254.266 139.084 li
254.266 140.822 li
254.457 141.595 li
254.457 143.333 li
254.65 144.105 li
254.65 145.844 li
254.844 146.81 li
254.844 149.321 li
255.037 150.093 li
255.037 151.638 li
255.23 152.411 li
255.23 153.956 li
255.422 154.728 li
255.422 156.081 li
255.615 156.853 li
255.615 158.591 li
255.809 159.171 li
255.809 160.137 li
256.002 160.522 li
256.002 161.488 li
256.193 161.875 li
256.193 162.454 li
256.387 162.646 li
256.387 163.227 li
256.58 163.419 li
256.58 163.999 li
256.773 163.999 li
256.773 164.192 li
256.967 164.384 li
256.967 164.578 li
257.158 164.578 li
257.158 164.771 li
257.545 164.771 li
257.545 164.964 li
257.738 164.964 li
257.932 165.157 li
258.125 165.157 li
258.51 165.543 li
258.51 165.736 li
258.703 165.736 li
258.703 165.929 li
258.896 165.929 li
258.896 166.122 li
259.09 166.314 li
259.09 166.507 li
259.283 166.507 li
259.283 166.701 li
259.475 166.894 li
259.475 167.279 li
259.668 167.279 li
259.668 167.473 li
259.861 167.666 li
259.861 167.859 li
260.055 168.051 li
260.055 168.438 li
260.248 168.438 li
260.248 168.824 li
260.439 169.017 li
260.439 169.403 li
260.633 169.403 li
260.633 169.789 li
260.826 169.982 li
260.826 170.175 li
261.018 170.368 li
261.018 170.755 li
261.213 170.755 li
261.213 171.334 li
261.404 171.334 li
261.404 171.721 li
261.598 171.913 li
261.598 172.106 li
261.791 172.299 li
261.791 172.492 li
261.982 172.686 li
261.982 172.877 li
262.178 173.071 li
262.178 173.457 li
262.369 173.457 li
262.369 173.843 li
262.563 173.843 li
262.563 174.036 li
262.756 174.229 li
262.756 174.422 li
262.947 174.422 li
262.947 174.615 li
263.143 174.808 li
263.143 175 li
263.334 175.194 li
263.334 175.387 li
263.527 175.387 li
263.527 175.58 li
263.721 175.58 li
263.721 175.772 li
263.912 175.772 li
263.912 175.966 li
264.105 176.159 li
264.105 176.352 li
264.299 176.352 li
264.299 176.545 li
264.492 176.545 li
264.492 176.737 li
264.686 176.737 li
264.686 176.931 li
264.877 176.931 li
264.877 177.124 li
265.07 177.124 li
265.07 177.316 li
265.264 177.316 li
265.457 177.509 li
265.65 177.509 li
265.65 177.702 li
265.842 177.702 li
266.035 177.896 li
266.229 177.896 li
266.229 178.088 li
266.615 178.088 li
266.809 178.281 li
268.354 178.281 li
268.354 178.088 li
268.738 178.088 li
268.738 177.896 li
269.512 177.896 li
269.512 177.702 li
270.092 177.702 li
270.092 177.896 li
270.477 177.896 li
270.477 178.088 li
270.67 178.088 li
271.443 178.86 li
271.443 179.054 li
271.635 179.247 li
271.635 179.439 li
271.828 179.632 li
271.828 179.825 li
272.021 179.825 li
272.021 180.212 li
272.215 180.212 li
272.215 180.598 li
272.408 180.598 li
272.408 180.984 li
272.6 180.984 li
272.6 181.177 li
272.793 181.177 li
272.793 181.37 li
273.373 181.37 li
273.566 181.177 li
273.758 181.177 li
273.758 180.984 li
273.953 180.984 li
273.953 180.791 li
274.145 180.791 li
274.145 180.598 li
274.918 179.826 li
275.109 179.826 li
275.109 179.632 li
275.303 179.632 li
275.303 179.439 li
275.689 179.439 li
275.883 179.247 li
276.074 179.247 li
276.268 179.439 li
276.654 179.439 li
276.654 179.632 li
276.848 179.632 li
276.848 179.826 li
277.041 179.826 li
277.041 180.019 li
277.232 180.019 li
277.232 180.212 li
277.426 180.212 li
277.426 180.404 li
277.619 180.404 li
277.619 180.597 li
277.813 180.597 li
277.813 180.791 li
278.006 180.791 li
278.006 180.983 li
278.197 180.983 li
278.197 181.177 li
278.971 181.177 li
278.971 180.983 li
279.357 180.983 li
279.357 180.791 li
279.549 180.791 li
279.549 180.597 li
279.744 180.597 li
279.744 180.404 li
279.936 180.404 li
279.936 180.212 li
280.129 180.212 li
280.129 180.019 li
280.322 180.019 li
280.514 179.826 li
280.709 179.826 li
280.709 179.632 li
280.9 179.632 li
280.9 179.439 li
282.059 179.439 li
282.059 179.632 li
282.252 179.632 li
282.445 179.826 li
282.637 179.826 li
282.637 180.019 li
282.832 180.212 li
282.832 180.404 li
283.023 180.404 li
283.023 180.597 li
283.217 180.597 li
283.217 180.791 li
283.41 180.791 li
283.41 180.983 li
283.602 181.177 li
283.99 181.177 li
283.99 181.369 li
284.182 181.177 li
284.568 181.177 li
284.568 180.983 li
284.762 180.983 li
284.762 180.791 li
284.955 180.791 li
284.955 180.597 li
285.146 180.597 li
285.146 180.404 li
285.34 180.404 li
285.34 180.019 li
285.533 180.019 li
285.533 179.825 li
285.727 179.825 li
285.727 179.632 li
285.92 179.439 li
285.92 179.247 li
286.111 179.247 li
286.111 179.054 li
286.305 178.86 li
286.305 178.668 li
286.498 178.475 li
286.498 178.282 li
286.691 178.282 li
286.691 178.089 li
286.883 177.896 li
286.883 177.703 li
287.076 177.703 li
287.076 177.317 li
287.27 177.317 li
287.27 176.931 li
287.463 176.931 li
287.463 176.737 li
287.656 176.545 li
287.656 176.352 li
287.848 176.159 li
287.848 175.966 li
288.041 175.772 li
288.041 175.387 li
288.234 175.387 li
288.234 175 li
288.428 175 li
288.428 174.614 li
288.621 174.614 li
288.621 174.228 li
288.813 174.228 li
288.813 173.842 li
289.006 173.649 li
289.006 173.262 li
289.199 173.069 li
289.199 172.877 li
289.393 172.684 li
289.393 172.298 li
289.586 172.298 li
289.586 171.911 li
289.777 171.719 li
289.777 171.332 li
289.971 171.332 li
289.971 170.753 li
290.164 170.56 li
290.164 170.174 li
290.357 170.174 li
290.357 169.787 li
290.551 169.595 li
290.551 169.208 li
290.742 169.015 li
290.742 168.822 li
290.936 168.63 li
290.936 168.05 li
291.129 168.05 li
291.129 167.663 li
291.32 167.471 li
291.32 167.277 li
291.516 167.084 li
291.516 166.893 li
291.707 166.698 li
291.707 166.313 li
291.9 166.313 li
291.9 165.927 li
292.094 165.733 li
292.094 165.54 li
292.285 165.54 li
292.285 165.348 li
292.48 165.154 li
292.48 164.962 li
292.672 164.962 li
292.672 164.769 li
292.865 164.575 li
293.059 164.575 li
293.059 164.383 li
293.443 164.383 li
293.443 164.189 li
293.639 164.189 li
293.83 164.383 li
294.023 164.383 li
294.217 164.575 li
294.408 164.575 li
294.408 164.769 li
294.604 164.769 li
294.604 165.154 li
294.795 165.154 li
294.795 165.348 li
294.988 165.541 li
294.988 165.733 li
295.182 165.927 li
295.182 166.119 li
295.373 166.313 li
295.373 166.506 li
295.568 166.698 li
295.568 167.084 li
295.76 167.277 li
295.76 167.471 li
295.953 167.663 li
295.953 168.05 li
296.146 168.242 li
296.146 168.436 li
296.338 168.629 li
296.338 169.015 li
296.531 169.207 li
296.531 169.787 li
296.725 169.98 li
296.725 170.366 li
296.918 170.366 li
296.918 170.753 li
297.111 170.945 li
297.111 171.332 li
297.303 171.524 li
297.303 171.91 li
297.496 172.104 li
297.496 172.297 li
297.689 172.49 li
297.689 172.683 li
297.883 172.876 li
297.883 173.068 li
298.076 173.068 li
298.076 173.262 li
298.268 173.455 li
298.268 173.647 li
298.461 173.647 li
298.654 173.841 li
299.428 173.841 li
299.428 173.647 li
299.619 173.647 li
299.813 173.455 li
300.006 173.455 li
300.006 173.262 li
300.199 173.262 li
300.199 173.068 li
300.393 173.068 li
300.393 172.876 li
300.584 172.876 li
300.584 172.683 li
300.777 172.683 li
300.777 172.49 li
300.971 172.49 li
300.971 172.297 li
301.164 172.297 li
301.164 172.104 li
301.357 171.91 li
301.357 171.719 li
301.549 171.719 li
301.549 171.332 li
301.742 171.332 li
301.742 171.139 li
301.936 170.945 li
301.936 170.56 li
302.129 170.366 li
302.129 169.98 li
302.322 169.788 li
302.322 169.401 li
302.514 169.208 li
302.514 168.822 li
302.707 168.63 li
302.707 168.242 li
302.9 168.05 li
302.9 167.277 li
303.092 167.084 li
303.092 166.505 li
303.287 166.313 li
303.287 165.733 li
303.479 165.539 li
303.479 164.96 li
303.672 164.768 li
303.672 164.188 li
303.865 163.802 li
303.865 163.029 li
304.057 162.643 li
304.057 162.257 li
304.252 161.871 li
304.252 161.291 li
304.443 161.098 li
304.443 160.519 li
304.637 160.325 li
304.637 159.746 li
304.83 159.554 li
304.83 158.78 li
305.021 158.588 li
305.021 158.202 li
305.217 157.815 li
305.217 157.429 li
305.408 157.236 li
305.408 156.851 li
305.602 156.656 li
305.602 156.464 li
305.795 156.271 li
305.795 155.885 li
305.986 155.692 li
305.986 155.498 li
306.18 155.307 li
306.18 155.112 li
306.373 155.112 li
306.373 154.92 li
306.76 154.533 li
307.338 154.533 li
307.338 154.727 li
307.531 154.727 li
307.531 154.92 li
307.725 154.92 li
307.725 155.112 li
307.918 155.112 li
307.918 155.306 li
308.109 155.498 li
308.109 155.691 li
308.303 155.691 li
308.303 156.077 li
308.496 156.077 li
308.496 156.656 li
308.689 156.656 li
308.689 157.044 li
308.883 157.236 li
308.883 157.622 li
309.074 157.815 li
309.074 158.202 li
309.268 158.395 li
309.268 158.781 li
309.461 158.975 li
309.461 159.554 li
309.654 159.746 li
309.654 160.325 li
309.848 160.519 li
309.848 161.099 li
310.039 161.291 li
310.039 161.677 li
310.232 162.064 li
310.232 162.644 li
310.426 162.836 li
310.426 163.608 li
310.619 163.995 li
310.619 164.574 li
310.813 164.768 li
310.813 165.539 li
311.004 165.733 li
311.004 166.313 li
311.197 166.698 li
311.197 167.664 li
311.391 168.05 li
311.391 168.63 li
311.584 169.016 li
311.584 169.596 li
311.777 169.981 li
311.777 170.754 li
311.969 171.14 li
311.969 171.72 li
312.162 172.106 li
312.162 173.266 li
312.355 173.458 li
312.355 174.23 li
312.549 174.617 li
312.549 175.196 li
312.742 175.583 li
312.742 176.162 li
312.934 176.354 li
312.934 176.74 li
313.127 176.934 li
313.127 177.32 li
313.514 177.706 li
314.094 177.706 li
314.094 177.514 li
314.479 177.128 li
314.479 176.934 li
314.672 176.934 li
314.672 176.741 li
314.865 176.549 li
314.865 176.355 li
315.059 176.355 li
315.059 175.969 li
315.252 175.969 li
315.252 175.584 li
315.443 175.584 li
315.443 175.39 li
315.637 175.197 li
315.637 175.004 li
315.83 175.004 li
315.83 174.618 li
316.023 174.618 li
316.023 174.425 li
316.408 174.039 li
316.408 173.846 li
316.604 173.846 li
316.604 173.653 li
316.795 173.46 li
316.795 173.267 li
316.988 173.074 li
316.988 172.881 li
317.182 172.881 li
317.182 172.688 li
317.373 172.495 li
317.373 172.302 li
317.566 172.109 li
317.566 171.916 li
317.76 171.724 li
317.76 171.337 li
317.953 171.337 li
317.953 170.95 li
318.146 170.758 li
318.146 170.564 li
318.338 170.372 li
318.338 169.985 li
318.531 169.793 li
318.531 169.406 li
318.725 169.214 li
318.725 168.635 li
318.918 168.44 li
318.918 168.055 li
319.111 167.862 li
319.111 167.282 li
319.305 167.09 li
319.305 166.703 li
319.496 166.511 li
319.496 165.932 li
319.689 165.737 li
319.689 164.966 li
319.883 164.772 li
319.883 164.193 li
320.076 164 li
320.076 163.42 li
320.27 163.229 li
320.27 162.842 li
320.461 162.455 li
320.461 161.875 li
320.654 161.489 li
320.654 161.104 li
320.848 160.911 li
320.848 160.332 li
321.041 160.138 li
321.041 159.752 li
321.234 159.559 li
321.234 159.173 li
321.426 158.979 li
321.426 158.593 li
321.619 158.4 li
321.619 158.014 li
321.813 158.014 li
321.813 157.821 li
322.004 157.628 li
322.004 157.436 li
322.199 157.436 li
322.199 157.243 li
322.391 157.243 li
322.391 157.049 li
322.777 157.049 li
322.777 157.243 li
322.971 157.243 li
322.971 157.436 li
323.164 157.436 li
323.164 157.628 li
323.355 157.821 li
323.355 158.208 li
323.549 158.4 li
323.549 158.787 li
323.742 158.979 li
323.742 159.366 li
323.936 159.559 li
323.936 159.945 li
324.127 160.332 li
324.127 160.717 li
324.32 161.104 li
324.32 161.876 li
324.514 162.263 li
324.514 162.842 li
324.707 163.229 li
324.707 163.808 li
324.9 164.193 li
324.9 164.772 li
325.092 165.16 li
325.092 166.126 li
325.285 166.317 li
325.285 166.897 li
325.479 167.091 li
325.479 167.67 li
325.672 167.863 li
325.672 168.249 li
325.865 168.442 li
325.865 168.635 li
326.25 169.021 li
326.25 168.829 li
326.443 168.829 li
326.443 168.635 li
326.637 168.635 li
326.637 168.442 li
326.83 168.249 li
326.83 168.057 li
327.023 167.864 li
327.023 167.284 li
327.215 167.091 li
327.215 166.705 li
327.408 166.512 li
327.408 165.933 li
327.602 165.739 li
327.602 165.353 li
327.795 165.161 li
327.795 164.774 li
327.988 164.581 li
327.988 164.002 li
328.18 163.809 li
328.18 163.423 li
328.373 163.229 li
328.373 162.844 li
328.566 162.65 li
328.566 162.457 li
328.76 162.265 li
328.76 162.071 li
328.951 162.071 li
328.951 161.685 li
329.145 161.685 li
329.145 161.492 li
329.531 161.492 li
329.725 161.3 li
329.725 161.492 li
330.303 161.492 li
330.303 161.685 li
330.689 161.685 li
330.689 161.879 li
331.463 161.879 li
331.463 161.685 li
331.656 161.685 li
331.656 161.492 li
331.848 161.492 li
332.041 161.3 li
332.041 161.106 li
332.234 161.106 li
332.234 160.913 li
332.428 160.913 li
332.428 160.721 li
332.621 160.527 li
332.621 160.335 li
333.006 159.948 li
333.006 159.756 li
333.199 159.756 li
333.199 159.562 li
333.393 159.562 li
333.393 159.37 li
333.586 159.37 li
333.777 159.177 li
334.164 159.177 li
334.164 159.37 li
334.357 159.37 li
334.357 159.562 li
334.551 159.562 li
334.551 159.756 li
334.742 159.756 li
334.742 159.948 li
334.936 160.141 li
334.936 160.335 li
335.129 160.526 li
335.129 160.721 li
335.322 160.913 li
335.322 161.3 li
335.516 161.492 li
335.516 161.879 li
335.707 162.071 li
335.707 162.458 li
335.9 162.65 li
335.9 163.037 li
336.094 163.23 li
336.094 163.616 li
336.287 163.809 li
336.287 164.388 li
336.48 164.582 li
336.48 164.968 li
336.672 165.161 li
336.672 165.547 li
336.865 165.547 li
336.865 165.934 li
337.059 165.934 li
337.059 166.319 li
337.252 166.319 li
337.252 166.512 li
337.445 166.512 li
337.445 166.705 li
337.637 166.705 li
337.637 166.512 li
337.83 166.512 li
338.217 166.126 li
338.217 165.74 li
338.41 165.74 li
338.41 165.354 li
338.602 165.354 li
338.602 164.967 li
338.795 164.774 li
338.795 164.388 li
338.988 164.388 li
338.988 163.809 li
339.182 163.615 li
339.182 163.229 li
339.373 163.037 li
339.373 162.844 li
339.566 162.65 li
339.566 162.265 li
339.76 162.071 li
339.76 161.879 li
339.953 161.686 li
339.953 161.3 li
340.146 161.3 li
340.146 161.106 li
340.531 160.721 li
340.725 160.721 li
340.725 160.526 li
340.918 160.526 li
341.111 160.721 li
341.305 160.721 li
341.305 160.913 li
341.496 161.105 li
341.496 161.3 li
341.689 161.3 li
341.689 161.491 li
341.883 161.685 li
341.883 162.265 li
342.076 162.457 li
342.076 162.844 li
342.27 163.037 li
342.27 163.423 li
342.461 163.615 li
342.461 164.195 li
342.654 164.388 li
342.654 164.968 li
342.848 165.161 li
342.848 165.934 li
343.041 166.319 li
343.041 166.899 li
343.234 167.285 li
343.234 167.864 li
343.426 168.25 li
343.426 168.83 li
343.619 169.216 li
343.619 170.182 li
343.813 170.568 li
343.813 171.341 li
344.006 171.727 li
344.006 172.306 li
344.199 172.693 li
344.199 173.465 li
344.391 173.852 li
344.391 174.431 li
344.584 174.817 li
344.584 175.783 li
344.777 175.976 li
344.777 176.556 li
344.969 176.748 li
344.969 176.941 li
345.162 177.134 li
345.162 177.327 li
345.355 177.521 li
345.355 177.712 li
345.549 177.712 li
345.549 177.905 li
346.127 177.905 li
346.127 177.712 li
346.516 177.712 li
346.516 177.521 li
346.9 177.521 li
346.9 177.327 li
348.252 177.327 li
348.252 177.521 li
348.639 177.521 li
348.832 177.712 li
349.025 177.712 li
349.219 177.905 li
349.41 177.905 li
349.604 178.099 li
350.184 178.099 li
350.184 178.292 li
351.342 178.292 li
351.535 178.485 li
352.115 178.485 li
352.115 178.677 li
352.502 178.677 li
352.502 178.87 li
352.887 178.87 li
352.887 179.063 li
353.08 179.063 li
353.08 179.257 li
353.467 179.257 li
353.467 179.449 li
353.658 179.449 li
353.852 179.643 li
354.045 179.643 li
354.045 179.835 li
354.432 179.835 li
354.432 180.028 li
354.818 180.028 li
354.818 180.222 li
355.59 180.222 li
355.59 180.414 li
356.555 180.414 li
356.555 180.607 li
357.521 180.607 li
357.521 180.8 li
358.295 180.8 li
358.295 180.993 li
359.066 180.993 li
359.066 181.187 li
360.225 181.187 li
360.418 181.379 li
361.77 181.379 li
361.77 181.572 li
363.123 181.572 li
363.314 181.765 li
364.861 181.765 li
364.861 181.958 li
366.793 181.958 li
366.793 182.151 li
368.916 182.151 li
368.916 182.344 li
371.428 182.344 li
371.428 182.537 li
374.131 182.537 li
374.131 182.729 li
377.416 182.729 li
377.609 182.922 li
381.664 182.922 li
381.664 183.116 li
386.688 183.116 li
386.688 183.308 li
393.643 183.308 li
393.834 183.502 li
404.266 183.502 li
404.459 183.694 li
427.639 183.694 li
427.639 183.887 li
463.764 183.887 li
137.402 165.939 mo
137.402 165.36 li
137.595 165.168 li
137.595 164.588 li
137.788 164.396 li
137.788 163.815 li
137.98 163.622 li
137.98 163.043 li
138.173 162.851 li
138.173 162.464 li
138.367 162.078 li
138.367 161.885 li
138.56 161.691 li
138.56 161.306 li
138.752 161.113 li
138.752 160.727 li
138.945 160.727 li
138.945 160.34 li
139.138 160.147 li
139.138 159.954 li
139.332 159.954 li
139.332 159.761 li
139.524 159.761 li
139.524 159.569 li
139.717 159.569 li
139.717 159.375 li
141.262 159.375 li
141.648 158.989 li
141.648 158.796 li
141.842 158.796 li
141.842 158.604 li
142.034 158.41 li
142.034 158.217 li
142.227 158.024 li
142.227 157.639 li
142.42 157.639 li
142.42 157.252 li
142.613 157.059 li
142.613 156.673 li
142.807 156.48 li
142.807 156.093 li
142.999 155.901 li
142.999 155.708 li
143.192 155.515 li
143.192 155.322 li
143.385 155.128 li
143.385 154.937 li
143.578 154.937 li
143.578 154.743 li
144.158 154.743 li
144.351 154.937 li
144.351 155.128 li
144.543 155.128 li
144.543 155.322 li
144.736 155.322 li
144.736 155.515 li
145.123 155.515 li
145.123 155.322 li
145.315 155.322 li
145.315 154.743 li
145.508 154.549 li
145.508 153.97 li
145.702 153.584 li
145.702 152.618 li
145.894 152.038 li
145.894 150.88 li
146.088 150.3 li
146.088 148.948 li
146.28 148.176 li
146.28 145.664 li
146.473 144.893 li
146.473 142.96 li
146.667 141.995 li
146.667 140.063 li
146.859 139.098 li
146.859 137.165 li
147.053 136.2 li
147.053 134.268 li
147.245 133.303 li
147.245 130.405 li
147.438 129.439 li
147.438 127.508 li
147.631 126.735 li
147.631 124.997 li
147.824 124.224 li
147.824 122.679 li
148.017 121.907 li
148.017 120.555 li
148.21 119.783 li
148.21 118.044 li
148.403 117.465 li
148.403 116.499 li
148.596 116.112 li
148.596 115.34 li
148.789 114.954 li
148.789 114.375 li
148.982 114.181 li
148.982 113.602 li
149.174 113.409 li
149.174 113.216 li
149.368 113.216 li
149.368 113.023 li
149.754 113.409 li
149.754 113.603 li
149.947 113.795 li
149.947 114.568 li
150.14 114.76 li
150.14 115.34 li
150.333 115.726 li
150.333 116.499 li
150.525 116.885 li
150.525 117.657 li
150.719 118.237 li
150.719 119.01 li
150.912 119.589 li
150.912 121.134 li
151.105 121.714 li
151.105 122.873 li
151.297 123.645 li
151.297 124.804 li
151.49 125.577 li
151.49 126.928 li
151.683 127.508 li
151.683 129.053 li
151.876 129.825 li
151.876 131.95 li
152.07 132.916 li
152.07 134.461 li
152.262 135.233 li
152.262 136.972 li
152.455 137.744 li
152.455 139.482 li
152.648 140.448 li
152.648 142.187 li
152.841 143.152 li
152.841 145.857 li
153.035 146.822 li
153.035 148.754 li
153.227 149.72 li
153.227 151.651 li
153.419 152.617 li
153.419 154.549 li
153.613 155.515 li
153.613 158.219 li
153.806 159.185 li
153.806 160.729 li
154 161.502 li
154 162.661 li
154.192 163.24 li
154.192 164.206 li
154.385 164.399 li
154.385 164.979 li
154.578 165.365 li
154.578 165.751 li
154.964 165.751 li
155.158 165.558 li
155.158 165.365 li
155.35 165.365 li
155.35 165.173 li
155.542 164.979 li
155.542 164.594 li
155.736 164.4 li
155.736 164.014 li
155.929 164.014 li
155.929 163.627 li
156.123 163.435 li
156.123 163.241 li
156.314 163.049 li
156.314 162.855 li
156.507 162.855 li
156.507 162.47 li
156.701 162.47 li
156.701 162.276 li
156.894 162.276 li
156.894 162.084 li
157.473 161.505 li
157.473 161.312 li
157.666 161.118 li
157.666 160.925 li
157.859 160.925 li
157.859 160.539 li
158.052 160.539 li
158.052 160.152 li
158.246 159.96 li
158.246 159.573 li
158.437 159.381 li
158.437 158.994 li
158.63 158.802 li
158.63 158.415 li
158.824 158.223 li
158.824 157.644 li
159.016 157.45 li
159.016 157.063 li
159.209 156.871 li
159.209 156.291 li
159.402 156.098 li
159.402 155.712 li
159.595 155.52 li
159.595 155.132 li
159.789 154.94 li
159.789 154.554 li
159.981 154.36 li
159.981 154.168 li
160.174 153.976 li
160.174 153.782 li
160.56 153.396 li
161.14 153.396 li
161.14 153.588 li
161.333 153.588 li
161.333 153.782 li
161.526 153.975 li
161.526 154.168 li
161.718 154.168 li
161.718 154.554 li
161.912 154.554 li
161.912 154.94 li
162.105 154.94 li
162.105 155.52 li
162.298 155.52 li
162.298 155.906 li
162.491 155.906 li
162.491 156.291 li
162.683 156.291 li
162.683 156.485 li
162.876 156.678 li
162.876 156.871 li
163.263 157.257 li
163.649 157.257 li
163.649 157.063 li
163.842 157.063 li
163.842 156.871 li
164.035 156.871 li
164.035 156.679 li
164.228 156.485 li
164.228 156.292 li
164.421 156.099 li
164.421 155.906 li
164.614 155.714 li
164.614 155.521 li
164.807 155.327 li
164.807 154.748 li
165 154.748 li
165 154.362 li
165.193 154.168 li
165.193 153.977 li
165.386 153.782 li
165.386 153.59 li
165.579 153.397 li
165.579 153.204 li
165.772 153.011 li
165.772 152.625 li
165.964 152.625 li
165.964 152.432 li
166.158 152.432 li
166.158 152.239 li
166.351 152.239 li
166.543 152.046 li
167.123 152.046 li
167.123 152.239 li
167.509 152.239 li
167.703 152.046 li
167.895 152.046 li
167.895 151.854 li
168.087 151.854 li
168.087 151.467 li
168.281 151.467 li
168.281 151.081 li
168.474 150.888 li
168.474 150.308 li
168.667 150.115 li
168.667 149.729 li
168.86 149.343 li
168.86 148.956 li
169.052 148.57 li
169.052 147.991 li
169.246 147.604 li
169.246 147.025 li
169.439 146.639 li
169.439 145.673 li
169.632 145.287 li
169.632 144.515 li
169.825 144.321 li
169.825 143.549 li
170.017 143.163 li
170.017 142.584 li
170.21 142.197 li
170.21 141.617 li
170.404 141.231 li
170.404 140.459 li
170.596 140.073 li
170.596 139.687 li
170.789 139.301 li
170.789 138.914 li
170.982 138.722 li
170.982 138.335 li
171.175 138.142 li
171.175 137.949 li
171.369 137.756 li
171.369 137.563 li
171.561 137.37 li
171.947 137.37 li
172.14 137.563 li
172.14 137.756 li
172.333 137.949 li
172.333 138.142 li
172.526 138.335 li
172.526 138.528 li
172.72 138.721 li
172.72 139.301 li
172.912 139.493 li
172.912 139.88 li
173.105 140.266 li
173.105 141.038 li
173.298 141.231 li
173.298 142.003 li
173.491 142.197 li
173.491 142.969 li
173.684 143.354 li
173.684 143.935 li
173.876 144.32 li
173.876 145.094 li
174.07 145.479 li
174.07 146.832 li
174.263 147.218 li
174.263 148.184 li
174.456 148.569 li
174.456 149.535 li
174.649 149.922 li
174.649 150.888 li
174.841 151.273 li
174.841 152.239 li
175.035 152.818 li
175.035 154.171 li
175.228 154.751 li
175.228 155.716 li
175.42 156.102 li
175.42 157.067 li
175.613 157.647 li
175.613 158.612 li
175.806 159.192 li
175.806 160.158 li
176 160.545 li
176 162.09 li
176.193 162.476 li
176.193 163.441 li
176.385 163.828 li
176.385 164.793 li
176.578 165.18 li
176.578 165.951 li
176.771 166.339 li
176.771 167.498 li
176.964 167.689 li
176.964 168.27 li
177.157 168.655 li
177.157 169.042 li
177.351 169.429 li
177.351 169.814 li
177.542 170.007 li
177.542 170.201 li
177.736 170.394 li
177.736 170.586 li
177.929 170.779 li
178.122 170.779 li
178.122 170.972 li
178.701 170.972 li
178.701 170.779 li
178.895 170.779 li
179.087 170.586 li
179.281 170.586 li
179.281 170.394 li
179.667 170.394 li
179.667 170.201 li
180.247 170.201 li
180.247 170.007 li
180.632 170.007 li
180.632 169.814 li
180.826 169.814 li
181.211 169.429 li
181.211 169.235 li
181.404 169.235 li
181.404 168.849 li
181.597 168.656 li
181.597 168.27 li
181.791 168.077 li
181.791 167.69 li
181.983 167.498 li
181.983 167.111 li
182.175 166.725 li
182.175 166.146 li
182.369 165.953 li
182.369 164.986 li
182.562 164.602 li
182.562 164.021 li
182.755 163.636 li
182.755 162.863 li
182.948 162.477 li
182.948 161.704 li
183.14 161.318 li
183.14 160.545 li
183.333 160.159 li
183.333 158.808 li
183.527 158.422 li
183.527 157.648 li
183.72 157.068 li
183.72 156.297 li
183.913 155.91 li
183.913 154.945 li
184.105 154.559 li
184.105 153.786 li
184.298 153.399 li
184.298 152.24 li
184.492 151.854 li
184.492 151.082 li
184.685 150.889 li
184.685 150.117 li
184.877 149.73 li
184.877 149.151 li
185.071 148.958 li
185.071 148.379 li
185.263 148.186 li
185.263 147.414 li
185.457 147.22 li
185.457 146.834 li
185.65 146.642 li
185.65 146.255 li
185.842 146.255 li
185.842 145.869 li
186.036 145.869 li
186.036 145.676 li
186.228 145.676 li
186.228 145.482 li
186.421 145.482 li
186.421 145.676 li
186.615 145.676 li
186.807 145.869 li
186.807 146.063 li
187 146.063 li
187 146.642 li
187.193 146.642 li
187.193 147.027 li
187.386 147.22 li
187.386 147.8 li
187.58 147.993 li
187.58 148.573 li
187.772 148.766 li
187.772 149.345 li
187.964 149.73 li
187.964 150.696 li
188.158 151.083 li
188.158 151.855 li
188.351 152.241 li
188.351 153.015 li
188.543 153.594 li
188.543 154.366 li
188.736 154.945 li
188.736 155.911 li
188.929 156.297 li
188.929 157.843 li
189.123 158.422 li
189.123 159.388 li
189.316 159.967 li
189.316 161.126 li
189.508 161.706 li
189.508 162.864 li
189.701 163.444 li
189.701 164.604 li
189.894 165.183 li
189.894 167.114 li
190.087 167.693 li
190.087 168.853 li
190.28 169.433 li
190.28 170.398 li
190.473 170.784 li
190.473 171.557 li
190.666 171.749 li
190.666 172.521 li
190.859 172.715 li
190.859 172.908 li
191.052 172.908 li
191.052 173.102 li
191.438 173.102 li
191.438 172.908 li
191.631 172.908 li
191.631 172.521 li
191.824 172.521 li
191.824 172.329 li
192.017 172.136 li
192.017 171.943 li
192.21 171.943 li
192.21 171.557 li
192.403 171.557 li
192.403 171.364 li
192.596 171.171 li
192.596 170.978 li
192.789 170.978 li
192.789 170.785 li
193.175 170.399 li
193.175 170.205 li
193.369 170.205 li
193.369 170.013 li
193.56 170.013 li
193.56 169.626 li
193.754 169.626 li
193.754 169.24 li
193.947 169.24 li
193.947 168.854 li
194.14 168.662 li
194.14 168.468 li
194.333 168.275 li
194.333 167.695 li
194.525 167.503 li
194.525 166.73 li
194.719 166.538 li
194.719 165.958 li
194.912 165.765 li
194.912 165.185 li
195.104 164.8 li
195.104 164.22 li
195.298 163.833 li
195.298 162.868 li
195.49 162.482 li
195.49 161.709 li
195.684 161.517 li
195.684 160.744 li
195.876 160.357 li
195.876 159.778 li
196.069 159.392 li
196.069 158.813 li
196.263 158.426 li
196.263 157.653 li
196.455 157.268 li
196.455 156.688 li
196.648 156.495 li
196.648 155.916 li
196.841 155.723 li
196.841 155.336 li
197.034 155.144 li
197.034 154.758 li
197.228 154.564 li
197.228 154.179 li
197.419 153.985 li
197.419 153.792 li
197.613 153.6 li
197.613 153.406 li
198 153.406 li
198 153.213 li
198.192 153.213 li
198.192 153.406 li
198.385 153.406 li
198.385 153.6 li
198.578 153.6 li
198.578 153.792 li
198.771 153.985 li
198.771 154.179 li
198.964 154.37 li
198.964 154.564 li
199.157 154.757 li
199.157 155.336 li
199.35 155.529 li
199.35 155.916 li
199.542 156.302 li
199.542 156.688 li
199.736 156.882 li
199.736 157.461 li
199.929 157.653 li
199.929 158.619 li
200.121 158.813 li
200.121 159.392 li
200.315 159.778 li
200.315 160.357 li
200.507 160.55 li
200.507 161.323 li
200.701 161.516 li
200.701 162.095 li
200.894 162.481 li
200.894 163.254 li
201.085 163.446 li
201.085 163.833 li
201.28 164.026 li
201.28 164.412 li
201.472 164.605 li
201.472 164.99 li
201.666 164.99 li
201.666 165.185 li
201.859 165.377 li
202.245 165.377 li
202.245 165.185 li
202.438 165.185 li
202.438 164.99 li
202.63 164.798 li
202.63 164.605 li
202.824 164.412 li
202.824 164.026 li
203.016 164.026 li
203.016 163.641 li
203.208 163.446 li
203.208 163.254 li
203.403 163.062 li
203.403 162.675 li
203.595 162.675 li
203.595 162.288 li
203.789 162.288 li
203.789 161.902 li
203.981 161.902 li
203.981 161.71 li
204.56 161.71 li
204.753 161.902 li
204.753 162.095 li
204.947 162.095 li
204.947 162.482 li
205.14 162.675 li
205.14 162.867 li
205.333 163.061 li
205.333 163.641 li
205.525 163.833 li
205.525 164.412 li
205.718 164.605 li
205.718 165.185 li
205.912 165.378 li
205.912 165.764 li
206.104 165.957 li
206.104 166.344 li
206.297 166.536 li
206.297 166.729 li
206.49 166.922 li
206.683 166.922 li
206.683 166.729 li
206.876 166.536 li
206.876 166.344 li
207.069 166.149 li
207.069 165.57 li
207.262 165.185 li
207.262 164.605 li
207.455 164.219 li
207.455 163.06 li
207.648 162.674 li
207.648 161.708 li
207.841 161.321 li
207.841 160.162 li
208.034 159.776 li
208.034 158.811 li
208.227 158.231 li
208.227 157.266 li
208.419 156.687 li
208.419 155.141 li
208.613 154.562 li
208.613 153.596 li
208.806 153.209 li
208.806 152.244 li
208.999 151.664 li
208.999 150.893 li
209.192 150.313 li
209.192 149.153 li
209.384 148.767 li
209.384 147.995 li
209.577 147.802 li
209.577 147.029 li
209.771 146.837 li
209.771 146.258 li
209.962 145.871 li
209.962 145.484 li
210.157 145.292 li
210.157 144.712 li
210.349 144.52 li
210.349 144.326 li
210.542 144.134 li
210.542 143.939 li
210.736 143.939 li
210.736 143.747 li
210.927 143.747 li
210.927 143.555 li
211.121 143.555 li
211.314 143.747 li
211.507 143.747 li
211.507 143.939 li
211.701 143.939 li
211.701 144.134 li
211.892 144.326 li
211.892 144.52 li
212.085 144.712 li
212.085 145.099 li
212.279 145.099 li
212.279 145.484 li
212.472 145.678 li
212.472 145.87 li
212.665 146.063 li
212.665 146.45 li
212.857 146.643 li
212.857 146.836 li
213.05 147.028 li
213.05 147.608 li
213.244 147.801 li
213.244 148.188 li
213.437 148.573 li
213.437 148.96 li
213.629 149.152 li
213.629 149.539 li
213.822 149.731 li
213.822 150.504 li
214.015 150.697 li
214.015 151.276 li
214.208 151.47 li
214.208 152.049 li
214.402 152.242 li
214.402 152.822 li
214.594 153.015 li
214.594 153.594 li
214.787 153.98 li
214.787 154.945 li
214.98 155.139 li
214.98 155.911 li
215.173 156.297 li
215.173 157.069 li
215.367 157.263 li
215.367 158.035 li
215.559 158.615 li
215.559 159.387 li
215.751 159.773 li
215.751 161.125 li
215.945 161.512 li
215.945 162.478 li
216.138 163.057 li
216.138 164.022 li
216.332 164.602 li
216.332 165.568 li
216.523 166.147 li
216.523 167.307 li
216.716 167.886 li
216.716 169.432 li
216.91 170.011 li
216.91 170.782 li
217.102 171.169 li
217.102 171.748 li
217.296 171.941 li
217.296 172.135 li
217.681 172.135 li
217.681 171.748 li
217.875 171.555 li
217.875 170.976 li
218.068 170.782 li
218.068 170.203 li
218.261 169.816 li
218.261 169.045 li
218.454 168.658 li
218.454 167.307 li
218.646 166.92 li
218.646 165.955 li
218.839 165.568 li
218.839 164.603 li
219.033 164.217 li
219.033 163.251 li
219.225 162.672 li
219.225 161.705 li
219.418 161.319 li
219.418 159.967 li
219.611 159.388 li
219.611 158.615 li
219.804 158.229 li
219.804 157.457 li
219.998 156.878 li
219.998 156.298 li
220.19 155.912 li
220.19 155.139 li
220.383 154.753 li
220.383 153.98 li
220.576 153.594 li
220.576 153.208 li
220.769 152.822 li
220.769 152.436 li
220.962 152.242 li
220.962 151.856 li
221.155 151.663 li
221.155 151.277 li
221.348 151.277 li
221.348 150.891 li
221.541 150.698 li
221.541 150.506 li
221.734 150.506 li
221.734 150.312 li
222.506 150.312 li
222.506 150.506 li
222.699 150.506 li
222.699 150.698 li
222.892 150.698 li
222.892 150.891 li
223.085 150.891 li
223.085 151.277 li
223.278 151.277 li
223.278 151.663 li
223.471 151.663 li
223.471 151.856 li
223.664 152.05 li
223.664 152.242 li
223.857 152.435 li
223.857 152.822 li
224.049 152.822 li
224.049 153.401 li
224.244 153.594 li
224.244 153.786 li
224.436 153.98 li
224.436 154.366 li
224.628 154.559 li
224.628 154.945 li
224.822 155.138 li
224.822 155.331 li
225.014 155.524 li
225.014 156.104 li
225.208 156.296 li
225.208 156.684 li
225.4 157.068 li
225.4 157.455 li
225.593 157.648 li
225.593 158.034 li
225.787 158.228 li
225.787 158.613 li
225.979 158.807 li
225.979 159.579 li
226.173 159.771 li
226.173 160.351 li
226.365 160.545 li
226.365 160.931 li
226.558 161.123 li
226.558 161.703 li
226.751 161.896 li
226.751 162.476 li
226.944 162.669 li
226.944 163.441 li
227.137 163.634 li
227.137 164.213 li
227.33 164.406 li
227.33 164.985 li
227.523 165.179 li
227.523 165.758 li
227.716 165.951 li
227.716 166.724 li
227.909 166.916 li
227.909 167.496 li
228.102 167.688 li
228.102 168.269 li
228.294 168.462 li
228.294 169.041 li
228.488 169.233 li
228.488 169.619 li
228.681 170.007 li
228.681 170.586 li
228.874 170.972 li
228.874 171.358 li
229.067 171.551 li
229.067 172.131 li
229.259 172.324 li
229.259 172.71 li
229.453 172.902 li
229.453 173.289 li
229.646 173.675 li
229.646 174.255 li
229.838 174.447 li
229.838 174.834 li
230.032 175.027 li
230.032 175.219 li
230.224 175.413 li
230.224 175.799 li
230.417 175.992 li
230.417 176.378 li
230.61 176.378 li
230.61 176.765 li
230.802 176.957 li
230.802 177.15 li
230.996 177.343 li
230.996 177.536 li
231.189 177.729 li
231.189 177.922 li
231.382 177.922 li
231.382 178.115 li
231.575 178.308 li
231.575 178.5 li
231.767 178.5 li
231.767 178.694 li
231.96 178.694 li
231.96 178.887 li
232.154 178.887 li
232.154 179.08 li
232.347 179.08 li
232.347 179.272 li
232.734 179.659 li
232.925 179.659 li
232.925 179.853 li
233.12 179.853 li
233.12 180.045 li
233.312 180.045 li
233.312 180.237 li
233.891 180.817 li
233.891 181.01 li
234.084 181.01 li
234.084 181.203 li
234.278 181.203 li
234.278 181.396 li
234.664 181.783 li
234.856 181.783 li
234.856 181.975 li
235.243 181.975 li
235.243 182.168 li
235.628 182.168 li
235.628 181.975 li
236.208 181.975 li
236.208 181.783 li
236.788 181.783 li
236.788 181.589 li
240.072 181.589 li
240.072 181.783 li
240.264 181.783 li
240.264 181.975 li
240.844 181.975 li
240.844 181.783 li
241.037 181.783 li
241.037 181.589 li
241.23 181.396 li
241.23 181.01 li
241.422 180.817 li
241.422 180.431 li
241.615 180.238 li
241.615 179.272 li
241.809 179.079 li
241.809 178.307 li
242.002 177.921 li
242.002 177.147 li
242.193 176.762 li
242.193 175.99 li
242.387 175.604 li
242.387 174.638 li
242.58 174.059 li
242.58 172.513 li
242.773 172.127 li
242.773 170.968 li
242.967 170.389 li
242.967 169.423 li
243.158 168.844 li
243.158 167.685 li
243.352 167.298 li
243.352 166.139 li
243.545 165.559 li
243.545 164.015 li
243.738 163.435 li
243.738 162.47 li
243.932 161.89 li
243.932 160.924 li
244.123 160.538 li
244.123 159.572 li
244.316 159.186 li
244.316 158.22 li
244.51 157.834 li
244.51 156.676 li
244.703 156.481 li
244.703 155.71 li
244.896 155.518 li
244.896 154.938 li
245.088 154.551 li
245.088 153.971 li
245.281 153.778 li
245.281 153.393 li
245.475 153.007 li
245.475 152.233 li
245.668 152.041 li
245.668 151.461 li
245.861 151.268 li
245.861 150.496 li
246.053 150.303 li
246.053 149.53 li
246.246 148.95 li
246.246 147.6 li
246.439 147.02 li
246.439 145.861 li
246.633 145.088 li
246.633 143.736 li
246.826 142.964 li
246.826 141.418 li
247.018 140.646 li
247.018 138.715 li
247.211 137.942 li
247.211 135.045 li
247.404 133.886 li
247.404 131.954 li
247.598 130.988 li
247.598 128.863 li
247.791 127.704 li
247.791 125.773 li
247.982 124.614 li
247.982 122.682 li
248.176 121.717 li
248.176 118.819 li
248.369 117.853 li
248.369 116.114 li
248.563 115.149 li
248.563 113.604 li
248.756 112.832 li
248.756 111.286 li
248.947 110.707 li
248.947 109.355 li
249.141 108.775 li
249.141 107.23 li
249.334 106.844 li
249.334 105.878 li
0.25 159.759 mo
0.25 160.725 li
0.442383 161.689 li
0.442383 163.235 li
0.635742 164.008 li
0.635742 166.133 li
0.828125 166.712 li
0.828125 167.871 li
1.021 168.45 li
1.021 169.609 li
1.21436 169.995 li
1.21436 170.961 li
1.40723 171.347 li
1.40723 172.12 li
1.60059 172.506 li
1.60059 173.472 li
1.79297 173.665 li
1.79297 174.244 li
1.98584 174.437 li
1.98584 174.823 li
2.1792 175.209 li
2.1792 175.402 li
2.37158 175.596 li
2.37158 175.981 li
2.56445 176.175 li
2.56445 176.561 li
2.75781 176.561 li
2.75781 176.754 li
2.95068 176.947 li
2.95068 177.14 li
3.14355 177.14 li
3.14355 177.333 li
3.33643 177.333 li
3.52881 177.525 li
4.68799 177.525 li
4.68799 177.333 li
5.07422 177.333 li
5.07422 177.14 li
5.2666 177.14 li
5.45947 176.947 li
5.65186 176.947 li
5.65186 176.754 li
5.84424 176.754 li
6.03711 176.561 li
6.22949 176.561 li
6.22949 176.368 li
6.42236 176.175 li
6.61523 176.175 li
6.61523 175.982 li
6.80762 175.982 li
6.80762 175.789 li
7.00049 175.789 li
7.00049 175.596 li
7.19287 175.596 li
7.19287 175.403 li
7.38574 175.403 li
7.38574 175.21 li
7.57861 175.21 li
7.57861 175.018 li
7.77148 175.018 li
7.77148 174.824 li
8.15771 174.438 li
8.15771 174.245 li
8.35059 174.245 li
8.35059 174.052 li
8.54297 174.052 li
8.54297 173.859 li
8.73584 173.859 li
8.73584 173.667 li
8.92822 173.473 li
8.92822 173.28 li
9.12061 173.28 li
9.12061 173.087 li
9.31299 172.895 li
9.31299 172.702 li
9.50586 172.702 li
9.50586 172.508 li
9.69873 172.508 li
9.69873 172.316 li
9.89111 172.123 li
9.89111 171.93 li
10.084 171.736 li
10.084 171.543 li
10.2764 171.543 li
10.2764 171.352 li
10.4692 171.158 li
10.4692 170.965 li
10.6616 170.965 li
10.6616 170.771 li
10.855 170.579 li
10.855 170.387 li
11.0479 170.193 li
11.0479 170 li
11.2402 170 li
11.2402 169.614 li
11.4331 169.614 li
11.4331 169.421 li
11.6255 169.229 li
11.6255 169.035 li
11.8184 168.842 li
11.8184 168.649 li
12.0107 168.456 li
12.0107 168.264 li
12.2036 168.07 li
12.2036 167.877 li
12.3965 167.877 li
12.3965 167.491 li
12.5889 167.491 li
12.5889 167.105 li
12.7817 167.105 li
12.7817 166.718 li
12.9741 166.526 li
12.9741 166.333 li
13.167 166.14 li
13.167 165.947 li
13.3594 165.753 li
13.3594 165.562 li
13.5522 165.562 li
13.5522 165.175 li
13.7446 165.175 li
13.7446 164.788 li
13.938 164.596 li
13.938 164.403 li
14.1309 164.209 li
14.1309 164.017 li
14.3232 163.823 li
14.3232 163.631 li
14.5161 163.438 li
14.5161 163.051 li
14.7085 162.858 li
14.7085 162.666 li
14.9014 162.473 li
14.9014 162.279 li
15.0938 162.086 li
15.0938 161.895 li
15.2866 161.701 li
15.2866 161.508 li
15.479 161.315 li
15.479 160.93 li
15.6714 160.93 li
15.6714 160.542 li
15.8643 160.542 li
15.8643 160.156 li
16.0566 160.156 li
16.0566 159.771 li
16.2495 159.771 li
16.2495 159.384 li
16.4419 159.19 li
16.4419 158.805 li
16.6348 158.805 li
16.6348 158.418 li
16.8271 158.418 li
16.8271 158.032 li
17.021 158.032 li
17.021 157.646 li
17.2134 157.646 li
17.2134 157.26 li
17.4063 157.26 li
17.4063 156.874 li
17.5986 156.681 li
17.5986 156.487 li
17.791 156.295 li
17.791 156.103 li
17.9839 155.909 li
17.9839 155.716 li
18.1763 155.522 li
18.1763 155.33 li
18.3691 155.138 li
18.3691 154.751 li
18.562 154.558 li
18.562 154.365 li
18.7544 154.172 li
18.7544 153.979 li
18.9473 153.786 li
18.9473 153.593 li
19.1396 153.399 li
19.1396 153.014 li
19.3325 153.014 li
19.3325 152.821 li
19.5249 152.628 li
19.5249 152.436 li
19.7178 152.242 li
19.7178 152.049 li
19.9102 151.856 li
19.9102 151.663 li
20.1035 151.471 li
20.1035 151.084 li
20.2964 151.084 li
20.2964 150.891 li
20.4888 150.698 li
20.4888 150.506 li
20.6816 150.312 li
20.6816 150.119 li
20.874 149.926 li
20.874 149.733 li
21.0669 149.541 li
21.0669 149.348 li
21.2593 149.154 li
21.2593 148.961 li
21.4521 148.769 li
21.4521 148.576 li
21.6445 148.576 li
21.6445 148.189 li
21.8374 148.189 li
21.8374 147.996 li
22.0298 147.804 li
22.0298 147.61 li
22.2227 147.418 li
22.2227 147.225 li
22.415 147.031 li
22.415 146.839 li
22.6074 146.839 li
22.6074 146.646 li
22.8003 146.453 li
22.8003 146.26 li
22.9927 146.26 li
22.9927 145.874 li
23.1865 145.874 li
23.1865 145.681 li
23.3794 145.487 li
23.3794 145.295 li
23.5718 145.295 li
23.5718 145.102 li
23.7646 144.909 li
23.7646 144.716 li
23.957 144.523 li
23.957 144.33 li
24.1494 144.33 li
24.1494 144.137 li
24.3418 144.137 li
24.3418 143.944 li
24.5347 143.751 li
24.5347 143.559 li
24.7275 143.559 li
24.7275 143.365 li
24.9199 143.172 li
24.9199 142.979 li
25.1128 142.979 li
25.1128 142.787 li
25.3052 142.787 li
25.3052 142.594 li
25.498 142.594 li
25.498 142.4 li
25.6904 142.207 li
25.6904 142.015 li
25.8833 142.015 li
25.8833 141.822 li
26.0757 141.822 li
26.0757 141.629 li
26.269 141.629 li
26.269 141.436 li
26.4619 141.436 li
26.4619 141.242 li
26.6543 141.242 li
26.6543 141.05 li
27.6201 140.084 li
27.6201 139.891 li
27.813 139.891 li
28.1987 139.505 li
28.3911 139.505 li
28.3911 139.312 li
28.584 139.312 li
28.584 139.119 li
28.7764 139.119 li
28.7764 138.926 li
28.9692 138.926 li
29.1621 138.732 li
29.3545 138.732 li
29.3545 138.54 li
29.5474 138.54 li
29.5474 138.348 li
29.7397 138.348 li
29.9321 138.154 li
30.125 138.154 li
30.125 137.961 li
30.3174 137.961 li
30.5112 137.768 li
30.7036 137.768 li
30.7036 137.575 li
31.0894 137.575 li
31.0894 137.383 li
31.4756 137.383 li
31.4756 137.189 li
31.8618 137.189 li
31.8618 136.996 li
32.248 136.996 li
32.248 136.804 li
32.6338 136.804 li
32.6338 136.61 li
33.02 136.61 li
33.02 136.418 li
33.4058 136.418 li
33.4058 136.225 li
33.792 136.225 li
33.9844 136.031 li
34.3706 136.031 li
34.3706 135.839 li
34.7563 135.839 li
34.7563 135.646 li
35.3359 135.646 li
35.3359 135.453 li
35.9155 135.453 li
35.9155 135.26 li
36.4951 135.26 li
36.4951 135.067 li
37.0747 135.067 li
37.2671 134.874 li
37.8467 134.874 li
37.8467 134.681 li
38.6187 134.681 li
38.6187 134.488 li
39.1982 134.488 li
39.3911 134.295 li
39.9707 134.295 li
40.1631 134.103 li
41.1284 134.103 li
41.1284 133.909 li
42.2876 133.909 li
42.2876 133.716 li
43.0596 133.716 li
43.0596 133.523 li
43.4458 133.523 li
43.6387 133.33 li
44.2183 133.33 li
44.2183 133.138 li
44.9902 133.138 li
44.9902 132.944 li
45.5698 132.944 li
45.5698 133.138 li
46.1489 133.138 li
46.3423 133.33 li
46.7285 133.33 li
46.7285 133.523 li
46.9209 133.523 li
47.1138 133.716 li
47.3062 133.716 li
47.3062 133.909 li
47.6924 133.909 li
47.6924 134.103 li
47.8853 134.103 li
48.0776 134.295 li
48.2705 134.295 li
48.4629 134.488 li
48.6553 134.488 li
48.8481 134.681 li
49.2344 134.681 li
49.2344 134.874 li
50.3931 134.874 li
50.3931 135.067 li
51.5522 135.067 li
51.5522 134.874 li
54.4497 134.874 li
54.4497 134.681 li
55.9946 134.681 li
55.9946 134.488 li
57.3462 134.488 li
57.3462 134.295 li
60.437 134.295 li
60.437 134.103 li
61.4028 134.103 li
61.4028 133.909 li
63.1411 133.909 li
63.1411 134.103 li
65.0728 134.103 li
65.0728 133.909 li
65.459 133.909 li
65.6519 133.716 li
66.0376 133.716 li
66.0376 133.523 li
67.583 133.523 li
67.583 133.716 li
67.9688 133.716 li
67.9688 133.909 li
68.355 133.909 li
68.355 134.103 li
68.7417 134.103 li
68.7417 134.295 li
69.3213 134.295 li
69.3213 134.103 li
69.707 134.103 li
69.707 133.909 li
69.8999 133.909 li
69.8999 133.716 li
70.0923 133.716 li
70.0923 133.523 li
70.2852 133.523 li
70.2852 133.33 li
70.4775 133.33 li
70.4775 133.138 li
70.6704 133.138 li
70.6704 132.944 li
70.8633 132.944 li
70.8633 132.751 li
71.0557 132.751 li
71.248 132.559 li
71.8276 132.559 li
72.5996 133.331 li
72.5996 133.523 li
72.792 133.523 li
72.792 133.717 li
72.9849 133.91 li
72.9849 134.104 li
73.1777 134.104 li
73.1777 134.296 li
73.3701 134.488 li
73.563 134.488 li
73.563 134.682 li
73.9487 134.682 li
74.335 134.296 li
74.335 134.103 li
74.5283 134.103 li
74.5283 133.716 li
74.7212 133.716 li
74.7212 133.137 li
74.9136 132.944 li
74.9136 132.751 li
75.106 132.559 li
75.106 132.172 li
75.2988 131.979 li
75.2988 131.786 li
75.4917 131.593 li
75.4917 131.207 li
75.6851 131.014 li
75.6851 130.82 li
75.8779 130.628 li
75.8779 130.435 li
76.0708 130.435 li
76.0708 130.242 li
76.4575 130.242 li
76.6499 130.435 li
76.6499 130.628 li
76.8433 130.82 li
76.8433 131.014 li
77.0356 131.207 li
77.0356 131.593 li
77.2295 131.786 li
77.2295 132.172 li
77.4219 132.364 li
77.4219 132.751 li
77.6143 132.944 li
77.6143 133.716 li
77.8081 133.91 li
77.8081 134.296 li
78.0005 134.488 li
78.0005 134.875 li
78.1938 135.068 li
78.1938 135.261 li
78.3862 135.454 li
78.5791 135.454 li
78.7729 135.261 li
78.7729 135.068 li
78.9653 134.875 li
78.9653 134.296 li
79.1587 134.103 li
79.1587 133.523 li
79.3511 133.137 li
79.3511 131.978 li
79.5439 131.592 li
79.5439 130.818 li
79.7378 130.433 li
79.7378 129.467 li
79.9302 129.081 li
79.9302 128.309 li
80.1235 127.922 li
80.1235 127.15 li
80.3159 126.764 li
80.3159 125.798 li
80.5088 125.412 li
80.5088 125.025 li
80.7021 124.833 li
80.7021 124.446 li
81.0884 124.06 li
81.0884 124.253 li
81.2808 124.253 li
81.2808 124.64 li
81.4741 124.833 li
81.4741 125.412 li
81.6665 125.604 li
81.6665 126.377 li
81.8604 126.764 li
81.8604 127.535 li
82.0532 127.922 li
82.0532 128.888 li
82.2456 129.467 li
82.2456 131.013 li
82.439 131.592 li
82.439 132.558 li
82.6313 132.944 li
82.6313 133.716 li
82.8252 134.103 li
82.8252 134.488 li
83.0181 134.682 li
83.2109 134.488 li
83.2109 133.716 li
83.4038 133.137 li
83.4038 131.978 li
83.5962 131.206 li
83.5962 129.66 li
83.79 128.694 li
83.79 126.763 li
83.9824 125.797 li
83.9824 122.514 li
84.1758 121.354 li
84.1758 118.843 li
84.3687 117.685 li
84.3687 115.366 li
84.561 114.208 li
84.561 112.083 li
84.7544 110.924 li
84.7544 108.992 li
84.9468 108.026 li
84.9468 105.322 li
85.1406 104.356 li
85.1406 103.004 li
85.3335 102.232 li
85.3335 100.88 li
85.5259 100.494 li
85.5259 99.335 li
85.7192 98.9487 li
85.7192 98.3696 li
85.9116 97.9834 li
85.9116 97.4038 li
86.1055 97.2104 li
86.1055 97.0176 li
86.2983 97.0176 li
86.4907 97.2104 li
86.4907 97.4038 li
86.6841 97.5967 li
86.6841 97.9824 li
86.8765 98.1758 li
86.8765 99.1416 li
87.0703 99.5273 li
87.0703 100.301 li
87.2627 100.687 li
87.2627 101.652 li
87.4551 102.232 li
87.4551 103.197 li
87.6489 103.776 li
87.6489 104.936 li
87.8413 105.515 li
87.8413 107.253 li
88.0347 108.026 li
88.0347 109.378 li
88.2271 109.958 li
88.2271 111.502 li
88.4199 112.082 li
88.4199 113.627 li
88.6138 114.4 li
88.6138 116.718 li
88.8062 117.49 li
88.8062 119.229 li
88.9995 120.001 li
88.9995 121.546 li
89.1919 122.512 li
89.1919 124.25 li
89.3857 125.022 li
89.3857 126.761 li
89.5786 127.534 li
89.5786 130.237 li
89.771 131.203 li
89.771 132.941 li
89.9644 133.907 li
89.9644 135.646 li
90.1567 136.612 li
90.1567 138.351 li
90.3506 139.316 li
90.3506 141.055 li
90.543 142.021 li
90.543 144.724 li
90.7354 145.689 li
90.7354 147.428 li
90.9292 148.395 li
90.9292 150.133 li
91.1216 150.905 li
91.1216 152.644 li
91.3149 153.609 li
91.3149 155.154 li
91.5073 156.12 li
91.5073 158.438 li
91.7002 159.211 li
91.7002 160.756 li
91.894 161.528 li
91.894 162.88 li
92.0864 163.652 li
92.0864 164.812 li
92.2798 165.391 li
92.2798 166.55 li
92.4722 167.129 li
92.4722 168.481 li
92.665 168.867 li
92.665 169.64 li
92.8589 169.833 li
92.8589 170.605 li
93.0513 170.799 li
93.0513 171.185 li
93.2446 171.57 li
93.2446 171.956 li
93.437 172.15 li
93.437 172.343 li
94.0166 172.343 li
94.0166 172.15 li
94.2095 171.956 li
94.2095 171.377 li
94.4028 171.185 li
94.4028 170.605 li
94.5952 170.412 li
94.5952 169.64 li
94.7886 169.253 li
94.7886 168.48 li
94.9814 168.094 li
94.9814 167.322 li
95.1743 166.743 li
95.1743 165.391 li
95.3672 164.812 li
95.3672 163.652 li
95.5601 163.073 li
95.5601 161.914 li
95.7534 161.334 li
95.7534 160.176 li
95.9463 159.596 li
95.9463 158.437 li
96.1396 157.857 li
96.1396 156.119 li
96.332 155.539 li
96.332 154.188 li
96.5249 153.608 li
96.5249 152.449 li
96.7183 151.869 li
96.7183 150.904 li
96.9111 150.325 li
96.9111 149.166 li
97.1045 148.779 li
97.1045 147.233 li
97.2969 146.848 li
97.2969 145.882 li
97.4897 145.496 li
97.4897 144.724 li
97.6831 144.337 li
97.6831 143.565 li
97.8755 143.18 li
97.8755 142.213 li
98.0693 142.021 li
98.0693 141.44 li
98.2617 141.248 li
98.2617 140.669 li
98.4546 140.475 li
98.4546 140.282 li
98.6475 140.089 li
98.6475 139.896 li
98.8403 139.704 li
98.8403 139.51 li
99.2266 139.51 li
99.6133 139.896 li
99.6133 140.09 li
99.8062 140.282 li
99.8062 140.861 li
99.9985 141.056 li
99.9985 141.635 li
100.192 141.827 li
100.192 142.407 li
100.385 142.793 li
100.385 143.372 li
100.578 143.759 li
100.578 144.531 li
100.771 144.918 li
100.771 146.27 li
100.963 146.656 li
100.963 147.621 li
101.157 148.201 li
101.157 149.166 li
101.349 149.553 li
101.349 150.518 li
101.543 150.905 li
101.543 151.677 li
101.735 152.063 li
101.735 152.836 li
101.928 153.028 li
101.928 153.222 li
102.122 153.222 li
102.122 152.835 li
102.314 152.643 li
102.314 152.063 li
102.507 151.483 li
102.507 149.745 li
102.7 149.166 li
102.7 147.621 li
102.894 146.848 li
102.894 144.916 li
103.086 143.95 li
103.086 142.019 li
103.279 140.859 li
103.279 138.735 li
103.472 137.576 li
103.472 134.293 li
103.665 133.134 li
103.665 130.815 li
103.858 129.657 li
103.858 127.532 li
104.051 126.373 li
104.051 124.249 li
104.244 123.283 li
104.244 121.352 li
104.437 120.385 li
104.437 117.875 li
104.63 117.102 li
104.63 115.557 li
104.823 114.784 li
104.823 113.432 li
105.016 112.853 li
105.016 111.887 li
105.208 111.308 li
105.208 110.535 li
105.402 110.148 li
105.402 109.183 li
105.594 108.797 li
105.594 108.411 li
105.788 108.411 li
105.788 108.025 li
106.174 108.025 li
106.367 108.217 li
106.367 108.604 li
106.56 108.797 li
106.56 109.183 li
106.752 109.569 li
106.752 110.148 li
106.945 110.341 li
106.945 111.114 li
107.139 111.5 li
107.139 112.659 li
107.332 113.045 li
107.332 114.011 li
107.524 114.59 li
107.524 115.557 li
107.717 115.942 li
107.717 117.102 li
107.91 117.681 li
107.91 118.84 li
108.104 119.419 li
108.104 121.352 li
108.296 121.931 li
108.296 123.283 li
108.489 123.862 li
108.489 125.214 li
108.682 125.986 li
108.682 127.338 li
108.875 128.111 li
108.875 129.656 li
109.068 130.235 li
109.068 132.553 li
109.261 133.325 li
109.261 134.678 li
109.454 135.45 li
109.454 136.995 li
109.647 137.768 li
109.647 139.313 li
109.84 139.893 li
109.84 141.438 li
110.033 142.209 li
110.033 144.142 li
110.226 144.914 li
110.226 146.073 li
110.419 146.652 li
110.419 147.812 li
110.612 148.392 li
110.612 149.357 li
110.805 149.937 li
110.805 150.708 li
110.998 151.096 li
110.998 152.061 li
111.19 152.254 li
111.19 152.64 li
111.384 152.833 li
111.384 153.025 li
111.77 153.411 li
112.156 153.025 li
112.156 152.833 li
112.349 152.833 li
112.349 152.64 li
112.542 152.447 li
112.542 152.254 li
112.734 152.061 li
112.734 151.675 li
112.928 151.481 li
112.928 151.289 li
113.12 151.289 li
113.12 150.902 li
113.314 150.902 li
113.314 150.709 li
113.507 150.709 li
113.507 150.517 li
113.699 150.517 li
113.699 150.324 li
114.279 150.324 li
114.279 150.517 li
114.472 150.517 li
114.472 150.709 li
114.665 150.709 li
114.665 151.096 li
114.858 151.096 li
114.858 151.482 li
115.051 151.675 li
115.051 151.868 li
115.244 152.061 li
115.244 152.447 li
115.437 152.641 li
115.437 153.026 li
115.629 153.219 li
115.629 153.992 li
115.823 154.185 li
115.823 154.764 li
116.016 154.957 li
116.016 155.536 li
116.209 155.923 li
116.209 156.502 li
116.402 156.695 li
116.402 157.66 li
116.594 158.048 li
116.594 158.819 li
116.788 159.206 li
116.788 159.785 li
116.98 160.172 li
116.98 160.944 li
117.174 161.33 li
117.174 162.103 li
117.366 162.489 li
117.366 163.841 li
117.559 164.227 li
117.559 165 li
117.752 165.386 li
117.752 166.352 li
117.945 166.737 li
117.945 167.703 li
118.139 168.09 li
118.139 169.055 li
118.331 169.635 li
118.331 170.986 li
118.524 171.372 li
118.524 172.339 li
118.717 172.726 li
118.717 173.305 li
118.91 173.689 li
118.91 174.27 li
119.103 174.463 li
119.103 174.849 li
119.296 175.042 li
119.296 175.234 li
119.488 175.234 li
119.488 175.428 li
119.682 175.428 li
120.261 174.849 li
120.261 174.654 li
120.454 174.463 li
120.454 174.27 li
120.647 174.27 li
120.647 174.076 li
120.84 173.884 li
120.84 173.689 li
121.033 173.689 li
121.033 173.498 li
121.226 173.498 li
121.226 173.305 li
121.806 173.305 li
121.806 173.498 li
121.999 173.498 li
121.999 173.689 li
122.191 173.884 li
122.191 174.076 li
122.384 174.076 li
122.384 174.463 li
122.577 174.656 li
122.577 175.042 li
122.771 175.234 li
122.771 175.621 li
122.963 175.813 li
122.963 176.586 li
123.156 176.779 li
123.156 177.359 li
123.349 177.552 li
123.349 177.938 li
123.542 178.131 li
123.542 178.324 li
123.735 178.324 li
123.735 178.517 li
123.927 178.517 li
123.927 178.324 li
124.121 178.131 li
124.121 177.938 li
124.314 177.745 li
124.314 177.552 li
124.507 177.359 li
124.507 176.973 li
124.7 176.587 li
124.7 176.201 li
124.892 176.008 li
124.892 175.235 li
125.086 174.849 li
125.086 174.463 li
125.279 174.076 li
125.279 173.497 li
125.472 173.305 li
125.472 172.726 li
125.665 172.531 li
125.665 171.759 li
125.857 171.373 li
125.857 170.987 li
126.051 170.794 li
126.051 170.214 li
126.243 170.021 li
126.243 169.636 li
126.437 169.442 li
126.437 169.056 li
126.629 168.863 li
126.629 168.284 li
126.822 168.09 li
126.822 167.898 li
127.015 167.705 li
127.015 167.512 li
127.401 167.125 li
127.401 166.933 li
127.594 166.933 li
127.787 166.74 li
128.174 166.74 li
128.174 166.933 li
128.366 166.933 li
128.56 167.125 li
128.56 167.318 li
128.752 167.318 li
128.752 167.512 li
128.946 167.512 li
128.946 167.705 li
129.138 167.896 li
129.138 168.09 li
129.331 168.09 li
129.331 168.283 li
129.524 168.477 li
129.524 168.863 li
129.717 168.863 li
129.717 169.249 li
129.911 169.249 li
129.911 169.441 li
130.103 169.635 li
130.103 169.827 li
130.295 170.021 li
130.295 170.407 li
130.489 170.6 li
130.489 170.793 li
130.682 170.985 li
130.682 171.178 li
130.875 171.372 li
130.875 171.564 li
131.067 171.564 li
131.067 171.95 li
131.261 171.95 li
131.261 172.337 li
131.454 172.337 li
131.454 172.53 li
131.646 172.722 li
131.646 172.916 li
131.84 172.916 li
131.84 173.108 li
132.226 173.495 li
132.226 173.688 li
132.418 173.688 li
132.418 173.881 li
132.612 173.881 li
132.612 174.074 li
132.805 174.074 li
132.998 174.267 li
133.191 174.267 li
133.191 174.46 li
134.35 174.46 li
134.35 174.267 li
134.542 174.267 li
134.542 174.074 li
134.736 174.074 li
134.736 173.881 li
134.928 173.881 li
134.928 173.495 li
135.122 173.302 li
135.122 173.108 li
135.314 172.916 li
135.314 172.722 li
135.507 172.53 li
135.507 172.144 li
135.701 171.95 li
135.701 171.564 li
135.893 171.372 li
135.893 170.792 li
136.086 170.599 li
136.086 170.213 li
136.279 170.02 li
136.279 169.44 li
136.472 169.247 li
136.472 168.668 li
136.666 168.475 li
136.666 167.896 li
136.858 167.703 li
136.858 166.93 li
137.051 166.737 li
137.051 166.157 li
137.244 165.964 li
0.882353 0.768627 0 0 cmyk
@
[3.86688 1.93344 ] 1.93344 dsh
0.25 164.201 mo
295.996 164.201 li
295.996 144.305 li
463.861 144.305 li
@
1 lw
[] 0 dsh
0.25 183.904 mo
463.861 183.904 li
0 0 0 1 cmyk
@
447.637 183.904 mo
447.637 186.029 li
401.275 183.904 mo
401.275 186.029 li
354.912 183.904 mo
354.912 186.029 li
308.553 183.904 mo
308.553 186.029 li
262.191 183.904 mo
262.191 186.029 li
215.83 183.904 mo
215.83 186.029 li
169.468 183.904 mo
169.468 186.029 li
123.107 183.904 mo
123.107 186.029 li
76.7451 183.904 mo
76.7451 186.029 li
30.3843 183.904 mo
30.3843 186.029 li
447.637 183.904 mo
447.637 188.154 li
401.275 183.904 mo
401.275 188.154 li
354.912 183.904 mo
354.912 188.154 li
308.553 183.904 mo
308.553 188.154 li
262.191 183.904 mo
262.191 188.154 li
215.83 183.904 mo
215.83 188.154 li
169.468 183.904 mo
169.468 188.154 li
123.107 183.904 mo
123.107 188.154 li
76.7451 183.904 mo
76.7451 188.154 li
30.3843 183.904 mo
30.3843 188.154 li
@
0.5 lw
0.25 282.426 mo
463.861 282.426 li
@
447.637 282.426 mo
447.637 284.55 li
401.275 282.426 mo
401.275 284.55 li
354.912 282.426 mo
354.912 284.55 li
308.553 282.426 mo
308.553 284.55 li
262.191 282.426 mo
262.191 284.55 li
215.83 282.426 mo
215.83 284.55 li
169.468 282.426 mo
169.468 284.55 li
123.107 282.426 mo
123.107 284.55 li
76.7451 282.426 mo
76.7451 284.55 li
30.3843 282.426 mo
30.3843 284.55 li
447.637 282.426 mo
447.637 286.675 li
401.275 282.426 mo
401.275 286.675 li
354.912 282.426 mo
354.912 286.675 li
308.553 282.426 mo
308.553 286.675 li
262.191 282.426 mo
262.191 286.675 li
215.83 282.426 mo
215.83 286.675 li
169.468 282.426 mo
169.468 286.675 li
123.107 282.426 mo
123.107 286.675 li
76.7451 282.426 mo
76.7451 286.675 li
30.3843 282.426 mo
30.3843 286.675 li
@
93.7446 282.426 mo
119.823 282.426 li
119.823 195.498 li
93.7446 195.498 li
93.7446 282.426 li
cp
0.113725 0.113725 0 0 cmyk
f
93.7446 282.426 mo
119.823 282.426 li
119.823 195.498 li
93.7446 195.498 li
93.7446 282.426 li
cp
0 0 0 1 cmyk
@
133.924 282.426 mo
154.787 282.426 li
154.787 195.498 li
133.924 195.498 li
133.924 282.426 li
cp
0.113725 0.113725 0 0 cmyk
f
133.924 282.426 mo
154.787 282.426 li
154.787 195.498 li
133.924 195.498 li
133.924 282.426 li
cp
0 0 0 1 cmyk
@
154.787 282.426 mo
178.354 282.426 li
178.354 195.498 li
154.787 195.498 li
154.787 282.426 li
cp
0.113725 0.113725 0 0 cmyk
f
154.787 282.426 mo
178.354 282.426 li
178.354 195.498 li
154.787 195.498 li
154.787 282.426 li
cp
0 0 0 1 cmyk
@
178.354 282.426 mo
191.296 282.426 li
191.296 195.498 li
178.354 195.498 li
178.354 282.426 li
cp
0.113725 0.113725 0 0 cmyk
f
178.354 282.426 mo
191.296 282.426 li
191.296 195.498 li
178.354 195.498 li
178.354 282.426 li
cp
0 0 0 1 cmyk
@
202.115 282.426 mo
217.568 282.426 li
217.568 195.498 li
202.115 195.498 li
202.115 282.426 li
cp
0.113725 0.113725 0 0 cmyk
f
202.115 282.426 mo
217.568 282.426 li
217.568 195.498 li
202.115 195.498 li
202.115 282.426 li
cp
0 0 0 1 cmyk
@
217.568 282.426 mo
235.533 282.426 li
235.533 195.498 li
217.568 195.498 li
217.568 282.426 li
cp
0.113725 0.113725 0 0 cmyk
f
217.568 282.426 mo
235.533 282.426 li
235.533 195.498 li
217.568 195.498 li
217.568 282.426 li
cp
0 0 0 1 cmyk
@
241.328 282.426 mo
267.6 282.426 li
267.6 195.498 li
241.328 195.498 li
241.328 282.426 li
cp
0.113725 0.113725 0 0 cmyk
f
241.328 282.426 mo
267.6 282.426 li
267.6 195.498 li
241.328 195.498 li
241.328 282.426 li
cp
0 0 0 1 cmyk
@
376.355 275.471 mo
376.355 275.664 li
376.74 275.664 li
376.74 275.855 li
376.936 275.855 li
376.936 276.049 li
377.127 276.049 li
377.127 276.241 li
377.514 276.628 li
377.514 276.82 li
377.707 276.82 li
377.707 277.013 li
377.9 277.205 li
377.9 277.398 li
378.092 277.398 li
378.092 277.784 li
378.285 277.978 li
378.285 278.17 li
378.479 278.363 li
378.479 278.555 li
378.672 278.748 li
378.672 278.94 li
378.865 279.134 li
378.865 279.52 li
379.059 279.52 li
379.059 280.099 li
379.25 280.099 li
379.25 280.484 li
379.443 280.678 li
379.443 280.87 li
379.637 281.063 li
379.637 281.448 li
379.828 281.448 li
379.828 281.835 li
380.023 281.835 li
380.023 282.027 li
380.215 282.027 li
380.215 281.835 li
380.408 281.643 li
380.408 281.449 li
380.602 281.258 li
380.602 281.064 li
380.793 280.872 li
380.793 280.485 li
380.988 280.293 li
380.988 280.101 li
381.18 280.101 li
381.18 279.908 li
381.373 279.715 li
381.373 279.522 li
381.566 279.33 li
381.566 279.137 li
381.758 279.137 li
381.758 278.943 li
382.338 278.364 li
382.531 278.364 li
382.531 278.172 li
382.918 278.172 li
382.918 277.979 li
383.689 277.979 li
383.689 278.172 li
384.076 278.172 li
384.076 278.364 li
384.463 278.364 li
384.463 278.558 li
384.654 278.558 li
384.654 278.75 li
384.848 278.75 li
385.041 278.943 li
385.234 278.943 li
385.234 279.136 li
385.428 279.136 li
385.428 279.328 li
385.619 279.328 li
385.813 279.521 li
386.006 279.521 li
386.006 279.714 li
386.199 279.714 li
386.393 279.906 li
386.584 279.906 li
386.584 280.099 li
386.971 280.099 li
386.971 280.292 li
387.551 280.292 li
387.551 280.483 li
388.709 280.483 li
388.902 280.292 li
389.482 280.292 li
389.482 280.099 li
390.061 280.099 li
390.061 279.906 li
390.834 279.906 li
390.834 279.714 li
392.379 279.714 li
392.379 279.906 li
392.957 279.906 li
392.957 280.099 li
393.152 280.099 li
393.344 280.292 li
393.537 280.292 li
393.537 280.483 li
393.924 280.483 li
393.924 280.677 li
394.117 280.677 li
394.117 280.869 li
394.311 280.869 li
394.311 281.063 li
394.502 281.063 li
395.082 281.642 li
395.275 281.642 li
395.275 281.834 li
395.467 281.834 li
395.467 282.027 li
395.66 282.027 li
395.854 282.219 li
396.24 282.219 li
396.24 282.027 li
396.625 282.027 li
396.625 281.834 li
397.012 281.834 li
397.012 281.642 li
397.398 281.642 li
397.398 281.448 li
397.979 281.448 li
398.172 281.257 li
406.477 281.257 li
406.477 281.063 li
407.25 281.063 li
407.25 280.871 li
408.215 280.871 li
408.215 280.678 li
411.307 280.678 li
411.307 280.871 li
412.078 280.871 li
412.078 281.063 li
412.658 281.063 li
412.85 281.257 li
413.236 281.257 li
413.43 281.448 li
414.01 281.448 li
414.203 281.642 li
415.555 281.642 li
415.555 281.448 li
416.326 281.448 li
416.326 281.257 li
417.1 281.257 li
417.1 281.063 li
419.031 281.063 li
419.031 280.871 li
420.189 280.871 li
420.189 280.678 li
420.77 280.678 li
420.77 280.485 li
421.35 280.485 li
421.35 280.293 li
421.928 280.293 li
421.928 280.101 li
423.473 280.101 li
423.666 280.293 li
424.053 280.293 li
424.246 280.485 li
424.633 280.485 li
424.633 280.678 li
425.984 280.678 li
425.984 280.485 li
426.178 280.485 li
426.563 280.1 li
426.756 280.1 li
426.756 279.907 li
426.949 279.907 li
426.949 279.714 li
427.143 279.714 li
427.143 279.521 li
427.527 279.521 li
427.527 279.329 li
427.721 279.329 li
427.914 279.137 li
428.105 279.137 li
428.301 278.943 li
430.232 278.943 li
430.232 278.75 li
430.617 278.75 li
430.811 278.559 li
431.004 278.559 li
431.004 278.365 li
431.197 278.365 li
431.197 278.173 li
431.389 278.173 li
431.389 277.979 li
431.582 277.979 li
431.582 277.787 li
431.775 277.787 li
431.775 277.595 li
432.936 276.436 li
433.127 276.436 li
433.127 276.243 li
434.287 276.243 li
434.287 276.436 li
434.48 276.436 li
434.48 276.629 li
434.672 276.629 li
434.672 276.82 li
434.865 276.82 li
434.865 277.014 li
435.252 277.399 li
435.252 277.593 li
435.443 277.593 li
435.443 277.784 li
435.639 277.978 li
435.639 278.364 li
435.83 278.364 li
435.83 278.558 li
436.217 278.943 li
436.217 279.136 li
436.41 279.136 li
436.41 279.328 li
436.795 279.328 li
436.988 279.136 li
437.182 279.136 li
437.182 278.943 li
437.375 278.75 li
437.375 278.558 li
437.568 278.364 li
437.568 278.172 li
437.76 277.979 li
437.76 277.786 li
437.953 277.594 li
437.953 277.401 li
438.146 277.209 li
438.146 277.016 li
438.34 276.823 li
438.34 276.438 li
438.533 276.438 li
438.533 276.051 li
438.725 276.051 li
438.725 275.859 li
438.918 275.666 li
438.918 275.474 li
439.111 275.474 li
439.111 275.28 li
439.305 275.28 li
439.305 275.088 li
439.691 274.701 li
439.883 274.701 li
439.883 274.509 li
440.656 274.509 li
440.85 274.701 li
441.041 274.701 li
441.041 274.896 li
441.234 274.896 li
441.428 275.087 li
441.619 275.087 li
441.619 275.28 li
441.814 275.28 li
441.814 275.473 li
442.006 275.473 li
442.006 275.665 li
443.551 277.21 li
443.744 277.21 li
443.744 277.403 li
443.938 277.403 li
443.938 277.596 li
444.131 277.596 li
444.131 277.788 li
444.322 277.788 li
444.322 277.98 li
444.516 277.98 li
444.516 278.174 li
444.709 278.174 li
444.709 278.366 li
444.902 278.366 li
444.902 278.559 li
445.096 278.559 li
445.096 278.751 li
445.287 278.751 li
445.48 278.943 li
445.674 278.943 li
445.674 279.137 li
445.867 279.137 li
445.867 279.33 li
446.061 279.33 li
446.061 279.523 li
446.445 279.523 li
446.445 279.715 li
446.639 279.715 li
446.639 279.908 li
447.025 279.908 li
447.219 280.101 li
447.605 280.101 li
447.605 280.293 li
448.184 280.293 li
448.184 280.485 li
448.764 280.485 li
448.764 280.678 li
449.344 280.678 li
449.344 280.871 li
449.922 280.871 li
449.922 281.063 li
450.309 281.063 li
450.502 281.257 li
451.082 281.257 li
451.082 281.448 li
451.66 281.448 li
451.854 281.642 li
452.818 281.642 li
452.818 281.834 li
454.75 281.834 li
454.75 282.027 li
459.387 282.027 li
459.578 282.219 li
461.512 282.219 li
461.512 282.412 li
463.83 282.412 li
233.988 277.597 mo
234.18 277.597 li
234.373 277.403 li
234.566 277.403 li
234.566 277.211 li
234.759 277.211 li
234.953 277.019 li
235.145 277.019 li
235.338 276.826 li
235.531 276.826 li
235.531 276.634 li
236.11 276.634 li
236.11 276.439 li
238.042 276.439 li
238.234 276.634 li
238.621 276.634 li
238.621 276.826 li
238.814 276.826 li
239.008 277.019 li
239.201 277.019 li
239.201 277.211 li
239.393 277.211 li
239.393 277.403 li
239.586 277.403 li
239.779 277.597 li
239.971 277.597 li
239.971 277.788 li
240.166 277.788 li
240.357 277.981 li
241.131 277.981 li
241.324 277.788 li
241.516 277.788 li
241.516 277.597 li
241.711 277.597 li
241.711 277.21 li
241.902 277.21 li
241.902 277.018 li
242.096 277.018 li
242.096 276.825 li
242.289 276.633 li
242.289 276.439 li
242.48 276.247 li
242.48 276.054 li
242.674 276.054 li
242.674 275.668 li
242.867 275.668 li
242.867 275.475 li
243.059 275.282 li
243.059 275.09 li
243.254 275.09 li
243.254 274.897 li
243.639 274.511 li
243.639 274.318 li
243.832 274.318 li
243.832 274.126 li
244.025 274.126 li
244.025 273.934 li
244.219 273.934 li
244.412 273.74 li
244.604 273.74 li
244.604 273.548 li
244.797 273.548 li
244.797 273.355 li
244.99 273.355 li
244.99 273.163 li
245.184 272.97 li
245.184 272.777 li
245.377 272.777 li
245.377 272.392 li
245.568 272.199 li
245.568 271.619 li
245.762 271.426 li
245.762 271.04 li
245.955 270.653 li
245.955 270.074 li
246.146 269.882 li
246.146 269.109 li
246.342 268.724 li
246.342 267.758 li
246.533 267.179 li
246.533 266.406 li
246.727 266.021 li
246.727 265.055 li
246.92 264.669 li
246.92 263.703 li
247.111 263.123 li
247.111 262.158 li
247.307 261.772 li
247.307 260.227 li
247.498 259.647 li
247.498 258.682 li
247.691 258.103 li
247.691 257.136 li
247.885 256.557 li
247.885 255.591 li
248.076 255.012 li
248.076 254.047 li
248.271 253.66 li
248.271 252.115 li
248.463 251.729 li
248.463 250.763 li
248.656 250.376 li
248.656 249.604 li
248.85 249.218 li
248.85 248.445 li
249.041 248.06 li
249.041 247.287 li
249.234 247.094 li
249.234 246.129 li
249.428 245.935 li
249.428 245.355 li
249.621 245.163 li
249.621 244.776 li
249.814 244.584 li
249.814 244.391 li
250.006 244.198 li
250.006 244.005 li
250.393 244.005 li
250.586 244.198 li
250.586 244.391 li
250.779 244.584 li
250.779 244.776 li
250.973 245.163 li
250.973 245.742 li
251.164 246.129 li
251.164 246.708 li
251.357 247.094 li
251.357 247.867 li
251.551 248.253 li
251.551 249.025 li
251.744 249.412 li
251.744 250.378 li
251.938 250.957 li
251.938 252.502 li
252.129 253.082 li
252.129 254.241 li
252.322 255.013 li
252.322 256.172 li
252.516 256.944 li
252.516 258.296 li
252.709 258.876 li
252.709 260.421 li
252.902 261.001 li
252.902 263.318 li
253.094 263.898 li
253.094 265.443 li
253.287 266.215 li
253.287 267.567 li
253.48 268.339 li
253.48 269.69 li
253.674 270.463 li
253.674 271.621 li
253.867 272.201 li
253.867 273.36 li
254.059 273.746 li
254.059 274.133 li
254.252 274.133 li
254.252 273.746 li
254.445 273.554 li
254.445 272.781 li
254.639 272.396 li
254.639 271.236 li
254.832 270.851 li
254.832 268.918 li
255.023 268.339 li
255.023 266.987 li
255.217 266.408 li
255.217 265.249 li
255.41 264.67 li
255.41 263.318 li
255.604 262.738 li
255.604 261.193 li
255.795 260.614 li
255.795 259.648 li
255.988 259.262 li
255.988 258.296 li
256.182 257.91 li
256.182 257.33 li
256.375 256.944 li
256.375 256.364 li
256.568 256.172 li
256.568 255.399 li
256.76 255.399 li
256.76 255.014 li
257.34 255.014 li
257.34 255.206 li
257.533 255.399 li
257.533 255.979 li
257.725 256.172 li
257.725 256.558 li
257.918 256.943 li
257.918 257.523 li
258.111 257.91 li
258.111 258.489 li
258.305 258.876 li
258.305 259.647 li
258.498 260.033 li
258.498 261.386 li
258.689 261.966 li
258.689 262.738 li
258.883 263.317 li
258.883 264.282 li
259.076 264.669 li
259.076 265.635 li
259.27 266.021 li
259.27 266.985 li
259.463 267.372 li
259.463 268.724 li
259.654 269.109 li
259.654 269.882 li
259.848 270.074 li
259.848 270.847 li
260.041 271.04 li
260.041 271.426 li
260.234 271.618 li
260.234 272.198 li
260.428 272.198 li
260.428 272.391 li
260.619 272.391 li
261.006 272.005 li
261.006 271.812 li
261.199 271.812 li
261.199 271.426 li
261.393 271.426 li
261.393 271.232 li
261.584 271.04 li
261.584 270.847 li
261.777 270.847 li
261.777 270.654 li
262.551 270.654 li
262.551 270.847 li
262.744 270.847 li
262.744 271.04 li
262.936 271.232 li
262.936 271.426 li
263.129 271.618 li
263.129 272.005 li
263.322 272.197 li
263.322 272.583 li
263.516 272.775 li
263.516 273.162 li
263.709 273.354 li
263.709 273.74 li
263.9 273.934 li
263.9 274.319 li
264.094 274.512 li
264.094 275.284 li
264.287 275.477 li
264.287 275.863 li
264.48 276.055 li
264.48 276.635 li
264.674 276.828 li
264.674 277.213 li
264.865 277.406 li
264.865 277.985 li
265.059 278.178 li
265.059 278.565 li
265.252 278.758 li
265.252 279.144 li
265.443 279.336 li
265.443 279.723 li
265.639 279.915 li
265.639 280.107 li
265.83 280.301 li
265.83 280.687 li
266.023 280.687 li
266.023 280.879 li
266.217 280.879 li
266.217 281.071 li
266.797 281.071 li
266.797 280.879 li
267.182 280.879 li
267.182 280.687 li
267.762 280.687 li
267.762 280.494 li
268.146 280.494 li
268.146 280.687 li
268.727 280.687 li
268.92 280.879 li
269.307 280.879 li
269.307 281.071 li
269.5 281.071 li
269.693 281.265 li
270.078 281.265 li
270.078 281.457 li
270.465 281.457 li
270.465 281.649 li
270.852 281.649 li
270.852 281.842 li
271.43 281.842 li
271.43 282.035 li
272.783 282.035 li
272.783 281.842 li
274.135 281.842 li
274.135 281.649 li
275.293 281.649 li
275.293 281.457 li
276.066 281.457 li
276.066 281.265 li
277.225 281.265 li
277.225 281.071 li
279.736 281.071 li
279.93 281.265 li
280.314 281.265 li
280.314 281.457 li
280.701 281.457 li
280.701 281.649 li
280.895 281.649 li
280.895 281.842 li
281.088 281.842 li
281.279 282.035 li
281.473 282.035 li
281.473 282.228 li
281.859 282.228 li
282.439 281.647 li
282.439 281.456 li
282.631 281.456 li
282.631 281.263 li
282.824 281.263 li
282.824 281.07 li
283.018 281.07 li
283.018 280.877 li
283.211 280.877 li
283.211 280.685 li
283.402 280.685 li
283.402 280.492 li
283.596 280.3 li
283.789 280.3 li
283.789 280.106 li
283.982 280.106 li
283.982 279.914 li
284.176 279.914 li
284.367 279.722 li
284.563 279.722 li
284.754 279.529 li
285.527 279.529 li
285.527 279.722 li
285.914 279.722 li
285.914 279.914 li
286.105 279.914 li
286.879 280.687 li
286.879 280.879 li
287.072 280.879 li
287.072 281.071 li
287.264 281.071 li
287.264 281.265 li
287.65 281.265 li
287.65 281.071 li
287.844 281.071 li
287.844 280.879 li
288.037 280.879 li
288.037 280.493 li
288.229 280.493 li
288.229 280.106 li
288.422 280.106 li
288.422 279.722 li
288.615 279.722 li
288.615 279.335 li
288.809 279.142 li
288.809 278.949 li
289.002 278.757 li
289.002 278.371 li
289.193 278.178 li
289.193 277.792 li
289.387 277.792 li
289.387 277.406 li
289.58 277.406 li
289.58 277.019 li
289.773 276.827 li
289.773 276.634 li
289.965 276.441 li
289.965 276.248 li
290.158 276.057 li
290.158 275.863 li
290.352 275.671 li
290.352 275.479 li
290.545 275.479 li
290.545 275.285 li
290.738 275.285 li
290.738 275.094 li
290.93 275.094 li
290.93 274.9 li
291.123 274.708 li
291.316 274.708 li
291.51 274.515 li
291.896 274.515 li
292.088 274.708 li
292.475 274.708 li
292.475 274.9 li
292.668 274.9 li
292.668 275.094 li
292.861 275.094 li
292.861 275.285 li
293.055 275.285 li
293.826 276.058 li
294.02 276.058 li
294.02 276.25 li
294.213 276.25 li
294.404 276.443 li
294.6 276.443 li
294.791 276.636 li
295.756 276.636 li
295.949 276.828 li
296.529 276.828 li
296.723 277.021 li
296.914 277.021 li
297.107 277.213 li
297.301 277.213 li
297.301 277.406 li
297.494 277.406 li
297.494 277.599 li
297.688 277.599 li
297.688 277.792 li
297.879 277.792 li
297.879 277.984 li
298.072 277.984 li
298.072 278.178 li
298.266 278.178 li
298.266 278.563 li
298.459 278.563 li
298.459 278.757 li
298.652 278.757 li
298.652 278.948 li
298.844 279.142 li
298.844 279.334 li
299.037 279.334 li
299.037 279.527 li
299.23 279.719 li
299.23 279.912 li
299.424 280.104 li
299.424 280.297 li
299.615 280.297 li
299.615 280.49 li
299.809 280.682 li
299.809 280.875 li
300.002 281.068 li
300.002 281.262 li
300.195 281.262 li
300.195 281.454 li
300.389 281.646 li
300.775 281.646 li
301.16 281.261 li
301.16 281.067 li
301.354 280.875 li
301.354 280.682 li
301.547 280.682 li
301.547 280.489 li
301.934 280.103 li
301.934 279.91 li
302.127 279.718 li
302.127 279.525 li
302.318 279.525 li
302.318 279.332 li
302.512 279.14 li
302.512 278.947 li
302.705 278.947 li
302.705 278.755 li
302.898 278.755 li
302.898 278.563 li
303.092 278.369 li
303.092 278.177 li
303.283 278.177 li
303.283 277.983 li
303.477 277.983 li
303.477 277.792 li
303.67 277.792 li
303.67 277.599 li
303.863 277.599 li
303.863 277.406 li
304.057 277.406 li
304.057 277.213 li
304.248 277.213 li
304.248 277.02 li
304.441 277.02 li
304.441 276.828 li
304.635 276.828 li
304.635 276.635 li
304.828 276.635 li
304.828 276.442 li
305.021 276.442 li
305.406 276.057 li
305.6 276.057 li
305.6 275.863 li
305.793 275.863 li
305.793 275.671 li
305.986 275.479 li
306.178 275.479 li
306.178 275.285 li
306.371 275.285 li
306.371 275.094 li
306.564 275.094 li
306.564 274.9 li
306.951 274.514 li
307.143 274.514 li
307.143 274.322 li
307.336 274.322 li
307.336 274.129 li
307.529 274.129 li
307.529 273.937 li
307.723 273.937 li
307.914 273.744 li
309.268 273.744 li
309.268 273.937 li
309.459 273.937 li
309.459 274.129 li
309.654 274.129 li
309.654 274.322 li
309.846 274.322 li
309.846 274.514 li
310.039 274.514 li
310.039 274.707 li
310.232 274.707 li
310.232 274.899 li
310.424 274.899 li
310.424 275.285 li
310.617 275.285 li
310.617 275.479 li
310.811 275.671 li
310.811 275.863 li
311.004 275.863 li
311.004 276.057 li
311.197 276.248 li
311.197 276.441 li
311.389 276.634 li
311.389 276.827 li
311.582 276.827 li
311.582 277.213 li
311.775 277.213 li
311.775 277.406 li
311.969 277.599 li
311.969 277.792 li
312.162 277.792 li
312.162 278.178 li
312.354 278.37 li
312.354 278.563 li
312.547 278.563 li
312.547 278.756 li
312.74 278.947 li
312.74 279.141 li
312.934 279.333 li
312.934 279.526 li
313.127 279.526 li
313.127 279.912 li
313.318 279.912 li
313.318 280.104 li
313.512 280.297 li
313.512 280.49 li
313.705 280.49 li
313.705 280.682 li
313.898 280.875 li
313.898 281.068 li
314.09 281.068 li
314.09 281.262 li
314.67 281.841 li
314.863 281.841 li
314.863 282.033 li
315.057 282.033 li
315.25 281.841 li
315.443 281.841 li
315.443 281.647 li
315.828 281.647 li
315.828 281.455 li
316.021 281.455 li
316.021 281.262 li
316.408 281.262 li
316.408 281.069 li
316.793 281.069 li
316.793 280.876 li
317.373 280.876 li
317.373 280.684 li
317.953 280.684 li
318.146 280.491 li
318.725 280.491 li
318.725 280.299 li
319.305 280.299 li
319.305 280.106 li
319.691 280.106 li
319.691 279.913 li
319.885 279.913 li
319.885 279.722 li
320.076 279.722 li
320.076 279.528 li
320.27 279.528 li
320.27 279.336 li
320.463 279.336 li
320.463 279.143 li
320.654 279.143 li
320.654 278.95 li
320.85 278.95 li
320.85 278.758 li
321.041 278.758 li
321.041 278.565 li
321.428 278.178 li
321.428 277.985 li
321.621 277.985 li
321.621 277.793 li
321.814 277.793 li
321.814 277.601 li
322.008 277.601 li
322.008 277.407 li
322.199 277.215 li
322.393 277.215 li
322.393 277.022 li
322.586 276.83 li
322.779 276.83 li
322.779 276.638 li
323.938 276.638 li
323.938 276.83 li
324.131 276.83 li
324.322 277.022 li
324.322 277.215 li
324.516 277.215 li
324.516 277.407 li
324.709 277.407 li
324.709 277.601 li
324.902 277.793 li
324.902 277.985 li
325.096 277.985 li
325.096 278.372 li
325.287 278.372 li
325.287 278.758 li
325.48 278.758 li
325.48 279.145 li
325.674 279.145 li
325.674 279.531 li
325.867 279.531 li
325.867 279.916 li
326.061 279.916 li
326.061 280.496 li
326.252 280.496 li
326.252 280.882 li
326.445 280.882 li
326.445 281.269 li
326.639 281.269 li
326.639 281.461 li
326.832 281.654 li
327.025 281.654 li
327.025 281.461 li
327.217 281.461 li
327.217 281.269 li
327.41 281.075 li
327.41 280.883 li
327.604 280.689 li
327.604 280.497 li
327.797 280.305 li
327.797 280.111 li
327.99 280.111 li
327.99 279.726 li
328.182 279.726 li
328.182 279.533 li
328.375 279.34 li
328.375 279.147 li
328.568 279.147 li
328.568 278.955 li
328.762 278.955 li
328.762 278.763 li
328.953 278.763 li
328.953 278.57 li
329.146 278.57 li
329.146 278.377 li
329.533 278.377 li
329.533 278.185 li
330.307 278.185 li
330.498 277.992 li
331.271 277.992 li
331.271 277.8 li
331.658 277.8 li
331.658 277.606 li
331.85 277.606 li
331.85 277.414 li
332.043 277.414 li
332.043 277.221 li
332.236 277.221 li
332.236 277.028 li
332.43 277.028 li
332.43 276.836 li
332.623 276.836 li
332.623 276.643 li
332.814 276.45 li
332.814 276.258 li
333.008 276.258 li
333.008 276.065 li
333.201 276.065 li
333.201 275.872 li
333.588 275.486 li
333.588 275.294 li
333.779 275.294 li
333.779 275.102 li
334.359 274.521 li
334.359 274.329 li
334.553 274.329 li
334.744 274.137 li
334.939 274.137 li
335.131 273.943 li
335.711 273.943 li
335.904 274.137 li
336.098 274.137 li
336.098 274.329 li
336.289 274.329 li
336.289 274.521 li
336.482 274.521 li
336.482 274.714 li
336.676 274.714 li
336.676 274.907 li
336.869 275.1 li
336.869 275.292 li
337.063 275.292 li
337.063 275.678 li
337.256 275.678 li
337.256 276.064 li
337.447 276.257 li
337.447 276.449 li
337.641 276.642 li
337.641 277.028 li
337.834 277.028 li
337.834 277.414 li
338.027 277.606 li
338.027 277.8 li
338.221 277.993 li
338.221 278.572 li
338.412 278.765 li
338.412 278.958 li
338.605 279.149 li
338.605 279.536 li
338.799 279.536 li
338.799 279.923 li
338.992 280.114 li
338.992 280.308 li
339.186 280.5 li
339.377 280.5 li
339.377 280.693 li
339.377 280.5 li
339.57 280.5 li
339.764 280.308 li
339.764 280.114 li
339.955 280.114 li
339.955 279.729 li
340.15 279.536 li
340.15 279.344 li
340.342 279.15 li
340.342 278.959 li
340.535 278.959 li
340.535 278.572 li
340.729 278.572 li
340.729 278.38 li
340.92 278.186 li
340.92 277.994 li
341.115 277.801 li
341.115 277.608 li
341.307 277.608 li
341.307 277.415 li
341.5 277.415 li
341.5 277.224 li
341.887 277.224 li
341.887 277.03 li
342.465 277.03 li
342.465 277.224 li
342.658 277.224 li
343.43 277.995 li
343.43 278.188 li
343.623 278.188 li
343.623 278.574 li
343.816 278.574 li
343.816 278.767 li
344.01 278.767 li
344.01 278.959 li
344.203 279.153 li
344.203 279.345 li
344.588 279.731 li
344.588 279.924 li
344.781 280.116 li
344.781 280.309 li
344.975 280.309 li
344.975 280.502 li
345.168 280.502 li
345.168 280.694 li
345.941 280.694 li
345.941 280.502 li
346.133 280.502 li
346.326 280.309 li
346.52 280.309 li
346.52 280.116 li
346.713 280.116 li
346.713 279.924 li
346.906 279.924 li
346.906 279.731 li
347.098 279.731 li
347.291 279.538 li
347.484 279.538 li
347.484 279.345 li
348.256 279.345 li
348.449 279.538 li
348.643 279.538 li
349.029 279.925 li
349.221 279.925 li
349.221 280.311 li
349.414 280.311 li
349.414 280.503 li
349.607 280.503 li
349.607 280.696 li
349.799 280.889 li
349.799 281.081 li
349.992 281.081 li
349.992 281.273 li
350.186 281.467 li
350.186 281.853 li
350.379 281.853 li
350.379 282.045 li
350.572 282.237 li
350.764 282.045 li
350.764 281.853 li
350.957 281.853 li
350.957 281.467 li
351.15 281.467 li
351.15 281.08 li
351.344 280.888 li
351.344 280.695 li
351.537 280.503 li
351.537 280.31 li
351.729 280.117 li
351.729 279.925 li
351.922 279.925 li
351.922 279.732 li
352.115 279.538 li
352.115 279.346 li
352.309 279.153 li
352.309 278.961 li
352.502 278.961 li
352.502 278.769 li
352.693 278.769 li
352.693 278.575 li
352.887 278.575 li
352.887 278.383 li
353.08 278.383 li
353.08 278.19 li
354.045 278.19 li
354.045 278.383 li
354.24 278.383 li
354.24 278.575 li
354.432 278.575 li
354.432 278.769 li
354.625 278.769 li
354.625 278.961 li
354.818 278.961 li
354.818 279.347 li
355.01 279.347 li
355.01 279.539 li
355.205 279.732 li
355.205 279.925 li
355.396 279.925 li
355.396 280.312 li
355.59 280.312 li
355.59 280.504 li
355.783 280.697 li
355.783 280.89 li
355.975 280.89 li
355.975 281.082 li
356.363 281.082 li
356.555 280.89 li
356.555 280.697 li
356.748 280.697 li
356.748 280.311 li
356.941 280.311 li
356.941 280.118 li
357.133 279.925 li
357.133 279.732 li
357.328 279.732 li
357.328 279.346 li
357.52 279.346 li
357.52 278.96 li
357.713 278.96 li
357.713 278.768 li
358.1 278.381 li
358.1 278.189 li
358.291 278.189 li
358.291 277.996 li
358.484 277.996 li
358.484 277.804 li
358.871 277.804 li
359.064 277.61 li
359.449 277.61 li
359.449 277.804 li
359.836 277.804 li
359.836 277.996 li
360.223 277.996 li
360.223 278.189 li
360.416 278.189 li
360.416 278.381 li
360.607 278.381 li
360.607 278.574 li
360.801 278.574 li
360.801 278.767 li
360.994 278.767 li
360.994 278.959 li
361.188 278.959 li
361.188 279.153 li
361.379 279.153 li
361.574 279.345 li
361.959 279.345 li
361.959 279.538 li
362.152 279.538 li
362.152 279.345 li
362.539 279.345 li
362.732 279.153 li
362.924 279.153 li
362.924 278.959 li
363.117 278.959 li
363.117 278.767 li
363.311 278.767 li
363.311 278.574 li
363.504 278.574 li
363.504 278.381 li
363.697 278.381 li
363.889 278.189 li
364.082 278.189 li
364.082 277.996 li
364.275 277.996 li
364.275 277.804 li
365.047 277.804 li
365.047 277.61 li
365.047 277.804 li
365.627 277.804 li
365.627 277.996 li
366.014 277.996 li
366.014 278.189 li
366.594 278.769 li
366.594 278.961 li
366.785 278.961 li
366.785 279.347 li
366.979 279.347 li
366.979 279.539 li
367.172 279.732 li
367.172 279.925 li
367.365 280.118 li
367.365 280.311 li
367.559 280.311 li
367.559 280.697 li
367.75 280.697 li
367.75 281.082 li
367.943 281.275 li
367.943 281.468 li
368.137 281.661 li
368.137 281.854 li
368.33 282.046 li
368.33 282.238 li
368.523 282.238 li
368.523 282.432 li
368.523 282.238 li
368.715 282.238 li
368.715 281.853 li
368.908 281.66 li
368.908 281.468 li
369.102 281.274 li
369.102 281.082 li
369.293 280.89 li
369.293 280.697 li
369.488 280.697 li
369.488 280.504 li
369.68 280.312 li
369.68 280.118 li
369.873 279.926 li
369.873 279.733 li
370.066 279.733 li
370.066 279.54 li
370.453 279.154 li
370.453 278.962 li
370.645 278.962 li
370.645 278.769 li
370.838 278.769 li
370.838 278.576 li
371.031 278.576 li
371.031 278.384 li
371.225 278.384 li
371.225 278.191 li
371.418 278.191 li
371.418 277.998 li
371.803 277.998 li
371.803 277.806 li
371.996 277.806 li
371.996 277.613 li
372.383 277.613 li
372.383 277.421 li
372.574 277.421 li
372.574 277.229 li
372.768 277.229 li
372.961 277.035 li
373.154 277.035 li
373.154 276.842 li
373.348 276.842 li
373.348 276.649 li
373.539 276.649 li
373.732 276.457 li
373.926 276.457 li
373.926 276.264 li
374.119 276.264 li
374.506 275.878 li
374.697 275.878 li
374.697 275.686 li
375.084 275.686 li
375.277 275.493 li
376.244 275.493 li
0.25 282.426 mo
12.0327 282.426 li
12.2256 282.233 li
16.4751 282.233 li
16.4751 282.426 li
17.0547 282.426 li
17.0547 282.233 li
24.3945 282.233 li
24.5879 282.04 li
26.1328 282.04 li
26.1328 281.848 li
28.0649 281.848 li
28.2578 281.655 li
30.1895 281.655 li
30.3818 281.848 li
32.314 281.848 li
32.314 281.655 li
33.8589 281.655 li
33.8589 281.848 li
35.4038 281.848 li
35.4038 281.655 li
36.9487 281.655 li
36.9487 281.463 li
37.9146 281.463 li
37.9146 281.27 li
41.0054 281.27 li
41.1982 281.463 li
41.9702 281.463 li
41.9702 281.655 li
42.9355 281.655 li
42.9355 281.848 li
45.4473 281.848 li
45.4473 282.04 li
48.9238 282.04 li
49.1162 282.233 li
55.2979 282.233 li
55.4907 282.426 li
69.3989 282.426 li
69.3989 282.233 li
73.8423 282.233 li
73.8423 282.426 li
75.1938 282.426 li
75.3867 282.233 li
79.0571 282.233 li
79.0571 282.426 li
82.3403 282.426 li
82.3403 282.233 li
83.3057 282.233 li
83.4995 282.04 li
84.2715 282.04 li
84.2715 281.848 li
85.0444 281.848 li
85.0444 281.655 li
85.8164 281.655 li
85.8164 281.463 li
88.7139 281.463 li
88.9067 281.655 li
89.4863 281.655 li
89.6797 281.848 li
90.2593 281.848 li
90.2593 282.04 li
90.8384 282.04 li
91.0313 282.233 li
93.7354 282.233 li
93.7354 282.426 li
94.894 282.426 li
94.894 282.233 li
95.667 282.233 li
95.8594 282.04 li
96.439 282.04 li
96.439 281.848 li
97.2124 281.848 li
97.2124 281.655 li
97.7915 281.655 li
97.9844 281.463 li
98.7563 281.463 li
98.7563 281.27 li
100.495 281.27 li
100.688 281.463 li
101.46 281.463 li
101.654 281.655 li
102.04 281.655 li
102.04 281.463 li
102.619 281.463 li
102.619 281.27 li
102.812 281.27 li
102.812 281.076 li
103.005 281.076 li
103.005 280.884 li
103.198 280.884 li
103.584 280.498 li
103.584 280.305 li
103.777 280.305 li
103.777 280.112 li
103.97 280.112 li
103.97 279.92 li
104.163 279.92 li
104.549 279.534 li
104.549 279.341 li
104.742 279.341 li
104.935 279.148 li
105.128 279.148 li
105.128 278.956 li
105.321 278.956 li
105.321 278.764 li
105.707 278.764 li
105.707 278.57 li
107.059 278.57 li
107.251 278.764 li
107.445 278.764 li
107.445 278.956 li
107.638 278.956 li
107.831 279.148 li
108.024 279.148 li
108.024 279.341 li
108.216 279.341 li
108.216 279.534 li
108.41 279.534 li
108.41 279.727 li
108.603 279.727 li
108.603 279.919 li
108.796 279.919 li
108.796 280.111 li
108.989 280.111 li
108.989 280.305 li
109.181 280.305 li
109.181 280.497 li
109.568 280.883 li
109.761 280.883 li
109.761 281.075 li
110.727 281.075 li
110.727 280.883 li
110.92 280.883 li
111.112 280.69 li
111.305 280.69 li
111.305 280.498 li
111.499 280.498 li
111.499 280.305 li
111.691 280.305 li
111.885 280.112 li
112.077 280.112 li
112.077 279.92 li
112.27 279.92 li
112.463 279.728 li
112.85 279.728 li
112.85 279.534 li
113.235 279.534 li
113.429 279.342 li
114.974 279.342 li
114.974 279.534 li
115.746 279.534 li
115.746 279.728 li
116.132 279.728 li
116.132 279.92 li
116.519 279.92 li
116.519 280.112 li
116.711 280.112 li
116.904 280.305 li
117.098 280.305 li
117.29 280.498 li
117.483 280.498 li
117.483 280.69 li
117.676 280.69 li
117.676 280.883 li
117.869 280.883 li
118.063 281.075 li
118.255 281.075 li
118.255 281.27 li
118.448 281.27 li
118.448 281.462 li
118.641 281.462 li
118.833 281.654 li
119.027 281.654 li
119.027 281.847 li
119.22 281.847 li
119.22 282.039 li
119.413 282.039 li
119.605 282.232 li
119.799 282.232 li
119.799 282.425 li
119.992 282.425 li
119.992 282.232 li
120.378 282.232 li
120.378 282.039 li
120.764 282.039 li
120.958 281.847 li
121.537 281.847 li
121.537 281.654 li
122.696 281.654 li
122.889 281.847 li
123.661 281.847 li
123.661 282.039 li
124.433 282.039 li
124.433 282.232 li
125.399 282.232 li
125.399 282.039 li
125.979 282.039 li
126.172 281.847 li
126.751 281.847 li
126.751 281.654 li
127.523 281.654 li
127.523 281.462 li
130.035 281.462 li
130.228 281.654 li
130.807 281.654 li
130.807 281.847 li
131.386 281.847 li
131.386 282.039 li
131.772 282.039 li
131.966 282.232 li
132.352 282.232 li
132.352 282.425 li
132.738 282.425 li
132.738 282.232 li
133.317 282.232 li
133.317 282.039 li
133.704 282.039 li
133.897 281.847 li
134.283 281.847 li
134.476 281.654 li
134.863 281.654 li
135.055 281.462 li
135.441 281.462 li
135.441 281.27 li
136.021 281.27 li
136.021 281.075 li
136.407 281.075 li
136.407 280.883 li
136.986 280.883 li
136.986 280.69 li
137.373 280.69 li
137.566 280.498 li
138.531 280.498 li
138.531 280.305 li
138.725 280.305 li
138.725 280.498 li
139.69 280.498 li
139.69 280.69 li
139.883 280.69 li
140.076 280.883 li
140.269 280.883 li
140.461 281.075 li
140.655 281.075 li
140.655 281.27 li
141.041 281.27 li
141.041 281.462 li
141.813 281.462 li
141.813 281.27 li
142.007 281.27 li
142.199 281.075 li
142.393 281.075 li
142.393 280.883 li
142.585 280.883 li
142.585 280.69 li
142.779 280.69 li
142.971 280.498 li
143.164 280.498 li
143.164 280.305 li
143.744 280.305 li
143.744 280.112 li
144.13 280.112 li
144.13 280.305 li
144.71 280.305 li
144.71 280.498 li
145.675 280.498 li
145.675 280.305 li
145.868 280.305 li
145.868 280.112 li
146.061 280.112 li
146.061 279.92 li
146.254 279.728 li
146.254 279.341 li
146.446 279.148 li
146.446 278.956 li
146.64 278.764 li
146.64 278.57 li
146.833 278.378 li
146.833 277.992 li
147.026 277.8 li
147.026 277.413 li
147.219 277.413 li
147.219 276.834 li
147.411 276.642 li
147.411 276.256 li
147.605 276.062 li
147.605 275.869 li
147.797 275.677 li
147.797 275.291 li
147.991 275.098 li
147.991 274.905 li
148.184 274.712 li
148.184 274.133 li
148.376 274.133 li
148.376 273.747 li
148.57 273.554 li
148.57 273.362 li
148.762 273.169 li
148.762 272.977 li
148.956 272.977 li
148.956 272.591 li
149.148 272.591 li
149.148 272.398 li
149.534 272.012 li
149.728 272.012 li
149.728 271.819 li
150.307 271.819 li
150.307 272.012 li
150.5 272.012 li
150.692 272.204 li
150.692 272.397 li
150.886 272.397 li
150.886 272.59 li
151.079 272.782 li
151.079 272.975 li
151.272 273.168 li
151.272 273.36 li
151.465 273.553 li
151.465 273.745 li
151.658 273.938 li
151.658 274.131 li
151.851 274.323 li
151.851 274.903 li
152.043 275.097 li
152.043 275.289 li
152.237 275.481 li
152.237 275.867 li
152.429 276.061 li
152.429 276.446 li
152.623 276.639 li
152.623 277.025 li
152.816 277.217 li
152.816 277.797 li
153.007 277.99 li
153.007 278.376 li
153.201 278.568 li
153.201 278.955 li
153.394 279.146 li
153.394 279.533 li
153.587 279.726 li
153.587 280.111 li
153.781 280.305 li
153.781 280.497 li
153.972 280.689 li
153.972 280.883 li
154.166 281.075 li
154.552 281.075 li
154.552 280.883 li
154.746 280.883 li
154.746 280.689 li
154.938 280.689 li
154.938 280.497 li
155.13 280.305 li
155.13 280.111 li
155.325 280.111 li
155.325 279.919 li
155.517 279.919 li
155.517 279.727 li
155.709 279.727 li
155.709 279.534 li
155.903 279.534 li
155.903 279.341 li
156.095 279.341 li
156.289 279.148 li
156.482 279.148 li
156.482 278.956 li
156.868 278.956 li
157.061 278.764 li
157.447 278.764 li
157.447 278.57 li
157.833 278.57 li
157.833 278.378 li
158.026 278.378 li
158.22 278.186 li
158.412 278.186 li
158.412 277.993 li
158.605 277.993 li
158.605 277.8 li
158.798 277.8 li
158.992 277.606 li
159.185 277.606 li
159.185 277.414 li
159.57 277.414 li
159.57 277.222 li
160.536 277.222 li
160.536 277.414 li
160.923 277.414 li
160.923 277.606 li
161.115 277.606 li
161.115 277.8 li
161.308 277.8 li
161.308 277.993 li
161.501 277.993 li
161.501 278.186 li
161.694 278.186 li
161.694 278.378 li
161.887 278.378 li
161.887 278.57 li
162.08 278.57 li
162.08 278.957 li
162.273 278.957 li
162.273 279.149 li
162.466 279.149 li
162.659 279.342 li
162.852 279.342 li
162.852 279.534 li
163.044 279.534 li
163.044 279.342 li
163.431 279.342 li
163.431 279.149 li
163.625 279.149 li
163.625 278.957 li
163.817 278.957 li
163.817 278.765 li
164.009 278.571 li
164.009 278.379 li
164.203 278.379 li
164.203 277.993 li
164.396 277.993 li
164.396 277.8 li
164.589 277.606 li
164.589 277.414 li
164.782 277.222 li
164.782 277.029 li
164.974 276.836 li
164.974 276.644 li
165.167 276.644 li
165.167 276.451 li
165.36 276.259 li
165.36 276.065 li
165.554 276.065 li
165.554 275.873 li
165.747 275.681 li
165.747 275.488 li
165.939 275.488 li
165.939 275.296 li
166.132 275.296 li
166.325 275.103 li
166.519 275.103 li
166.519 274.91 li
168.451 274.91 li
168.451 274.717 li
168.643 274.717 li
168.835 274.524 li
169.029 274.524 li
169.029 274.331 li
169.222 274.331 li
169.222 274.139 li
169.416 273.946 li
169.416 273.754 li
169.608 273.754 li
169.608 273.562 li
169.8 273.562 li
169.8 273.368 li
169.994 273.176 li
169.994 272.982 li
170.186 272.982 li
170.186 272.791 li
170.38 272.791 li
170.38 272.598 li
170.573 272.405 li
170.765 272.405 li
170.765 272.212 li
170.958 272.212 li
171.151 272.02 li
171.538 272.02 li
171.73 272.212 li
171.923 272.212 li
171.923 272.405 li
172.117 272.405 li
172.117 272.598 li
172.31 272.598 li
172.31 272.791 li
172.501 272.982 li
172.501 273.176 li
172.695 273.176 li
172.695 273.368 li
172.888 273.562 li
172.888 273.754 li
173.082 273.946 li
173.082 274.332 li
173.274 274.332 li
173.274 274.718 li
173.466 274.911 li
173.466 275.104 li
173.66 275.297 li
173.66 275.683 li
173.853 275.683 li
173.853 276.069 li
174.046 276.262 li
174.046 276.647 li
174.239 276.84 li
174.239 277.033 li
174.431 277.226 li
174.431 277.611 li
174.625 277.611 li
174.625 277.998 li
174.818 277.998 li
174.818 278.384 li
175.011 278.384 li
175.011 278.77 li
175.204 278.77 li
175.204 278.963 li
175.397 279.155 li
175.589 279.155 li
175.589 279.348 li
176.169 279.348 li
176.169 279.155 li
176.555 279.155 li
176.555 278.963 li
176.749 278.963 li
176.749 278.77 li
176.941 278.77 li
177.134 278.577 li
177.328 278.577 li
177.52 278.384 li
178.292 278.384 li
178.292 278.577 li
178.679 278.577 li
178.679 278.77 li
178.872 278.77 li
178.872 278.963 li
179.065 278.963 li
179.065 279.155 li
179.257 279.155 li
179.257 279.348 li
179.451 279.348 li
179.451 279.54 li
179.644 279.733 li
179.644 279.926 li
179.836 279.926 li
179.836 280.118 li
180.222 280.118 li
180.222 280.312 li
180.416 280.312 li
180.416 280.118 li
180.609 280.118 li
180.609 279.926 li
180.802 279.733 li
180.802 279.54 li
180.995 279.348 li
180.995 279.155 li
181.187 278.963 li
181.187 278.576 li
181.38 278.384 li
181.38 277.804 li
181.573 277.611 li
181.573 277.226 li
181.767 276.84 li
181.767 276.453 li
181.959 276.261 li
181.959 275.681 li
182.152 275.488 li
182.152 275.103 li
182.345 274.716 li
182.345 273.944 li
182.538 273.751 li
182.538 273.172 li
182.732 272.979 li
182.732 272.399 li
182.924 272.207 li
182.924 271.82 li
183.117 271.435 li
183.117 271.049 li
183.31 270.663 li
183.31 270.083 li
183.502 269.697 li
183.502 269.311 li
183.697 269.118 li
183.697 268.539 li
183.888 268.346 li
183.888 267.961 li
184.082 267.768 li
184.082 267.382 li
184.275 267.188 li
184.275 266.803 li
184.467 266.61 li
184.467 266.224 li
184.661 266.032 li
184.661 265.839 li
184.853 265.839 li
184.853 265.646 li
185.046 265.453 li
185.046 265.261 li
185.24 265.261 li
185.24 265.068 li
185.819 265.068 li
186.011 265.261 li
186.011 265.453 li
186.205 265.453 li
186.205 265.646 li
186.398 265.839 li
186.398 266.032 li
186.591 266.224 li
186.591 266.417 li
186.784 266.609 li
186.784 266.996 li
186.976 267.188 li
186.976 267.768 li
187.169 267.961 li
187.169 268.54 li
187.363 268.732 li
187.363 269.312 li
187.556 269.505 li
187.556 270.084 li
187.749 270.276 li
187.749 270.856 li
187.941 271.242 li
187.941 272.208 li
188.134 272.4 li
188.134 272.979 li
188.328 273.366 li
188.328 273.945 li
188.521 274.331 li
188.521 274.911 li
188.712 275.297 li
188.712 275.876 li
188.906 276.263 li
188.906 277.229 li
189.099 277.422 li
189.099 278.193 li
189.292 278.387 li
189.292 278.966 li
189.486 279.158 li
189.486 279.737 li
189.677 279.931 li
189.677 280.316 li
189.872 280.509 li
189.872 280.701 li
190.064 280.701 li
190.257 280.509 li
190.257 280.316 li
190.451 280.316 li
190.451 280.124 li
190.642 279.932 li
190.642 279.738 li
190.836 279.546 li
190.836 279.354 li
191.029 279.354 li
191.029 279.16 li
191.8 279.16 li
191.8 279.354 li
191.994 279.354 li
191.994 279.546 li
192.187 279.738 li
192.187 279.932 li
192.38 280.124 li
192.38 280.316 li
192.573 280.509 li
192.573 280.896 li
192.765 280.896 li
192.765 281.088 li
192.958 281.28 li
193.152 281.088 li
193.152 280.896 li
193.345 280.896 li
193.345 280.509 li
193.538 280.316 li
193.538 279.736 li
193.73 279.544 li
193.73 278.965 li
193.923 278.772 li
193.923 278.387 li
194.117 278 li
194.117 277.613 li
194.31 277.422 li
194.31 276.842 li
194.502 276.648 li
194.502 276.069 li
194.695 275.876 li
194.695 275.49 li
194.888 275.298 li
194.888 274.911 li
195.082 274.72 li
195.082 274.333 li
195.275 274.141 li
195.275 273.562 li
195.467 273.562 li
195.467 273.175 li
195.66 273.175 li
195.66 272.789 li
195.853 272.789 li
195.853 272.597 li
196.046 272.597 li
196.046 272.403 li
196.24 272.403 li
196.24 272.211 li
197.011 272.211 li
197.011 272.403 li
197.205 272.403 li
197.205 272.597 li
197.398 272.789 li
197.398 272.981 li
197.589 272.981 li
197.589 273.174 li
197.784 273.367 li
197.784 273.56 li
197.976 273.752 li
197.976 273.944 li
198.169 274.138 li
198.169 274.524 li
198.363 274.716 li
198.363 274.909 li
198.554 275.102 li
198.554 275.488 li
198.749 275.488 li
198.749 275.874 li
198.941 276.066 li
198.941 276.26 li
199.134 276.452 li
199.134 276.645 li
199.328 276.837 li
199.328 277.03 li
199.519 277.03 li
199.519 277.223 li
200.099 277.223 li
200.099 277.03 li
200.292 277.03 li
200.292 276.837 li
200.485 276.837 li
200.485 276.645 li
200.679 276.452 li
200.679 276.26 li
200.871 276.26 li
200.871 275.873 li
201.064 275.873 li
201.064 275.681 li
201.257 275.488 li
201.257 275.296 li
201.45 275.296 li
201.45 275.103 li
201.644 275.103 li
201.644 274.91 li
201.835 274.91 li
201.835 274.717 li
202.801 274.717 li
202.801 274.91 li
202.995 274.91 li
202.995 275.103 li
203.187 275.103 li
203.187 275.296 li
203.38 275.296 li
203.38 275.488 li
203.574 275.488 li
203.574 275.681 li
203.766 275.873 li
203.766 276.065 li
203.959 276.259 li
203.959 276.451 li
204.152 276.451 li
204.152 276.644 li
204.345 276.836 li
204.345 277.029 li
204.539 277.029 li
204.539 277.415 li
204.731 277.415 li
204.731 277.607 li
205.503 277.607 li
205.503 277.415 li
205.697 277.223 li
205.697 277.03 li
205.89 276.837 li
205.89 276.451 li
206.083 276.259 li
206.083 275.872 li
206.275 275.68 li
206.275 275.294 li
206.468 274.907 li
206.468 274.328 li
206.662 273.942 li
206.662 273.363 li
206.855 273.17 li
206.855 272.591 li
207.047 272.398 li
207.047 271.818 li
207.24 271.433 li
207.24 270.853 li
207.433 270.467 li
207.433 269.695 li
207.626 269.309 li
207.626 268.729 li
207.82 268.343 li
207.82 267.764 li
208.011 267.57 li
208.011 266.99 li
208.205 266.604 li
208.205 266.219 li
208.398 265.833 li
208.398 265.061 li
208.591 264.868 li
208.591 264.288 li
208.785 264.096 li
208.785 263.71 li
208.976 263.517 li
208.976 263.131 li
209.169 262.938 li
209.169 262.358 li
209.363 262.167 li
209.363 261.974 li
209.556 261.781 li
209.556 261.588 li
209.75 261.396 li
209.75 261.203 li
209.941 261.203 li
209.941 261.011 li
210.134 261.011 li
210.134 260.817 li
210.713 260.817 li
210.713 261.011 li
210.907 261.011 li
210.907 261.203 li
211.099 261.203 li
211.099 261.396 li
211.292 261.588 li
211.292 261.781 li
211.486 261.974 li
211.486 262.167 li
211.678 262.358 li
211.678 262.552 li
211.872 262.744 li
211.872 262.937 li
212.064 263.13 li
212.064 263.516 li
212.257 263.708 li
212.257 264.094 li
212.451 264.286 li
212.451 264.673 li
212.644 264.673 li
212.644 265.059 li
212.836 265.252 li
212.836 265.639 li
213.029 265.831 li
213.029 266.217 li
213.222 266.409 li
213.222 266.796 li
213.416 266.796 li
213.416 267.182 li
213.609 267.374 li
213.609 267.761 li
213.801 267.761 li
213.801 268.34 li
213.994 268.533 li
213.994 268.918 li
214.187 268.918 li
214.187 269.305 li
214.38 269.497 li
214.38 269.883 li
214.574 270.076 li
214.574 270.462 li
214.766 270.654 li
214.766 271.234 li
214.958 271.427 li
214.958 271.813 li
215.152 272.199 li
215.152 272.585 li
215.345 272.778 li
215.345 273.357 li
215.539 273.55 li
215.539 274.13 li
215.731 274.322 li
215.731 275.288 li
215.923 275.48 li
215.923 276.061 li
216.117 276.446 li
216.117 277.026 li
216.309 277.411 li
216.309 277.991 li
216.503 278.377 li
216.503 278.957 li
216.696 279.343 li
216.696 280.309 li
216.888 280.501 li
216.888 281.08 li
217.082 281.273 li
217.274 281.08 li
217.274 280.501 li
217.467 280.309 li
217.467 279.536 li
217.66 279.149 li
217.66 278.185 li
217.853 277.799 li
217.853 277.026 li
218.046 276.834 li
218.046 276.062 li
218.239 275.676 li
218.239 275.097 li
218.432 274.709 li
218.432 273.744 li
218.625 273.551 li
218.625 272.972 li
218.818 272.585 li
218.818 272.006 li
219.011 271.813 li
219.011 271.234 li
219.204 271.041 li
219.204 270.655 li
219.397 270.27 li
219.397 269.689 li
219.589 269.497 li
219.589 269.305 li
219.783 269.112 li
219.783 268.726 li
219.976 268.533 li
219.976 268.341 li
220.168 268.147 li
220.168 267.955 li
220.362 267.955 li
220.362 267.763 li
220.748 267.377 li
221.907 267.377 li
221.907 267.569 li
222.292 267.569 li
222.292 267.763 li
222.679 267.763 li
222.679 267.954 li
223.066 267.954 li
223.066 268.147 li
223.452 268.147 li
223.452 268.34 li
223.837 268.34 li
224.031 268.533 li
224.224 268.533 li
224.224 268.725 li
224.417 268.725 li
224.417 268.918 li
224.61 268.918 li
224.996 269.304 li
224.996 269.497 li
225.189 269.497 li
225.189 269.688 li
225.382 269.882 li
225.382 270.074 li
225.575 270.074 li
225.575 270.268 li
225.767 270.46 li
225.767 270.652 li
225.96 270.652 li
225.96 271.039 li
226.154 271.231 li
226.154 271.424 li
226.347 271.424 li
226.347 271.811 li
226.54 271.811 li
226.54 272.196 li
226.732 272.196 li
226.732 272.389 li
226.925 272.581 li
226.925 272.968 li
227.119 272.968 li
227.119 273.354 li
227.312 273.354 li
227.312 273.546 li
227.504 273.739 li
227.504 273.932 li
227.697 273.932 li
227.697 274.317 li
227.89 274.317 li
227.89 274.51 li
228.083 274.703 li
228.083 274.896 li
228.277 274.896 li
228.277 275.088 li
228.469 275.088 li
228.469 275.28 li
228.662 275.28 li
228.662 275.475 li
228.855 275.475 li
228.855 275.667 li
229.047 275.667 li
229.047 275.859 li
229.242 275.859 li
229.242 276.052 li
229.434 276.052 li
229.434 276.244 li
229.626 276.244 li
229.626 276.438 li
229.82 276.438 li
230.206 276.823 li
230.4 276.823 li
230.4 277.016 li
230.591 277.016 li
230.591 277.209 li
230.785 277.209 li
230.785 277.401 li
230.978 277.401 li
230.978 277.594 li
231.17 277.594 li
231.17 277.786 li
231.365 277.786 li
231.556 277.979 li
231.75 277.979 li
231.75 278.172 li
232.136 278.172 li
232.329 278.364 li
232.714 278.364 li
232.714 278.172 li
233.294 278.172 li
233.294 277.979 li
233.488 277.979 li
233.488 277.786 li
233.874 277.786 li
233.874 277.594 li
@
249.441 215.008 mo
249.441 212.69 li
249.635 211.725 li
249.635 209.601 li
249.826 208.635 li
249.826 206.703 li
250.02 205.737 li
250.02 204.192 li
250.213 203.227 li
250.213 201.102 li
250.406 200.329 li
250.406 199.17 li
250.598 198.591 li
250.598 197.625 li
250.791 197.238 li
250.791 196.467 li
250.984 196.273 li
250.984 195.693 li
251.178 195.501 li
251.371 195.501 li
251.371 195.887 li
251.564 196.08 li
251.564 196.467 li
251.756 196.853 li
251.756 197.625 li
251.949 198.205 li
251.949 199.943 li
252.143 200.715 li
252.143 202.261 li
252.336 203.033 li
252.336 204.771 li
252.529 205.737 li
252.529 207.669 li
252.721 208.828 li
252.721 211.146 li
252.914 212.305 li
252.914 215.975 li
253.107 217.327 li
253.107 220.03 li
253.301 221.383 li
253.301 224.28 li
253.494 225.632 li
253.494 228.529 li
253.686 230.075 li
253.686 233.166 li
253.879 234.517 li
253.879 239.152 li
254.072 240.698 li
254.072 243.596 li
254.266 245.141 li
254.266 248.038 li
254.457 249.391 li
254.457 252.288 li
254.65 253.447 li
254.65 256.15 li
254.844 257.31 li
254.844 260.593 li
255.037 261.559 li
255.037 263.297 li
255.23 264.068 li
255.23 265.228 li
255.422 265.614 li
255.422 266.193 li
255.615 266.386 li
255.615 266.579 li
255.615 266.386 li
255.809 266.193 li
255.809 265.808 li
256.002 265.615 li
256.002 264.843 li
256.193 264.457 li
256.193 263.685 li
256.387 263.492 li
256.387 262.72 li
256.58 262.334 li
256.58 261.368 li
256.773 260.982 li
256.773 260.596 li
256.967 260.403 li
256.967 260.017 li
257.158 259.824 li
257.158 259.438 li
257.352 259.438 li
257.352 259.245 li
257.545 259.245 li
257.932 259.631 li
257.932 259.824 li
258.125 260.017 li
258.125 260.211 li
258.316 260.402 li
258.316 260.79 li
258.51 260.982 li
258.51 261.562 li
258.703 261.754 li
258.703 262.334 li
258.896 262.526 li
258.896 262.913 li
259.09 263.299 li
259.09 263.685 li
259.281 263.878 li
259.281 264.457 li
259.475 264.649 li
259.475 265.422 li
259.668 265.614 li
259.668 266.193 li
259.861 266.386 li
259.861 266.966 li
260.055 267.159 li
260.055 267.545 li
260.246 267.931 li
260.246 268.511 li
260.439 268.704 li
260.439 269.283 li
260.633 269.476 li
260.633 269.861 li
260.826 270.248 li
260.826 270.634 li
261.018 270.826 li
261.018 271.212 li
261.211 271.405 li
261.211 271.984 li
261.404 272.177 li
261.404 272.37 li
261.598 272.562 li
261.598 272.948 li
261.791 273.142 li
261.791 273.334 li
261.982 273.526 li
261.982 273.719 li
262.176 273.719 li
262.176 274.105 li
262.369 274.105 li
262.369 274.299 li
262.563 274.49 li
262.563 274.684 li
262.754 274.684 li
262.754 274.876 li
262.947 274.876 li
262.947 275.069 li
263.141 275.261 li
263.141 275.454 li
263.334 275.454 li
263.334 275.646 li
263.527 275.646 li
263.527 275.84 li
263.721 275.84 li
263.721 276.032 li
264.492 276.805 li
264.686 276.805 li
264.686 276.997 li
264.879 276.997 li
264.879 277.189 li
265.266 277.189 li
265.266 277.382 li
265.457 277.382 li
265.65 277.574 li
265.844 277.574 li
265.844 277.768 li
266.23 277.768 li
266.23 277.961 li
267.389 277.961 li
267.389 277.768 li
267.775 277.768 li
267.775 277.574 li
268.162 277.574 li
268.354 277.382 li
269.32 277.382 li
269.32 277.574 li
269.512 277.574 li
270.285 278.347 li
270.285 278.54 li
270.479 278.54 li
270.479 278.733 li
270.67 278.925 li
270.67 279.118 li
270.863 279.311 li
270.863 279.504 li
271.057 279.504 li
271.057 279.696 li
271.25 279.889 li
271.25 280.081 li
271.443 280.273 li
271.443 280.66 li
271.635 280.853 li
271.635 281.045 li
271.828 281.238 li
271.828 281.431 li
272.021 281.623 li
272.021 281.816 li
272.215 282.009 li
272.215 282.202 li
272.408 282.202 li
272.408 282.009 li
272.6 281.816 li
272.6 281.623 li
272.793 281.623 li
272.793 281.237 li
272.986 281.237 li
272.986 281.044 li
273.18 280.852 li
273.18 280.658 li
273.373 280.658 li
273.373 280.273 li
273.564 280.273 li
273.564 280.08 li
273.758 280.08 li
273.758 279.888 li
273.951 279.888 li
273.951 279.695 li
274.145 279.695 li
274.145 279.503 li
274.531 279.503 li
274.723 279.31 li
275.109 279.31 li
275.109 279.503 li
275.496 279.503 li
275.496 279.695 li
275.883 279.695 li
275.883 279.888 li
276.074 279.888 li
276.074 280.08 li
276.268 280.08 li
276.268 280.273 li
276.461 280.273 li
276.461 280.466 li
276.654 280.466 li
276.654 280.658 li
276.848 280.658 li
276.848 280.851 li
277.039 281.044 li
277.039 281.237 li
277.232 281.237 li
277.426 281.43 li
277.619 281.43 li
277.619 281.622 li
278.004 281.622 li
278.197 281.43 li
278.391 281.43 li
278.391 281.237 li
278.584 281.237 li
278.971 280.851 li
279.162 280.851 li
279.162 280.657 li
279.355 280.657 li
279.355 280.465 li
279.742 280.465 li
279.742 280.272 li
281.094 280.272 li
281.094 280.465 li
281.48 280.465 li
281.48 280.657 li
281.672 280.657 li
281.672 280.851 li
282.059 280.851 li
282.059 281.044 li
282.252 281.044 li
282.252 281.236 li
282.445 281.236 li
282.445 281.429 li
282.637 281.429 li
282.637 281.621 li
282.832 281.621 li
282.832 281.813 li
283.797 281.813 li
283.797 281.621 li
283.99 281.621 li
283.99 281.429 li
284.184 281.429 li
284.375 281.236 li
284.568 281.236 li
284.568 281.044 li
284.762 281.044 li
284.762 280.851 li
285.148 280.851 li
285.148 280.657 li
285.342 280.657 li
285.342 280.465 li
285.727 280.465 li
285.92 280.272 li
286.113 280.272 li
286.307 280.079 li
286.498 280.079 li
286.691 279.887 li
286.885 279.887 li
287.078 279.694 li
287.271 279.694 li
287.271 279.502 li
287.656 279.502 li
287.656 279.309 li
287.85 279.309 li
288.043 279.116 li
288.236 279.116 li
288.236 278.924 li
288.428 278.924 li
288.621 278.731 li
288.814 278.731 li
288.814 278.539 li
289.008 278.539 li
289.008 278.346 li
289.201 278.346 li
289.201 278.153 li
289.393 278.153 li
289.779 277.768 li
289.973 277.768 li
289.973 277.574 li
290.166 277.574 li
290.166 277.381 li
290.357 277.381 li
290.357 277.188 li
290.551 277.188 li
290.744 276.996 li
290.938 276.996 li
290.938 276.804 li
291.324 276.804 li
291.324 276.61 li
291.709 276.61 li
291.709 276.418 li
293.061 276.418 li
293.254 276.61 li
293.641 276.61 li
293.641 276.804 li
293.834 276.804 li
293.834 276.996 li
294.027 276.996 li
294.219 277.188 li
294.412 277.188 li
294.412 277.381 li
294.605 277.381 li
294.605 277.574 li
295.572 278.54 li
295.572 278.733 li
295.766 278.733 li
295.766 278.926 li
295.957 278.926 li
295.957 279.118 li
296.15 279.118 li
296.15 279.311 li
296.344 279.311 li
296.344 279.504 li
296.535 279.504 li
296.535 279.696 li
296.73 279.696 li
296.73 279.889 li
296.922 279.889 li
296.922 280.081 li
297.309 280.081 li
297.309 280.273 li
298.467 280.273 li
298.467 280.081 li
299.047 280.081 li
299.047 279.889 li
299.627 279.889 li
299.627 279.696 li
300.205 279.696 li
300.398 279.504 li
300.979 279.504 li
300.979 279.311 li
301.365 279.311 li
301.365 279.118 li
301.557 279.118 li
301.557 278.926 li
301.75 278.926 li
301.943 278.733 li
301.943 278.54 li
302.137 278.54 li
302.137 278.347 li
302.33 278.347 li
302.33 278.154 li
302.521 278.154 li
302.521 277.962 li
302.715 277.962 li
302.715 277.77 li
302.908 277.576 li
302.908 277.384 li
303.1 277.384 li
303.1 277.19 li
303.295 276.999 li
303.295 276.806 li
303.486 276.806 li
303.486 276.613 li
303.68 276.613 li
303.68 276.42 li
303.873 276.229 li
303.873 276.035 li
304.064 276.035 li
304.064 275.843 li
305.031 274.877 li
305.225 274.877 li
305.225 274.685 li
305.418 274.685 li
305.609 274.491 li
306.963 274.491 li
306.963 274.685 li
307.348 274.685 li
307.348 274.877 li
307.541 274.877 li
307.928 275.264 li
308.121 275.264 li
308.121 275.455 li
308.313 275.455 li
308.313 275.648 li
308.506 275.648 li
308.506 275.841 li
308.699 276.034 li
308.699 276.226 li
308.893 276.226 li
308.893 276.419 li
309.086 276.419 li
309.086 276.611 li
309.471 276.998 li
309.471 277.189 li
309.664 277.383 li
309.664 277.575 li
309.857 277.575 li
309.857 277.769 li
310.051 277.961 li
310.051 278.154 li
310.242 278.154 li
310.242 278.347 li
310.436 278.539 li
310.436 278.925 li
310.629 278.925 li
310.629 279.118 li
310.822 279.311 li
310.822 279.504 li
311.016 279.504 li
311.016 279.889 li
311.207 279.889 li
311.207 280.275 li
311.4 280.275 li
311.4 280.468 li
311.594 280.661 li
311.594 280.853 li
311.787 281.046 li
311.787 281.238 li
311.98 281.238 li
311.98 281.432 li
312.172 281.623 li
312.172 281.816 li
312.365 281.816 li
312.365 282.01 li
312.559 282.01 li
312.559 282.202 li
312.752 282.202 li
312.752 282.01 li
312.945 282.01 li
312.945 281.816 li
313.137 281.816 li
313.137 281.623 li
313.33 281.432 li
313.523 281.432 li
313.523 281.238 li
313.717 281.238 li
313.717 281.046 li
313.91 281.046 li
313.91 280.853 li
314.102 280.853 li
314.295 280.661 li
314.488 280.661 li
314.488 280.468 li
315.066 280.468 li
315.066 280.275 li
315.84 280.275 li
315.84 280.083 li
316.613 280.083 li
316.807 279.89 li
317.191 279.89 li
317.191 279.698 li
317.578 279.698 li
317.578 279.505 li
317.771 279.505 li
317.965 279.313 li
318.156 279.313 li
318.156 279.119 li
318.35 279.119 li
318.35 278.926 li
318.543 278.926 li
318.736 278.733 li
318.736 278.541 li
318.928 278.541 li
318.928 278.349 li
319.121 278.349 li
319.121 278.155 li
319.314 278.155 li
319.701 277.77 li
319.701 277.577 li
319.893 277.577 li
319.893 277.384 li
320.088 277.384 li
320.088 277.191 li
320.279 277.191 li
320.666 276.806 li
320.859 276.806 li
320.859 276.613 li
321.051 276.613 li
321.244 276.42 li
322.404 276.42 li
322.404 276.613 li
322.598 276.613 li
322.598 276.806 li
322.789 276.806 li
323.176 277.191 li
323.176 277.384 li
323.369 277.384 li
323.369 277.577 li
323.561 277.77 li
323.561 277.963 li
323.754 277.963 li
323.754 278.154 li
323.947 278.348 li
323.947 278.54 li
324.141 278.54 li
324.141 278.733 li
324.334 278.926 li
324.334 279.313 li
324.525 279.313 li
324.525 279.505 li
324.914 279.891 li
324.914 280.083 li
325.105 280.083 li
325.105 280.276 li
325.686 280.276 li
325.686 280.083 li
325.877 280.083 li
325.877 279.891 li
326.072 279.891 li
326.072 279.698 li
326.264 279.506 li
326.264 279.313 li
326.457 279.313 li
326.457 279.119 li
326.65 279.119 li
326.65 278.928 li
326.842 278.734 li
326.842 278.542 li
327.037 278.542 li
327.037 278.349 li
327.229 278.349 li
327.229 278.156 li
327.422 278.156 li
327.422 277.964 li
327.615 277.964 li
327.615 277.771 li
327.807 277.771 li
328.002 277.578 li
329.352 277.578 li
329.352 277.771 li
329.738 277.771 li
329.738 277.964 li
331.283 277.964 li
331.283 277.771 li
331.67 277.771 li
331.67 277.578 li
331.863 277.578 li
332.057 277.386 li
332.248 277.386 li
332.441 277.193 li
332.635 277.193 li
332.828 277.001 li
333.793 277.001 li
333.793 277.193 li
334.18 277.193 li
334.18 277.386 li
334.373 277.386 li
334.373 277.578 li
334.566 277.578 li
335.338 278.351 li
335.338 278.543 li
335.531 278.543 li
335.531 278.736 li
335.725 278.736 li
336.109 279.122 li
336.303 279.122 li
336.303 279.314 li
337.268 279.314 li
337.268 279.122 li
337.463 279.122 li
338.234 278.35 li
338.234 278.157 li
338.428 278.157 li
338.814 277.771 li
339.006 277.771 li
339.006 277.578 li
339.199 277.578 li
339.199 277.386 li
339.586 277.386 li
339.586 277.193 li
340.357 277.193 li
340.551 277.386 li
340.744 277.386 li
341.131 277.772 li
341.324 277.772 li
341.324 277.965 li
341.516 277.965 li
341.516 278.157 li
341.709 278.157 li
341.709 278.35 li
341.902 278.543 li
341.902 278.735 li
342.094 278.735 li
342.094 278.928 li
342.289 279.12 li
342.289 279.313 li
342.48 279.313 li
342.48 279.506 li
342.867 279.893 li
342.867 280.085 li
343.061 280.277 li
343.061 280.471 li
343.254 280.471 li
343.254 280.663 li
343.447 280.855 li
343.447 281.048 li
343.639 281.048 li
343.639 281.435 li
343.832 281.435 li
343.832 281.627 li
344.025 281.627 li
344.025 281.819 li
344.219 281.819 li
344.219 282.012 li
344.412 282.012 li
344.412 282.205 li
344.604 282.205 li
344.797 282.012 li
344.99 282.012 li
344.99 281.819 li
345.182 281.819 li
345.377 281.627 li
345.568 281.627 li
345.568 281.435 li
346.148 281.435 li
346.148 281.242 li
347.307 281.242 li
347.5 281.435 li
348.273 281.435 li
348.273 281.627 li
351.17 281.627 li
351.361 281.819 li
352.908 281.819 li
352.908 282.012 li
356.771 282.012 li
356.771 282.205 li
366.236 282.205 li
366.236 282.397 li
463.787 282.397 li
0.25 282.426 mo
78.8706 282.426 li
78.8706 282.233 li
83.8936 282.233 li
83.8936 282.04 li
84.6655 282.04 li
84.6655 281.848 li
85.4375 281.848 li
85.4375 281.655 li
86.79 281.655 li
86.79 281.463 li
87.7559 281.463 li
87.7559 281.655 li
88.9146 281.655 li
88.9146 281.848 li
89.687 281.848 li
89.8799 282.04 li
90.6523 282.04 li
90.6523 282.233 li
91.6182 282.233 li
91.6182 282.426 li
93.3564 282.426 li
93.5498 282.233 li
95.0947 282.233 li
95.0947 282.04 li
96.2539 282.04 li
96.2539 281.848 li
97.4126 281.848 li
97.4126 281.655 li
100.117 281.655 li
100.117 281.848 li
101.082 281.848 li
101.082 282.04 li
101.855 282.04 li
102.048 281.848 li
102.241 281.848 li
102.434 281.655 li
102.626 281.655 li
102.626 281.463 li
102.82 281.463 li
102.82 281.27 li
103.013 281.27 li
103.398 280.883 li
103.592 280.883 li
103.592 280.69 li
104.364 279.918 li
104.558 279.918 li
104.558 279.726 li
104.944 279.34 li
105.136 279.34 li
105.136 279.146 li
105.33 279.146 li
105.33 278.955 li
105.522 278.955 li
105.715 278.762 li
105.908 278.762 li
105.908 278.569 li
106.488 278.569 li
106.488 278.376 li
107.067 278.376 li
107.067 278.569 li
107.646 278.569 li
107.646 278.762 li
108.033 278.762 li
108.033 278.955 li
108.226 278.955 li
108.226 279.146 li
108.419 279.146 li
108.419 279.34 li
108.611 279.34 li
108.998 279.726 li
109.191 279.726 li
109.191 279.918 li
109.577 280.305 li
109.771 280.305 li
109.771 280.497 li
109.963 280.497 li
109.963 280.689 li
110.349 280.689 li
110.349 280.883 li
110.929 280.883 li
111.122 280.689 li
111.315 280.689 li
111.507 280.497 li
111.701 280.497 li
111.893 280.305 li
112.087 280.305 li
112.087 280.111 li
112.473 280.111 li
112.666 279.919 li
113.245 279.919 li
113.438 279.727 li
113.824 279.727 li
114.017 279.919 li
114.79 279.919 li
114.79 280.111 li
115.176 280.111 li
115.369 280.305 li
115.755 280.305 li
115.755 280.497 li
115.948 280.497 li
115.948 280.689 li
116.334 280.689 li
116.334 280.883 li
116.527 280.883 li
116.72 281.075 li
116.913 281.075 li
116.913 281.269 li
117.106 281.269 li
117.299 281.461 li
117.492 281.461 li
117.492 281.654 li
117.685 281.654 li
117.685 281.846 li
118.071 281.846 li
118.071 282.039 li
118.264 282.039 li
118.458 282.231 li
119.229 282.231 li
119.229 282.039 li
119.616 282.039 li
119.616 281.846 li
120.195 281.846 li
120.195 281.654 li
121.547 281.654 li
121.547 281.846 li
122.127 281.846 li
122.319 282.039 li
122.707 282.039 li
122.707 282.231 li
123.092 282.231 li
123.092 282.424 li
123.478 282.424 li
123.478 282.231 li
123.864 282.231 li
124.058 282.039 li
124.25 282.039 li
124.443 281.846 li
124.83 281.846 li
124.83 281.654 li
125.409 281.654 li
125.602 281.461 li
128.306 281.461 li
128.306 281.654 li
129.465 281.654 li
129.465 281.846 li
130.817 281.846 li
130.817 282.039 li
134.874 282.039 li
134.874 281.846 li
135.839 281.846 li
136.032 281.654 li
136.805 281.654 li
136.805 281.461 li
137.77 281.461 li
137.77 281.269 li
141.827 281.269 li
141.827 281.075 li
142.599 281.075 li
142.599 280.883 li
143.758 280.883 li
143.951 281.075 li
144.917 281.075 li
145.109 280.883 li
145.303 280.883 li
145.303 280.689 li
145.496 280.689 li
145.496 280.497 li
145.688 280.305 li
145.688 280.111 li
145.881 280.111 li
145.881 279.919 li
146.074 279.727 li
146.074 279.534 li
146.268 279.534 li
146.268 279.147 li
146.46 278.955 li
146.46 278.763 li
146.653 278.57 li
146.653 278.377 li
146.846 278.185 li
146.846 277.992 li
147.039 277.8 li
147.039 277.413 li
147.232 277.413 li
147.232 276.834 li
147.425 276.834 li
147.425 276.447 li
147.618 276.447 li
147.618 276.062 li
147.811 275.868 li
147.811 275.676 li
148.004 275.482 li
148.004 275.291 li
148.197 275.098 li
148.197 274.905 li
148.39 274.712 li
148.39 274.52 li
148.583 274.327 li
148.583 274.135 li
148.776 274.135 li
148.776 273.942 li
148.968 273.942 li
148.968 273.749 li
149.355 273.363 li
150.127 273.363 li
150.32 273.557 li
150.514 273.557 li
150.514 273.748 li
150.899 274.135 li
150.899 274.521 li
151.092 274.521 li
151.092 274.907 li
151.286 274.907 li
151.286 275.293 li
151.479 275.293 li
151.479 275.679 li
151.671 275.871 li
151.671 276.064 li
151.865 276.257 li
151.865 276.836 li
152.056 277.029 li
152.056 277.415 li
152.25 277.607 li
152.25 277.994 li
152.443 278.186 li
152.443 278.573 li
152.636 278.766 li
152.636 279.151 li
152.83 279.344 li
152.83 279.924 li
153.021 280.116 li
153.021 280.503 li
153.214 280.503 li
153.214 280.889 li
153.408 281.081 li
153.408 281.468 li
153.601 281.468 li
153.601 281.854 li
153.794 281.854 li
153.794 281.661 li
153.986 281.661 li
153.986 281.468 li
154.179 281.275 li
154.179 281.082 li
154.373 280.891 li
154.373 280.697 li
154.566 280.504 li
154.566 280.312 li
154.952 279.926 li
154.952 279.733 li
155.144 279.733 li
155.144 279.54 li
155.337 279.54 li
155.531 279.348 li
155.917 279.348 li
155.917 279.155 li
157.462 279.155 li
157.462 278.963 li
157.656 278.963 li
157.656 278.77 li
158.041 278.77 li
158.041 278.577 li
158.234 278.577 li
158.234 278.384 li
158.427 278.384 li
158.427 278.192 li
158.621 278.192 li
158.621 277.999 li
158.813 277.999 li
158.813 277.807 li
159.199 277.807 li
159.199 277.613 li
159.392 277.613 li
159.392 277.422 li
160.744 277.422 li
160.744 277.613 li
161.13 277.613 li
161.13 277.807 li
161.324 277.807 li
161.517 277.999 li
161.708 277.999 li
161.903 278.192 li
162.095 278.192 li
162.095 278.384 li
162.867 278.384 li
163.06 278.192 li
163.253 278.192 li
163.447 277.999 li
163.639 277.999 li
163.639 277.807 li
163.832 277.807 li
163.832 277.613 li
164.025 277.613 li
164.025 277.422 li
164.218 277.422 li
164.218 277.229 li
164.412 277.229 li
164.412 277.035 li
164.604 277.035 li
164.604 276.843 li
164.796 276.843 li
164.796 276.649 li
165.183 276.649 li
165.183 276.458 li
165.57 276.458 li
165.57 276.265 li
166.729 276.265 li
166.729 276.458 li
166.921 276.458 li
167.115 276.265 li
167.501 276.265 li
167.501 276.072 li
167.693 276.072 li
167.693 275.879 li
167.886 275.879 li
167.886 275.688 li
168.08 275.494 li
168.08 275.302 li
168.272 275.302 li
168.272 275.109 li
168.465 274.916 li
168.465 274.53 li
168.658 274.338 li
168.658 273.951 li
168.851 273.951 li
168.851 273.565 li
169.044 273.373 li
169.044 272.987 li
169.238 272.794 li
169.238 272.601 li
169.43 272.408 li
169.43 271.829 li
169.623 271.637 li
169.623 271.443 li
169.816 271.251 li
169.816 270.865 li
170.009 270.865 li
170.009 270.479 li
170.203 270.286 li
170.203 270.094 li
170.395 269.901 li
170.395 269.515 li
170.587 269.515 li
170.587 269.322 li
170.781 269.13 li
170.781 268.938 li
170.974 268.938 li
170.974 268.744 li
171.167 268.744 li
171.36 268.552 li
171.939 268.552 li
171.939 268.744 li
172.132 268.744 li
172.132 268.938 li
172.326 268.938 li
172.326 269.13 li
172.517 269.13 li
172.517 269.322 li
172.711 269.515 li
172.711 269.707 li
172.904 269.9 li
172.904 270.093 li
173.097 270.093 li
173.097 270.672 li
173.291 270.672 li
173.291 271.059 li
173.482 271.251 li
173.482 271.637 li
173.676 271.637 li
173.676 272.023 li
173.869 272.216 li
173.869 272.602 li
174.062 272.795 li
174.062 273.374 li
174.255 273.566 li
174.255 273.952 li
174.447 274.146 li
174.447 274.532 li
174.641 274.725 li
174.641 275.11 li
174.833 275.304 li
174.833 275.689 li
175.026 275.882 li
175.026 276.462 li
175.22 276.654 li
175.22 277.04 li
175.412 277.232 li
175.412 277.619 li
175.605 277.812 li
175.605 278.197 li
175.798 278.197 li
175.798 278.583 li
175.992 278.776 li
175.992 279.162 li
176.185 279.162 li
176.185 279.548 li
176.376 279.548 li
176.376 279.74 li
176.57 279.74 li
176.57 279.934 li
177.15 279.934 li
177.15 279.74 li
177.342 279.74 li
177.537 279.548 li
177.728 279.548 li
177.728 279.355 li
177.921 279.163 li
178.115 279.163 li
178.115 278.971 li
178.307 278.971 li
178.5 278.777 li
178.886 278.777 li
178.886 278.586 li
179.852 278.586 li
179.852 278.777 li
180.431 278.777 li
180.431 278.586 li
180.818 278.586 li
180.818 278.393 li
181.011 278.393 li
181.204 278.2 li
181.204 278.007 li
181.396 278.007 li
181.396 277.814 li
181.589 277.622 li
181.589 277.43 li
181.783 277.236 li
181.783 277.043 li
181.976 276.851 li
181.976 276.658 li
182.168 276.466 li
182.168 276.079 li
182.361 276.079 li
182.361 275.5 li
182.554 275.308 li
182.554 275.114 li
182.748 274.922 li
182.748 274.536 li
182.941 274.343 li
182.941 273.958 li
183.133 273.765 li
183.133 273.379 li
183.326 273.379 li
183.326 272.799 li
183.519 272.606 li
183.519 272.221 li
183.712 272.028 li
183.712 271.835 li
183.906 271.642 li
183.906 271.256 li
184.098 271.063 li
184.098 270.87 li
184.292 270.678 li
184.292 270.292 li
184.484 270.1 li
184.484 269.906 li
184.677 269.714 li
184.677 269.521 li
184.871 269.329 li
184.871 269.136 li
185.063 269.136 li
185.063 268.943 li
185.256 268.943 li
185.256 268.751 li
185.449 268.751 li
185.449 268.559 li
186.221 268.559 li
186.221 268.751 li
186.415 268.751 li
186.415 268.943 li
186.607 268.943 li
186.607 269.136 li
186.8 269.136 li
186.8 269.522 li
186.994 269.522 li
186.994 269.908 li
187.185 270.101 li
187.185 270.486 li
187.378 270.68 li
187.378 270.872 li
187.572 271.064 li
187.572 271.45 li
187.765 271.837 li
187.765 272.224 li
187.958 272.415 li
187.958 273.188 li
188.15 273.38 li
188.15 273.768 li
188.343 274.153 li
188.343 274.539 li
188.537 274.926 li
188.537 275.312 li
188.73 275.697 li
188.73 276.276 li
188.923 276.47 li
188.923 277.241 li
189.115 277.628 li
189.115 278.207 li
189.308 278.399 li
189.308 278.979 li
189.501 279.365 li
189.501 279.752 li
189.695 280.138 li
189.695 280.717 li
189.887 280.909 li
189.887 281.489 li
190.08 281.682 li
190.08 281.874 li
190.273 281.874 li
190.273 281.682 li
190.466 281.489 li
190.466 281.103 li
190.66 280.91 li
190.66 280.331 li
190.852 280.138 li
190.852 279.752 li
191.045 279.56 li
191.045 279.367 li
191.238 279.174 li
191.238 278.982 li
191.431 278.789 li
191.431 278.596 li
191.625 278.596 li
191.625 278.403 li
191.817 278.21 li
192.01 278.21 li
192.01 278.018 li
193.169 278.018 li
193.169 277.825 li
193.555 277.825 li
193.555 277.633 li
193.748 277.439 li
193.748 277.247 li
193.941 277.247 li
193.941 277.055 li
194.134 276.862 li
194.134 276.669 li
194.327 276.477 li
194.327 276.284 li
194.52 276.092 li
194.52 275.512 li
194.712 275.512 li
194.712 275.126 li
194.906 274.934 li
194.906 274.74 li
195.099 274.547 li
195.099 274.161 li
195.291 273.969 li
195.291 273.582 li
195.485 273.391 li
195.485 273.197 li
195.677 273.005 li
195.677 272.812 li
195.871 272.62 li
195.871 272.427 li
196.064 272.234 li
196.064 272.041 li
196.255 272.041 li
196.255 271.655 li
196.45 271.655 li
196.45 271.463 li
196.642 271.463 li
196.642 271.271 li
197.029 271.271 li
197.029 271.077 li
197.416 271.077 li
197.416 271.271 li
197.801 271.271 li
197.801 271.463 li
197.994 271.463 li
197.994 271.655 li
198.187 271.655 li
198.187 271.848 li
198.38 272.041 li
198.38 272.233 li
198.572 272.233 li
198.572 272.426 li
198.766 272.619 li
198.766 272.811 li
198.958 273.004 li
198.958 273.196 li
199.152 273.39 li
199.152 273.775 li
199.345 273.968 li
199.345 274.354 li
199.538 274.354 li
199.538 274.74 li
199.73 274.934 li
199.73 275.126 li
199.923 275.319 li
199.923 275.704 li
200.117 275.897 li
200.117 276.283 li
200.31 276.283 li
200.31 276.669 li
200.502 276.669 li
200.502 276.862 li
200.695 277.055 li
200.695 277.247 li
200.888 277.247 li
200.888 277.439 li
201.275 277.439 li
201.275 277.247 li
201.467 277.247 li
201.467 277.055 li
201.66 277.055 li
201.66 276.862 li
201.853 276.669 li
201.853 276.477 li
202.046 276.284 li
202.046 276.092 li
202.24 275.898 li
202.24 275.706 li
202.432 275.514 li
202.432 275.32 li
202.625 275.32 li
202.625 275.128 li
202.818 274.935 li
202.818 274.742 li
203.011 274.55 li
203.011 274.357 li
203.205 274.357 li
203.397 274.164 li
203.783 274.164 li
203.976 274.357 li
204.169 274.357 li
204.169 274.55 li
204.362 274.742 li
204.362 274.935 li
204.555 274.935 li
204.555 275.321 li
204.748 275.514 li
204.748 275.706 li
204.941 275.899 li
204.941 276.286 li
205.134 276.478 li
205.134 276.671 li
205.327 276.863 li
205.327 277.249 li
205.519 277.249 li
205.519 277.829 li
205.712 277.829 li
205.712 278.021 li
205.906 278.021 li
205.906 278.214 li
206.292 277.828 li
206.292 277.636 li
206.484 277.442 li
206.484 276.863 li
206.677 276.671 li
206.677 276.092 li
206.871 275.898 li
206.871 275.319 li
207.064 274.934 li
207.064 274.354 li
207.257 274.161 li
207.257 273.581 li
207.449 273.195 li
207.449 272.229 li
207.642 272.037 li
207.642 271.265 li
207.835 271.072 li
207.835 270.493 li
208.029 270.106 li
208.029 269.527 li
208.222 269.334 li
208.222 268.755 li
208.414 268.563 li
208.414 267.79 li
208.607 267.598 li
208.607 267.018 li
208.8 266.825 li
208.8 266.439 li
208.994 266.246 li
208.994 265.861 li
209.186 265.668 li
209.186 265.088 li
209.378 265.088 li
209.378 264.702 li
209.572 264.702 li
209.572 264.51 li
209.765 264.317 li
209.765 264.124 li
209.958 264.124 li
209.958 263.932 li
210.151 263.932 li
210.151 263.738 li
210.343 263.738 li
210.343 263.546 li
210.923 263.546 li
210.923 263.738 li
211.31 263.738 li
211.31 263.932 li
211.502 263.932 li
211.502 264.124 li
211.695 264.124 li
211.695 264.317 li
211.888 264.317 li
211.888 264.51 li
212.082 264.51 li
212.082 264.702 li
212.275 264.896 li
212.275 265.087 li
212.467 265.087 li
212.467 265.28 li
212.66 265.28 li
212.66 265.473 li
212.853 265.666 li
212.853 265.857 li
213.046 265.857 li
213.046 266.244 li
213.24 266.437 li
213.24 266.63 li
213.432 266.63 li
213.432 267.016 li
213.625 267.016 li
213.625 267.401 li
213.818 267.595 li
213.818 267.98 li
214.01 268.173 li
214.01 268.561 li
214.205 268.752 li
214.205 269.139 li
214.397 269.331 li
214.397 269.717 li
214.589 269.909 li
214.589 270.296 li
214.783 270.682 li
214.783 271.453 li
214.975 271.646 li
214.975 272.227 li
215.169 272.418 li
215.169 272.998 li
215.362 273.384 li
215.362 273.964 li
215.554 274.35 li
215.554 274.93 li
215.748 275.315 li
215.748 276.28 li
215.94 276.667 li
215.94 277.438 li
216.134 277.825 li
216.134 278.598 li
216.326 278.982 li
216.326 279.756 li
216.519 280.142 li
216.519 280.721 li
216.712 281.106 li
216.712 281.493 li
216.905 281.3 li
216.905 280.721 li
217.098 280.335 li
217.098 279.563 li
217.291 279.177 li
217.291 278.211 li
217.484 277.825 li
217.484 277.053 li
217.677 276.667 li
217.677 275.508 li
217.87 275.122 li
217.87 274.156 li
218.063 273.771 li
218.063 273.191 li
218.255 272.805 li
218.255 272.033 li
218.449 271.646 li
218.449 270.681 li
218.642 270.295 li
218.642 269.715 li
218.834 269.33 li
218.834 268.75 li
219.028 268.364 li
219.028 267.784 li
219.22 267.592 li
219.22 267.013 li
219.414 266.819 li
219.414 266.24 li
219.607 265.854 li
219.607 265.469 li
219.8 265.275 li
219.8 265.083 li
219.993 264.889 li
219.993 264.504 li
220.185 264.311 li
220.185 264.118 li
220.378 264.118 li
220.378 263.732 li
220.571 263.732 li
220.571 263.539 li
220.765 263.347 li
220.958 263.347 li
220.958 263.154 li
221.73 263.154 li
221.923 263.347 li
222.115 263.347 li
222.115 263.539 li
222.309 263.539 li
222.309 263.732 li
222.501 263.732 li
222.501 263.925 li
222.695 263.925 li
222.695 264.117 li
223.082 264.504 li
223.082 264.696 li
223.274 264.889 li
223.274 265.082 li
223.466 265.082 li
223.466 265.274 li
223.66 265.468 li
223.66 265.659 li
223.852 265.659 li
223.852 266.046 li
224.045 266.046 li
224.045 266.433 li
224.238 266.624 li
224.238 266.817 li
224.431 267.01 li
224.431 267.203 li
224.625 267.396 li
224.625 267.588 li
224.817 267.78 li
224.817 267.973 li
225.01 268.166 li
225.01 268.552 li
225.203 268.744 li
225.203 269.132 li
225.396 269.323 li
225.396 269.517 li
225.589 269.709 li
225.589 270.096 li
225.782 270.287 li
225.782 270.48 li
225.975 270.673 li
225.975 271.252 li
226.167 271.445 li
226.167 271.831 li
226.361 272.023 li
226.361 272.216 li
226.554 272.409 li
226.554 272.795 li
226.747 272.987 li
226.747 273.374 li
226.94 273.566 li
226.94 273.952 li
227.132 274.146 li
227.132 274.532 li
227.326 274.724 li
227.326 275.11 li
227.519 275.304 li
227.519 275.496 li
227.71 275.688 li
227.71 276.268 li
227.905 276.268 li
227.905 276.653 li
228.097 276.847 li
228.097 277.039 li
228.291 277.232 li
228.291 277.424 li
228.484 277.617 li
228.484 278.003 li
228.675 278.003 li
228.675 278.389 li
228.87 278.582 li
228.87 278.774 li
229.062 278.774 li
229.062 279.161 li
229.255 279.161 li
229.255 279.353 li
229.642 279.739 li
229.642 279.933 li
229.834 279.933 li
229.834 280.125 li
230.027 280.125 li
230.027 280.317 li
230.22 280.317 li
230.413 280.511 li
230.606 280.511 li
230.606 280.703 li
231.378 280.703 li
231.378 280.896 li
232.152 280.896 li
232.152 281.088 li
232.537 281.088 li
232.73 281.281 li
232.923 281.281 li
233.116 281.474 li
233.309 281.474 li
233.309 281.666 li
233.695 281.666 li
233.695 281.859 li
233.888 281.859 li
234.081 282.051 li
234.274 282.051 li
234.274 282.244 li
234.66 282.244 li
234.66 282.051 li
235.046 282.051 li
235.24 281.859 li
235.432 281.859 li
235.625 281.666 li
236.398 281.666 li
236.398 281.474 li
236.59 281.474 li
236.59 281.666 li
237.75 281.666 li
237.943 281.859 li
238.521 281.859 li
238.521 281.666 li
239.488 281.666 li
239.488 281.859 li
239.875 281.859 li
239.875 282.051 li
240.068 282.051 li
240.26 282.244 li
240.453 282.244 li
240.646 282.051 li
240.646 281.859 li
240.84 281.859 li
240.84 281.473 li
241.033 281.28 li
241.033 281.087 li
241.225 280.896 li
241.225 280.702 li
241.418 280.51 li
241.418 280.316 li
241.611 280.125 li
241.611 279.545 li
241.803 279.352 li
241.803 279.16 li
241.998 278.967 li
241.998 278.58 li
242.189 278.388 li
242.189 278.002 li
242.383 277.809 li
242.383 277.423 li
242.576 277.23 li
242.576 276.65 li
242.768 276.458 li
242.768 276.072 li
242.961 275.879 li
242.961 275.493 li
243.154 275.301 li
243.154 274.914 li
243.348 274.722 li
243.348 274.529 li
243.541 274.337 li
243.541 273.95 li
243.732 273.758 li
243.732 273.565 li
243.926 273.373 li
243.926 273.18 li
244.119 272.986 li
244.119 272.795 li
244.313 272.795 li
244.313 272.602 li
244.506 272.602 li
244.506 272.409 li
245.277 271.637 li
245.277 271.444 li
245.471 271.444 li
245.471 271.058 li
245.664 270.866 li
245.664 270.479 li
245.855 270.093 li
245.855 269.514 li
246.049 269.128 li
246.049 268.355 li
246.242 267.97 li
246.242 266.425 li
246.436 265.846 li
246.436 264.687 li
246.629 264.107 li
246.629 262.562 li
246.82 261.789 li
246.82 260.244 li
247.014 259.472 li
247.014 257.733 li
247.207 256.768 li
247.207 253.87 li
247.4 252.712 li
247.4 250.586 li
247.594 249.621 li
247.594 247.303 li
247.785 246.337 li
247.785 244.02 li
247.979 242.668 li
247.979 240.35 li
248.172 239.191 li
248.172 235.52 li
248.365 234.361 li
248.365 231.85 li
248.557 230.499 li
248.557 227.987 li
248.75 226.828 li
248.75 224.316 li
248.943 223.157 li
248.943 220.84 li
249.137 219.488 li
249.137 216.203 li
249.33 215.045 li
0 0.992157 1 0 cmyk
@
1 lw
0.25 282.426 mo
463.861 282.426 li
0 0 0 1 cmyk
@
447.637 282.426 mo
447.637 284.55 li
401.275 282.426 mo
401.275 284.55 li
354.912 282.426 mo
354.912 284.55 li
308.553 282.426 mo
308.553 284.55 li
262.191 282.426 mo
262.191 284.55 li
215.83 282.426 mo
215.83 284.55 li
169.468 282.426 mo
169.468 284.55 li
123.107 282.426 mo
123.107 284.55 li
76.7451 282.426 mo
76.7451 284.55 li
30.3843 282.426 mo
30.3843 284.55 li
447.637 282.426 mo
447.637 286.675 li
401.275 282.426 mo
401.275 286.675 li
354.912 282.426 mo
354.912 286.675 li
308.553 282.426 mo
308.553 286.675 li
262.191 282.426 mo
262.191 286.675 li
215.83 282.426 mo
215.83 286.675 li
169.468 282.426 mo
169.468 286.675 li
123.107 282.426 mo
123.107 286.675 li
76.7451 282.426 mo
76.7451 286.675 li
30.3843 282.426 mo
30.3843 286.675 li
@
0.74902 0.678431 0.670588 0.901961 cmyk
%ADOBeginSubsetFont: Verdana Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /Verdana def/FontInfo 5 dict dup begin/ItalicAngle 0 def/FSType 8 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 47 /slash putdup 48 /zero putdup 49 /one putdup 50 /two putdup 51 /three putdup 52 /four putdup 53 /five putdup 54 /six putdup 55 /seven putdup 56 /eight putdup 57 /nine putdup 65 /A putdup 69 /E putdup 76 /L putdup 83 /S putdup 84 /T putdup 97 /a putdup 101 /e putdup 103 /g putdup 105 /i putdup 108 /l putdup 109 /m putdup 110 /n putdup 111 /o putdup 112 /p putdup 114 /r putdup 115 /s putdup 118 /v putdef/FontBBox {-495 -303 1447 1000} defendsystemdict begindup /Private7 dict dup begin/|- {def} def/| {put} def/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings29 dict dup begin/.notdef <1C60D8A8C9B5EE310300EE23D0BA079325E1D5F86AF2FE7A7EE2F631B34F7BA2033FD0FF> |-/slash <1C60D8A8C9B775D2BC77C85C7DB303A7007C772ABC5E3290C17372> |-/zero <1C60D8A8C9B67106DD216529DF8919376E4B8035CE246FCA72396D6451C1F20F7809939658548E1AC91F9BF9D8AD9EE86897FA85911C3ED67669062FD13C1AF6C6F458FBF26DEAB856CC1B3EA4173CD11AFE7CD1FC1A6C46106948139B7CC4C31C2947EA422E799722FE1B344BD4388CACFDEFAEACBDC75C456BA36CBC689C4DF09598E3F1EC257B3C2AB7998E5A51DF8283FB5EABB5C34CC4027BFBA57AFBCC75D9D9DE6A3430904034B179DA55ACC87A429AC01D2CAD612C5F8197C5010D6F2B> |-/one <1C60D8A8C9B67106DD1668EB967A9147D238CA51A01C98B02C46667505F3BD0057F3CA9FC142B4512000A3AE9804D0F8112ADD1C6AB5A5EAFAE0F174B030A2B31600> |-/two <1C60D8A8C9B67106DD7D147759456A5153EBAAE83CEB7653B00B046C05C1CC45CEC60AA12F2216EC004ADB0BA83443819196559C083389911B3DC327517D5BDCD3A0CC2B4F2474BD2F747C4A5106B2458E5D80BD93A11B8D81A22BED99087E877590BDEA9E8C46B027AA4534A5E3B71E8F722768D6082276406F7B62409ED2AF8CE9E63DE2481027EF0BB74A150356CEEE378534C5C98FFB> |-/three <1C60D8A8C9B67106DDEF4FA9838E7D17B8FBEF0A9FFCB05AAFA63B842F1C496F8E53646F3AE02774A4E18A976DCE479965790705DC5569ADC5FA2D835A8A75A444704C27E59C05E21F26685EE5B8C6FF460F51BDF9804C8CCE00E421176CFDFA7BBC9622354B001295E23A966A5F53ED0A6CCE187B5A4DC460E3DAFE89C4ADEDCDCE1BE369F3358DCE58472A414E90F4548A8A89BDB213E741DF44FA35CF30735CA2E2F8A0AE116962F73E5451FAED633F0F5523C5B8CE732CFB310EA3CCC75EC1D8CB19C6294395E7A011541650DEEFD7928D725BAB33CFAA5B4FC34A14F3B95306B32B90D6B4B607AAE19B5DB94AC0DB5778D5141428ACB72C735751813595664048BBD53480D300C2B1138703A9316FE7FED339CA236E3F4C90> |-/four <1C60D8A8C9B67106DD531A4BC1BE6A0D8F1492A79FF72029DD45446642070A8B7CE59E0D1644AA518C25D58D911AF80DC7267F50D9D5EA1CD037> |-/five <1C60D8A8C9B67106DD0008B5D6D106AB6921C034D7DAF6B83530678CBF4A798B16D51C309A9AC09DE9147DF60935D56D5937B0DED291536DBF846FB0037D69F83456A55FC9CA36AA4D49650397C65890BC8C726AE42BD0DE57EF98E26E2055CDA7CEBBCA7C732569CE50BBB19C79A6865993154330B4A1072FEAE12E981AF46AE8D5507A4E5B86DCC1A67A8DDC62A80BF0063C2E9C9FD083256144B9C53B8AEFD32AC2BE66C49FE1BE01EF282DD54C2B49C67EBF997D62F60E82B6DA2A56D72FF6C22F04C2D94910AE> |-/six <1C60D8A8C9B67106DD7703E0B6D25209F9FB313AD706D78951360F3D82BD3DD642858421E14DD7E6059E322CC4BFB85D7234A638CB48875131F0F137E590DD99FE3DA7BBC4F35C5B84BE534F5FD88C3D85AEDF42125F70AD842F682C4EEFADC9EBA3FC5BCEE74B97D8F12DD174168773E63CE0DB0C531628769BCA3A4C0C821699F311CCC1407EFB4352708253E31296A841548A83F7AD464A1E1C6E3226193FF1D624F7FD0700FBF190F67D1B78C2CB92A73338F44135408CA94DD7F5B1212233F6CC5F6368CFB552056383D2FEB49D3670F54C2197518579FD9596FC13EAF9302EB05763A7369CCA375019D7B2F1D5ABE47EC0AAE7431854DB7CC21580A7A6071265BFC4676795B6E0CBF19640632B0CB1CEF9FB> |-/seven <1C60D8A8C9B67106DD62FC476CA709BBB353ECBDC0259220FA9C9175C96168EB788935> |-/eight <1C60D8A8C9B67106DD039CBAD3A9340C3AD2C6BA30246727BD6D0EA3A9018B6D21AC5E0B20D48CCFB26D2EA9C425254BDC44DEFFC76E179DDFED357B0BFF7D941EE4AB586FBA192CA77F4606B8DD935C91E0F7F2F046DB7C8B3FBAEF6CEDFDBD97A69B93CC7F8A770513050B5F5A12256669FC86B835195827B8E176FC5DD4022B286F90FCCEC1B4ACCA68EF5487B0AA3E0C5F174075EDE2814DCF7F2722040A9FD2644BE5BBAABD8E6534752D6686E4EF8C3E00119846066680349058D2DA0DF7F5C5CAF84BE1510F7BBF52779D0945D29B8ABD9A95569C6761A00519B42AEF096DA57261C65F991896213618178635DE9B52E542C81BCB3381BCADA2BC84FDC6204273555A4EA65496025601003D8C4363DEFD08EA7D525A> |-/nine <1C60D8A8C9B67106DD0B26F360027C448DB7BBD255D7B0BC8C8E74C77F4FED5BF75B051E400F65491DDFCF8F0EEB83C4CF44E5C25D0C1B8132E8EF5E42100C62E024F24990C32836927F8A7A2167E1F5830C2BD08F594ED3394662560A5E233BB3793DDE3D3C42D9C670D4540AAEF136A63A35D35CE27AC1EACFC7BEC2139DADBC7CBBF2843D0FCC3FC655504723748083FC92F618D7D7176615B1EFE2BA18B617C4E61D0502E57EDBF457C6C815DF575AF76AA0AA4FCA5DE923B9C600BD03480E000AF07592F6C2169B7B39DDAB8DFC4F4F83B557D010C0299FAA60F4238D3EB12B2EDC5BCEE79FACDBBACCAC064642C10053B08A01F291193461387CE594480337A799D6BAD7496C38A1792097506FE98CC4DB> |-/A <1C60D8A8C9B6218486B92750D09E44C5BF0DC6BEEFC8C745B5DA55D87D2CD449867574B8B312E6244E516B9E43898862BDED94BB148A> |-/E <1C60D8A8C9B66DDCB322396390B6A5DE47A431DE1884C93DCB0C2DE6FB4133A5B21EBF756BAEB904FA513CC931> |-/L <1C60D8A8C9B7EE7C164E4D6B7911D8905623000F3D2014925C4555F3> |-/S <1C60D8A8C9B62184864F924E9A18C3B33B973224BD29F57A40F78D89C04131FBF1F4C37D5997AFBEB76B12C4AEA4F3796E9D057B1100FCD4E729C5CFC948FB6D24F5A491A1901EB636E8135471AFE440D06BBEDF1F550BF62643E808ECEFA31AD95D51F81147A81D9B1DDF7155114DB632B1DEF8B043D968B321C3A2A1ACA2ACC5EF159878F023C80EDC76FDECDD9856D9B1F680FD385090A1CAE4C50D427C0FB167D37C7618EEE58BF0B933265C4E3B2AA4159F2533F439916DA256B3946315E9F6FCBB34E30760DD951641EAB62A7B48034EEFE356199A5FD9E6779F791E57122973DF86E7E9E52BA654> |-/T <1C60D8A8C9B7D3A67AE0BF87B87F8C9CBC634417CC3D852051E80025E1ED35F21107> |-/a <1C60D8A8C9B7C2FB347F76DEA7CFC5EA27C8305008249C1D5868CAF863E7FB2F56941B2BB6B357029020E905B18F8862B0B1E7435EFB2722433DCD4B7ECFAF31A574CA5884C0CD8517004C63A88A2670823EAC885327FF57D68A0D33E6E8B190AC3AA3E3E809984A83DE35CCDE018ABFD2476B6BF18271FDC2A2C4D4F14E67A280C1D51CB33F66D56EE6699840820E10A4A48DAD011E9030E88BEBA295045C291661DAAAB48D48CFD0832A6031D41D35D2E48092A1E68EB7225A558A4B4DB6D6F49E49ED70DB8EC5F30D66FDDA3BBC3F2994F2B00BAB141DAA2FEE2D01D11B05B12B74CEC1733B73318B9B65F3388DA3289839> |-/e <1C60D8A8C9B7C7F3A42375C1E7FE0FFC9F237511F7BCFA51522C939E071892C247166F42B7CE6E0AC434839289926F78DDE4AE5C21591DB49C9A22F0EFFEE250909D29A57EEB69D42E9D37C7D0E434990C75DC92D01AC5214A5E5F5676D30ACF100DF4C70A68BF99E755095603B5E76B35780A7202AE6A3E011FE7884E18802914EE6427D9D9336A71F6B1CC2AFBC173D22F374EF67D1C7EE0> |-/g <1C60D8A8C9B662FEEBADB613F7B70BF8794EE2DC9762855B19C716B410816CACE558B40E079353F1DDD4803A176A782C6C3C5DC67D1BF01E30C7D6D74DDD0C96BBAFE1F7E4E13018FB9E1646EBA5F00E608376198D36740AD0A4DDD8A9FB6CC5664B43225CBD5B7019364365950632A55EF1BB5E9DB7D1954CAFEC2DDD7AD53FA733F2A28D1CF7FD802CE766B7547C161983307A838FE3589E1C26752544D868025AA1ACA58697A21ADC241E3351023664B6686299B0725264B1B8762C27A0983329D9A0F369C5494E47E13D7ABEFE09ED5A02694FC471B375B2D6418E1B3AFF09B121D1D487> |-/i <1C60D8A8C9B8581A5C9FB55F36F581DFC18C75F18B54F6C3E8F74B36012A681B> |-/l <1C60D8A8C9B8581A5C85ACB35225D699D5063E710A6B> |-/m <1C60D8A8C9B5F349A3A7B83B891A0AB39AE473EA63E7E4D995DDB22700F63963B67FCFD4479BCBEBB4E6C3BD62EC9DDDAB0FBB49E89080E5BD7DA5D88020B90E17961FF134CE1A5CA843A655AA73CB3460C54E949FAE4A5B1582028F531F7E62DC7F8621E5BA84AD1B1692A30D44684FDB010B1EFC1F7E494EAC82ADF4642838012E480519F40731C00FB0D034BF0D7237B8D2539735254BAF2C6556665DDC081BCA32D33A6B02C8E5B87911B3E7F7013D201CA112A59F727B66A737F2239A41CB2F> |-/n <1C60D8A8C9B66C0E6DB030CF9CFFF437A97DB2B989CCB488245E9B4FE764ECE436D5BB8AF0E6A735E8974E0EB3BDD73C9C035D0CA0D975395C416FBF82A7732BE81927BB5741C43924FADCBD48E2D5B8BF86C1EF847F9A78758FFBC58D88EB134B5E221AB596> |-/o <1C60D8A8C9B7DCE04D89CB3054651E03469ED18B6661313571A28203C47C62AAF8B36D2794CF8863D5C144488D91D841903E8679EF82D3F9C8FD683D73A603A7584C8C6C1B9CD33A7D4F380F170BDCBF10AC495C4CA5173DD36A8B13A82551912A93ABF455488F69006ABBF18936178BE5D2FD5B30505AF01A370FCB61B9D5576773EB7D> |-/p <1C60D8A8C9B662FEEB9C61A10003A0FEF484F2FF0416DF1CB929F616F4BABCB3CFEFF358DEFF3104AEC0CFFAE57D79AEB30CD7C6DA547B7E74324E5B0B33BE0A690D3A356D6E332F8B5BD928A0C220B7286BB1E8195A3815CB9E4004C5B6740967B0F01550C79E254CBC6E153FA2BE6C2C100C877DF55F4BDD336411F69B26B9566E9DA9B0C2857DBCA09C50E78C3E0BE92302085CE05805A195E5B548BC4AF1A1> |-/r <1C60D8A8C9B7106326F9EFAEF0F8D1E5FE33E6DA2CF7FE6AB4C27DFD8D2F730C66BED00DE2D26E59EF84A390CCE22D5EFB5D467C53AE45B1495D4D75FEE64DCBBBE5A3194613A47139327D007DDB63FA1C1E420D55> |-/s <1C60D8A8C9B7B202A55A13F14EB4A48AEFA882CFB75352FDA929DBF73EAF69EE88301E2426D6CA8AA707996FDC004C1646CE156D7F9F24502FFFC9F72305F6A335662E9EB4F53BF84FCCFCBE1C48968F62A9A6923DF7F2733554A8CB3496959B9218D3225565F74DDEC19E4463AFFCC39B5A7953590F61FA0AD3D4AEA566E23F8765B927E519E7CE1ABAFCE79CF8BD6272A2D4FF2CCDB885067E54300314CEB986F6B18CC87860D53BDD8705147894C8BDC251B1488C000B8EDFED09B3F2FF65B97249048DA2F6AE94460FA86BC968EC4D1E592A9932C7637CE6F0A774855C5E8B7EF22A3D823664B5> |-/v <1C60D8A8C9B7CB35693CFBB7098ED45EFC167FE3D2044E2BEB775ABBBDC393D8C94C6E55E99D6A> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/RKGFZF+Verdana /Verdana findfont ct_VMDictPut/RKGFZF+Verdana*1 [47{/.notdef}rp /slash /zero /one /two /three /four /five /six /seven /eight /nine 7{/.notdef}rp /A 3{/.notdef}rp /E 6{/.notdef}rp /L 6{/.notdef}rp /S /T 12{/.notdef}rp /a 3{/.notdef}rp /e /.notdef /g /.notdef /i 2{/.notdef}rp /l /m /n /o /p /.notdef /r /s 2{/.notdef}rp /v 137{/.notdef}rp]RKGFZF+Verdana nfRKGFZF+Verdana*1 [9.59145 0 0 -9.59145 0 0 ]msf3.40967 9.55127 mo(Seismograms)[6.55664 5.71387 2.63184 4.99707 9.3291 5.82129 5.97607 3.9248 5.76025 9.3291 0 ]xsh3.40967 106.265 mo(STA/LTA)[6.55664 5.34814 6.55664 4.35547 4.54297 5.34814 0 ]xsh3.40967 205.376 mo(Envelopes)[6.06494 5.97607 5.5918 5.71338 2.63232 5.82129 5.97559 5.71387 0 ]xshRKGFZF+Verdana*1 [7.99288 0 0 -7.99288 0 0 ]msf27.3877 297.164 mo(0)sh68.1514 297.164 mo(770)[5.08154 5.08105 0 ]xsh110.514 297.164 mo(1540)[5.08154 5.08105 5.08154 0 ]xsh156.872 297.164 mo(2310)[5.08154 5.08105 5.08154 0 ]xsh202.432 297.164 mo(3080)[5.08154 5.08105 5.08154 0 ]xsh250.389 297.164 mo(3850)[5.08105 5.08203 5.08105 0 ]xsh296.748 297.164 mo(4620)[5.08105 5.08203 5.08105 0 ]xsh342.308 297.164 mo(5390)[5.08105 5.08203 5.08105 0 ]xsh389.465 297.164 mo(6160)[5.08105 5.08203 5.08105 0 ]xsh435.824 297.164 mo(6930)[5.08105 5.08203 5.08105 0 ]xsh%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
/RKGFZF+Verdana*1 uf/RKGFZF+Verdana uf/Verdana ufAdobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 13.0%%AI8_CreatorVersion: 13.0.2%%For: (Carl Tape) ()%%Title: (ABKT.eps)%%CreationDate: 3/23/09 8:22 PM%AI9_DataStream%Gb!R&G@0[IdO>$BJUE4U#UH4V,dC'>Vt\J?5Tg*580_]<Z_'JMB>66cMsOQS;t`B;H.VlnM(D;pd<')uBXHD2G8m[PB<h4"NGr25%bF0Era`9AEAOFl/Id=:"FAti4U70&IBiPi;:g$ER'hs6<jE+F"Eq!8CpHJ"%];+s`n%C_$Q?qrT@(6e$rE\lH:[4SAU`Otu[bJKF%Ko>?pq`"+=[FZEbe_B5Z;=E)(#?Tr7^YNW_S.uA9\X.'3h5p;SSbab9V$/C`V3g2OeS^n;4)`B[7Q;o2YulGuYhTWf#_3.Ee)H#J%H[FO]Sc^go`^'hN&+P5A69\a67jC8!F=RD\V3?ZZG%;P#+g#946%Zjs7Ert!q&n`t'g?;_W9)!;m-1hOfc#kTohhdAr>hfl?8jtE%G(%jcW0N'a3X:JciG\%g?5&&aC5H[b.thtI2QS>'Qn3><s(XFk[1V86ef2j7`D'bp\n_0SN&E=]@7?Anl/fG2*8GX?Le:R@;9YR&%)U1/XVZ(J@?,ppmjM,C,VA69"K?rZcBVa6$j1%"aWh;QXbTGI:D@VDICYHs7^Y-<gh%Bul@TEnQU)4YSQsrh@_Q'>bV*+,F0UU,M%I>McifE=*?[&h&bSAPK#%9fC+mY5%DH)V6V%;XB+.BLs)UoC`Dr+O(\Kb9&$)E#,fbWnUn'<<->8=s/7%^*QsYe'KCi_!+d^^quG%;M6LeQKt;,P_rXFJr08H\G5e(M+N5IZAcQiH2OdYpq'K\8nAn?atc/GAUGuNoP(^jDpu2dH*!:Wj0sCWCZY.i/"a"GNA`X'lY%3f%dGQ+\X_Cm1e$'U:_V\Ir<5Mh8'#%KuiKI.GlVsq[Zs(`;na1'+T3&)c*==NTQbl+:UegMTj1-^rUA,[CiL'*nf"s-Z,Gi_*7/._e%i/$k]Nn_>PI2BqW^[W8'#_->W'Ml)I*"i1iET:CW`A(en'UuIZXG,]OhcQd[`A1qP&9<Y<MFECKr(Z(E,H&mefI:XDGD+b=,GPJA%LUD)Kp`!G31It#1T@"Oo^K:laB?W'K$@N`2LVN?uNfMCLrhbce$3%qJ3'R77B9?'u`@L<tHSfC9+ZJW*Qno'k`B)SEGVehU7o#aJ%a=1B$?eVe??aPRX&*r0;%*HN9iS/J(oI5e2Iq('&h`*fW'Da?\`]?)j:t2.SK6Ja+BFg?=%2q-<`Lo,BS5K]j"bSIe3Mgtucr$mn%IOX+bEaqRtYu0/YQI.d2S\@mldsi'Pb*eK_l't]-ck`YB+/N>&gZ^enW55SOB,Ps"BV/2362)/niS,+W)4YThZ@QS&*Y9LtPPDS?%%0KW5?DCl]/q$Y4"nE3(;Q2)0s!3FbZ2W1$fe!)>rMBN\d9M]t=F]R"7A8V@^\".uddO2NoW@EY$3g:EqFgi'MtFXSQi7@]b@Ojd%rMBND(&Hb_9E,=\5:Y!!mdN0+=8LbJ7fU@#UhhKLX&bL+6*4/q.fE)6)P>ud/84[T;CQ;!&*PIUVGVrkfc'^J8m=*d9DCL]V,-Gp%.[=aOc=:Q`b"7ao`P/[AJtJ#88Wa^?*'T\mS9_&1cq6aj+9%b6P>VaWq,F25Y\sUjpoT[-XhQ?66Z9G++i8.i3@?7eGT3l`Pa/PM%d(dSE$BN^rm8Jd2,AdGAc9;\.bVqARSA7uE=JGJ^n#W2.;ctMIm(oS>)4PB$4@a0+j[O109?)1(`n3#('Q2WNQGE]X"X.MK_rBI$%9VcUe$'%X+hnm*@D$f`FoO/gHmFrNcBo=n[M>Yu,Om(iVoJt!uj"Oo;p`iS"$6:"<"5X7Y2s6s7'`iVBj<gtJ3u71uM=_)^]5#/u%LL!aa+q$KVGD4#36,s3%`n]4=)mb(TG0Y^p1@e/fMV&k((<q@Ma3BQ4k9^(p7'UZM&]H^k8sBfF*j)C%FncA]iO>g+Io)M7C&r-M%eLZrA82E;eaok3IZtmm"'l,3!4@(sJN);#Zbn"h5c4!%"I:-hi=s:<%cU>k;i@dArYR^S4i$Y]C!%KCL\)Ff^Kp&/S'Z;!(O70l6%OC4jfGSaQ%+)G)5?HIEh%skfPYRN1N$7K!F3KYjQqO,37r#";t`2XuKFI<.oUgDHIO8l>eRcXBQas@0'_Efk>Q$a?]4(NLHcZq9h%M0pX0^bQlgN'kV2=G,N9T9Aa(m#WT+3cb]\AF-+1)cg(bkg*6%)2e[:)EW`:S#V=%Z=qUOc3FMO)A,,Enukf@3)Ua$89d]W(!1*]%A2=!:iIrbX(..'&[i-J']Od)u'R=LmAfCV(DZHqk=+QuG\RUEM:&94Y*?nDkaeM2gU+Tjpo&!a@=F/1cnp&:tPu+L?OT1:#Z-+0+%]d\0TJmEk!*$([aD5-?73Yk)?d;_8@E_rlS8gY"H6@V@p%t@kYV'7-EGrj.h.m"[aE^o1eV2a`o:)cQM;q,%5C1EtA3Hg+S2V+fp%G)h91'I=;P&f/J:Yrl\/CFi5oa8D7)O\iYA'GZI9RZltHa<gUSALFnBb\(MQ\PZ+69JrH,fbS\oY8D1CO-V(o_G<5DLibPN[/N1'%0;[dMG=%EA>.JGYp93!Or%72`9BME^I@Kp4^NCu]mLjPnPb[+^e.G+iUFMgO_LH7.A.?e^cS"hEXCk'^h0Uiu)9[[&,%SZsUNN&_%HpVKUHDY!OQ&:d>K<G/1bEnmmNKnBLJ$],BeU4]4d3)>AUlbD:n1WMgk[3Br11Na?2VIoJTAOHcY,b:#J!VbOLKL6kO89gS5jsKR%28E*Dqsq+UWBV/W-^C]@a=tc!,q9X(Nn(5oXR=N1E3YV+mD.Gt7N8p4.92cW/I8<3ZKuZ/,`)0"`^AnCAOPD8d:IOPP)<1O0XF2X%gt@QN+`(LDSPI>pR`s.X?CFQedPlt'/"0@22>-^^aE1UeZ<lbUW%:*Ob"o'$U=Go87AhEJ9i_/&CA@ePfOU"SE7&[FI%0L@ZR/cm%^ciNlP,JUK3EddXnn+$G:^XDOKbZ[5XOc#Gb%&sOKq.^deH]2+ll8f?UTOc+k1G\!R8Rs+'Nl>^a)1@%5$lO%WP"mc1DF9k6$a-%%)-3aA,aLT-@#^E)G]]*-NAmD<UMh*H',3CLnp_'@1[pIQ6WoXI5I>1LM4JN4HjgI`F:Ja1"5]=QNj/<9N_-!)=k7pGIhA.Qk>d+6%1T&17!o%?&HX_8T?k'4IMkX4*TlrRW<Npd,j^sd;c68_/H`!U'%>eS0=T,5u[f/[o10V[7WMK9VXYNq\V6*mWCs[n8=k,O.=thgb%;2>!I`1pd3BqlPeD@F#U$;%Lq+gT(E#KgY3&hn%I0'hoP(+JWPac*Kf'7&B[FVYYq<\;Eb+UCL_M5@>I'MG3u3fhZ1)OXPVNm))!%(_jYI6U>`F8+i6Ic"0U46cMOOTQES5KcQ5o#Rk!J6=,t`3`^<J9<?C5Z;d[89l3*fMjbVPlT"EL[@hlOmS]`0jfQj<^<4Mu3dR%R%#Tkiq3<Q$U@N!UN_?KGN6s!BVkaW7&b8U.PWiY$/D<fIbPckpGDRUWYQA2hF!K/mhj",,odN-on$m,)U8ShNcj;X5=3qqC:Q>%9n%nS^c.(qOB9$>ith['!lt>\*>",L0j`6K\)RGrrqlWE;CK]iuP=q1S]_ph==5D<d>4\#I\bJ"&p+8BZn.@o<^p%*6\V$JUHgK)&>R%s4YIuYt#=]#KDTOda]'^OnC]!q8E85ao&7;8EP-iD.Bunq'I0f"*-SIDEg/l25BVlk42PU.iQ`UMoXa$rL<&<=T5!kcd7L^j]6fI%<ht0WonR[XDT<=]g/L\V7NGdCA>sueO7KRPR!;Xl6Q-at'$W6!F$5h*X?_><:"H!,1L6%c*]K'R1\!HB#7_f;A*kTe*@*Fm875j#%8`pNS>Of0WH:&=,Ll'.*45MIkFuu+W9_:>mQ5gJ\DS-JVG"1hGj)l"+p-cjE5*Dp9]Zr[[`K$VL&[,^)WBkqM'7S`tA6X130H)KK%a$aDbk(=\4rha0`#`j7##J=LJ[R`)XbF+/LR[RY/U9/cAh"<K#l5@R'"7hkTfTo$=d?4;WfX7rW"fL;d-Vr*uK5u[0-\D-mUg/C]%k6`R45!p<Zi=aZXK,7nIkJLj_QHL)C=*\SdZc'-%Q/"sF^bn0V349^$RN[\c/Ir[k[1JEQls)j>S)k$8"3X'`Bie1^2Y^8Sk;040%<"1IR/J12tYK'!4XRWOKJB&\KC(uYiRc>`@)V:4t#am&a0Pek3mb^tPM2YQg0Z'rqNU&AeU_Hs-SDXm86RTDHf/a1T8=SaXM<%/^%W0R(9Z"AS>kY'1k\\l3A=mMlU(%O8q795Q83\F\qe]<V^'g<RC>1oQ-ZD+Jm(r\(@?R2DpGF"%2K.98MhC>S\%*20"+fi!B2lQg3%d(eX9>]\K;?_D2Q$p[Z5HHc!r6#J.$#;K7qkrLs#UT_r-CU+)oWXX!d1+QE8/!#WV[pR(q^GH#[p4TN[TY6Q8(6q"iHOAs?J/q+.%.bQ#K.[!=d@$="MALuC!Htqd'Rhbc8?&pnW$Ot]\aQbCDk4O2^0@$7tZV9EMjEmK$)&TCk'QVs?AZH8qj[RhF:&Isb.p$8c`r*@!%oi:iUD.!J/m#SELb@o:>)/669fsfM`":V(Z"pUsD;M"W#%U[2L&A)jh[#E=FCSjLCf^L/PVFP4j's.O@s4$&YUBPa6198`QUA%,L%N:1l6oQ!i]F@#)P]WIM<1LopB[2qa%)#^[e)n%[S6O?d?447fT6!mc(H_nFYjT-@1;+<YT;U=h]FH;$d=]LHpDakc&rC1Q@n7'_n%(GXXAAO^IdRoflCX4Wjdg1Ebq(W3YLD,)WsYrjV_oaTMcW^nF7[*igL#'TjBeE^LK_9gigIQlu'H_9quq3a@UC6$=4cr3Kd1-agU%W&\[:5MOGeQHspgl@1[2PC07SBJg%aA=+eSi,PXdhJBRQm<YX-Iij`?RF>$6h.UEGN,#'1NVQ&7<iM;61A1Cmi-jDVBK,s^WEXN/%qfU?^]?tke]G\jKl)RP@eY`.WM`0IeF]qJ0Q<C+YRL`tUZu1rUm4ia1B&+L3APB.bC"9Ig23\uJFW:#"cfQA!!!&M5bWF`E1E87W%D&gO!q2T/(RC@1Jh&L#&o`8Nps-8-o3q[CNXUSANOMhcFXc[ntp&?)?5/0RTd@f?0G3X_K%#)Oa0&>oS)U4=:ToqDT[d1i7OBL(O%O,'9,GAL87rr1a?AiaF7EG2)<n[CGjHo.Or<k!pX48%S0\;ajS$?[cKHiFsBLH*@EmpFmEoAB$(HA?kNl>"#ag[Kgjejm=WP<0)j%k8:)-g$+LMc&\"[NFJX8DR]I%nmT<4hTQ\tA/',pe,NB&4f"3X"$k!c46-nqA3_k`eG)Ab,i>\D>1dNeeNs<lO_3VN_>Np[W7)Wd%N!DKI.H(sSDXrcD(Wq-4@)+gK5gPi^o[@RuJWRFNq!>+HCmk?e02Qf`eJf$M6pd:C6_Y=XF+I4Y`<<>1;0,"G%p3j80In0j8nYNZ%):P03mPA&,L=WkCS%55R)E:[5@4T7.9dcZ6IiffH&"9k/rLGVFASK<7U!2,uqcP#"472lh"FSkf2SV':Fa,Q]>p4J[\\jd"iOI@l%#bSt$RNt>?<2KKK_c4((n;El'AgW[(AW3@BnVAMT>sHaA5irrfLT^sCk4RX1B';h1M`U0Y77GK%$CX3>H5jTZ1Tg'MYe]I@L9Y^M%U]SWVAfW63^P#!T7/d8e*jt;#7dK(Z"7UM*Y#qPckV^BK_#5iuEJ/?@RTHo@=f;'u%u3P)QN:\g?3uOYP,\37Kn&DbBPOF"Cldji%8^-H&$B4XBc0f4#/7f!dg]ipi\b`r0en`$2k[3)cEtiaMJBDr##L%l/SbDT1qJtF6_kYqY2sqc05C0#*U!\4&L<o1\YAg`UlnjZV%oeQA$9](BKj47R3>*c>#qJjjTY(:@"m:U?e5TmqeH@bbRC>9^br>W=oa7QN#\2Y<9^V\U9?JC.Zrl>4@0.*Mts1b=iF7MZlX@k92%fooaYfi)<5qQK2gC@ce&L]>W$Qg15KLdl9q]63'&h!Bk]S"d6(]09n3musrphZ.1Y34h'7=ObEVS>5.jD`=m!#"t]NhcdSdd2R0E%[#rd/pTJ2@f4TUj90a/En*5P>=49-'+>FhN+bZI>2"itY9L94rIF\3h!q,9Q8nqZ9+QG?co0Jb.Rn]XP!VutFAf"%Gb\T+k@\4B`%WKakcSGEDK5/B)3dGLT<6CFT$Qp9Y)GQYt4m/_$kds@o0:51N*XU[m<j/ESR$OLEc0)iVhLQ"?$+aj;KHoZijJ"Z"4iGA97r:F2!%2k]gBP17)Kqg`-a1DC$nnH"+[!'EP]IG>nBSe_[s_*9SV#IG$ZC68TU5pbIG6DX'dSCbTU#2]DB4b!hLXYZ<5%/^$R65)B9kO5,9%U'ZV&h)+23%*c%U0JQ7!@2?Ef"o=$I!Gpoudu0nC7j4dM*EFE`SGJ3u)<3eT#(C>"K==&>g\&1K%qdMa@&h0AogU/9`"d\4_O2T=%`,H._L2U6@)F_PmDrdis#8p!h'IfP4J<"-!IOe-NZ?jW>Y<AO)RihbB_M.NY(VZuGhphLp-@IWMCLJoqduX"H<O9AG+2QkFci?9Y%&'7cK:%t*s4YY$?B@se3L$SS>]8=5dc.np2TCs0t=%pGWs6bD!e7b^Em1*<<?sO9j])S[t=?uaWXnOKQq?P7tX^fSHnJ$J4rpK*Y%'3ji6?iI&9L79<AY"%UffW5!ODi]mh=?bfqlb\=B;k[8driaAf>DjKL+U11A+RuHl3[JJ/`t2I%5t!d"(dSo-5\A'gm_+*/)aVJU%e6LAmcT-=!F7b%G[=nZ.#iY[+jSpPrhtS]UX(0][0GWX;hT*N2YOeBOAH*ViD@GiE+/2%$U*D'Hro8A,Yl#;go)AqI*IdqP^K;HT%LY6(fDS?'gQc7XjS6#6UC)H3JZ2UfS(juRU@D1ZM<Wl'aQHlITc#6Qg9oR!q)4".k5<CLH9B$EEXZ$<hF56[1d1`j<$uPR+s6LlQ%PNR<?n*_BOqtiT@)WNqCT>CFeOS&ISd/HH"?1l3ipEhm\n3=)T5tV$Q60L-qo`eMco>73G$-.'RO3IeN-`/YEq<=^.BT5)^laT.f%$/Tc.n*m4%>2_^\_e'%-C^UO7L[$`%iU]?VfGoSsB@<#H(jQI<QkfL#EU[$ch#"-4k[W+Vkl&AF]@@G,pX&:)G8OE"H\N[eE8Kf<%8%9fb*f^H<mq0AXUZT=6FGPOA:PPY0J-;-8Il6+R]g;FqhQD([S!0t4@0=4%(>uM_C51Vb3K,M)OUcD`+Vb=h>54mRr%\@T,f%Jp%KP0o6?1;lC!9$]l!@L35YVgkf*qc4YGOtW8:<o8;f#%*rkcIo.1]Zo[(o[f1)h]OmeOG1;GM')$%DVoP+LE'GTc%kAD%[Xcp$Qm!%<`8a9-)Q%HWm`dd0EMBk^m[,LgI.PN[!W>$'<X/qU\\2qh&?6/cC.$g':a,Kms^;_T?ZkNYA[+*a9?"($FFceh?T2`[Q<Glh3uG[%SGW';T[@RP[D6OiE9=MdRc\T`57EgKjiU,[N2:tYXmUC[3(h(13Gh>*A*iV@L%K_q$iE5p&"H^hLl#M>JL:7R!"3A&(O-MCgS=N:%+R9`J]]p?0rYTk:FW6b[bW@5od8Vg@;q722W\"FC'KOtf^3BS-j7:lnDpu3.9P5JT3'M:G":>KCb`V1NBb]$R?O*7`L(g*?eN@>c%qUIK>qR&Bg<Qcpnq[oF\+?U`f96RTN=?@?k8To,370GdHfiLX6JRsKk'fen8OJCk^7j0JHrEaIV=:c_]i]Cj(Eg3*,+o,,NSOh(q%;\5bg+@q\)oL$EBks1bj%W#D3K6_GddMJf*I;r^sK@H3>$rWUQfYqQ\?(<0``J<*bBr%`l+CB&5'O<Q&BD!]AWYjMf&CYOB(!ii:%d!FsFHInM1"ZrE)Tj=&.&eLq7FCBdLIEa/e<p2o3!_\T'9s]Ko&86^TdWs7/Kdd:/?td?:M$,1>D<ba362*I"].(VJ>!M<t8E%Dd%qI%7\]]/a^[T_:K,AR#bZj,Dtf#$77j\^e;?/dU5L1IKQLQBb@pS<^t%R$dq6H?a746Dm2A$4l4OAkm0F%\[Z,3q8DS7,U5L7;Ms%<PkkLe2qh5XT"t,_j0gDYMn.3AD6K,U*"Rh@_]jXF7sBns0)_l&glqUdK,7V=tMG6BQ\f@fnW2WnfOonDs52FrVdp6f0B'd)!a$B%VC.r-!;S7[L\7#\"\%J&@O(NMEq9B&ed0%h*A.k+J"`0J#-scfqoIrE#:04>/0Jio+dGUF6jM9^[QhGa+!V([A%Db\HN?$<UjIa?%ZmY?hS\LQeQ[>jnHbJ5lg@DB?QNuTI;SR();`@=BFl'_t09eeo;6+Pgem,3FZh'_/ig)Wt3cFCtZf+jGIF.<O62p).dZ(\P8mLZj%a)AtrgoUJR0\pXGeSKTJ1/,HjO>T2%FISoq&MScK,quPmAG;'RS[O@>Uct6/-]WMj0>*mRBh:SA=r:-(JcXsEJ8D?;pX?SGWZ/7;%%`X8!J4##ss1RSo@H]Ff;P>i=<&u'?%'P"6n=VK9FBFj*GB9R'^"_q"3bbCUT+lbC0S1N-]W;jc#F/1neFNF"PSUskJ=$.chFFX6%@IZ]*9PJ3DCCJF!A$<=fm5@[u48$PIE7?eq#VgT5G9SBso>=>'s&C.!#C.aG2#?&L@RGGLem/#E"F6p&5Rb*5XF]F=B"nqfEB8O1%)qHLP;g5Y='!!i9R0BWO18G^m1Z_b\@-KEma47l1/mV$AeY0[;O($M\NMft0;/HB4W#$Dt@I(7(\#kb%<[:W@VQX%s<b.$?ZX/(T%ef&\r*jQ$OdQ3$&[2`7:Xuj5YCO1Mg2,-14NJ?Q.P[eW^[\45+Yi5nDd]_NcIrt8>e06LKgD7hu!!q?P^;&3lfCQ3\Lt6EdEGJQ.%rh4(q0T\/]6/I/A)mr/tr21iBYEr2lQ:=O(DABa8h?O7!F[&!q&?.QqndG@h&6ofnWt0q+aL1@Pi$LoW"K6-oL]DQ&2M9Vb2Cg+Z%,>b0sVD\tP:^<q8662^O"*K.J%cPF4q>,`)?It*TM5A`gBe]1N@^)Sq,J/dX$QS2;i"Rf^6$01')+4n,77F'"BHd`@?B6_Dq\V:N%mWCAoW?%crlU*>qLSb;^FL=Q"]INVE?VNFGKIknfPb_\d[g-j<hRGB*,&l@a.raP/3kO-`7(IiP!<;Q;_kOq]_s^VJA:N3@r)aD,%XTub@:TtRLU=E7&6:H&C*VS>Djc2XSk2_?",V=Ac&@Or)M%D\eZVUkLfb25$iMq!=T]XBk'[kWK@OLoM,^++`1.!=-ZC]_I)ThbG%b&1L$aQA*_o+QDR.IUT(MWGANp:\4g\Qpk<#S0#Z;^nu"RK&/G$ZRVYb,h.eU63C>G;YQ9gPQ9)m>![c,o8#L0=!rZGQKR`^U(Ob%Y<-c%Q.>eB^@Sk"HEHn*4'?6!:PJb6An`sOWHW.FgHTVqf9;+Z+k`nC.X._cqbT,U?[+[_m,rRcea)&XrEa*C22&FL42V!_H-,FF%N5A*i,fEb`5nk@EV2s?68E&q2qPLi(ao4#LHTW8VUgZELG`3Y4'"+>P(e^qRUa)k>h:kIm9aQsCf:VA"Wq_[pTuGZXAWrJUW@4nc%IMKpXG-q455E5aR,JVjQdb;uEfr@C$V>Qn0%+UfR]=e.P?YaMPZ2.:/+kn!n%Xth9,9`8aU-1<WWjV'(]QXsG_/!MH))tC:i-/m`%0,..(a6GXh;i@_\'1"\(p+EP[]M>((^L+^X31Xs%k'knYK%4Q`b&mNNIlun:]"d$Lb<3@[\eTK/0&Jj_]6AS+]bZLnCm:M$h8Yo9%I*Z\M3mB<2h`dXogcNbE4:9VJrljXA`aX)&<;iSpFQLbg[n_YBa88'0do@jo:uQQN#XsGND=HIIf':S@<4[O:_Md+(`2p+a2Y9bj%f@Cp_.M$DQ?_gUCaL;N'Qu,lr#/A?j"MsWM=j?rkNm]j8pJ1V_LYPWldJTuJ\SQD(n+;%tXGZc?SXrm5Q[eSd'=U_lbPbo#l4iC"%:.i,r=+#,Y1`Lp8Cpn7W>ru>leoTVA@:#s((IcVOo?5OORbQqGqX>\.He6m;S^piM=-&hX2l+o!e4E9?$h]g@i;M2*,d#C-jk"_,%`\^?YiS%UYLn1\13XnN59D^@_K3+>PZd[ree),JL&#kq+Ue381IWY$8qcFPm3u87g'PYcGeq9g(HMm98\orDNDXMR-4\GbHPAZqG%U<r:+6F])U)7tlN\9&u\+'5MT&_Bd]%pB4n:9RF`f<;"!:ip`Z:M&KcGh1Y34\dS92dY&o>s#`JhB'7N$8NL2]o=mVqA]W&SHsG=%h'/cG9&a_a*L'ejI8!s3P>4ui9TJelde.UBe*4'Kn@S[gE:<GkVY.V74\[suKjI<Zcd2>=>Qjei]<P.<V^K>sjga[6C%Xr#\fY2t%KVE?o*=P\AbBg()EnnJf$#R@"dn]4%URGK;C^e=(8\e)b<i=:PmIk?Xp@DP"hh+\5#>S""d<eFLSUPA?N_Z>k:J2e*;lTO7*n\HL%V,01#!bmMIVC"ajC!+dZV3,h"/!W>5g?ELVP-fA#qc[b\FI=DXCm9rNVq?n[$Cclhp%/PPbtN;LO"P96m-d<>LCm%S&ZL$KV0BLj%O`l]U:N*l99l([1G5(.ofT'?If0<V*U>C"8N%qb1SVXZ#IH*F1Y=@SBVf+`+CU%[qQt@_tFFQ@k*rn$cZoCjt\u9G9<TmAn=samE%EEbEZP9odI;SYNb$HJLF=l.VZE83Fqo:D8$PK9:eBA`*%76#WY\E#f$&["a`,L4c9Ui:Ig*3l(r0_U_HY4k\#]XMt!:#m\hrY2I0%_)S1Q:YfRP^2SE4fr!)dN0XW_mIi?DbBnOdgoY5nhU>E^/mg%F(n5o%/j(a:^NiWT#f#gMf/ZWV.DkO<+%bdt"(T)&iV@(ak.SGU%]]<EVcI8,2QsN#"\NM5UX2dWq<BB*OrO+6m=.cP+VcVm*`R5pml$H2grK^VlN&BVS_k3](pSYRbme,_nkgB@.1d$i#`=Ieo'a%5Y%[Vs3R1b;&Cqg1Es\Pr2nUNU/uHhbY[Bf>r@YpFg)\32,TMuQOgD0@P"kG?])ATfK*>S)b#duQAh'?/htPY/-Mm=(:>bppJs7BUDa%)!m.-:_Xnk20::4L[nsJiO\qhfh+W":b<F2n"io:F-M1kYPS*RYL,6p,LcXZSsSOrif6oLkGI-c@eG347.%..%s^AdmLBNSO"JiH%?I#pdhr;G&9,2Di2U60VHE\ZsD4d^7BBSW7&_:cr3NuoCUK`kPeLfNip>MV#ku+pOiH?\MYDX2T^!Cj0L@JF4UsA;ueYCSs8n0o!%XKF0[S\j_(2\JKa>M4Scm/>Q+VU9+[D+!biN9rHK[:48>(r(rBS)1Vu9;mj!.<q'748a-f2#Hd\m1c\mC.I9DQ1tjE:=49!n2bDi%SPn<O@7f_Uih#$V=sRAFU-8),eg]S#LPq!l?/A-;h31VqSSnY4\*9grr8Lm9qs-4<MqRkcX[f4AFI]g1\1$AUZ&>1<(d.K!VijgR%ouePas/9lk-Ih&M4Y_4,-I#mnXK/PFL\c2Knhnh6-8(^BgWoV0&&CV;rb@K/:"]DQ/fH%NE'!Gi"54gY!bfa?2cb'JbRd[-]=QXq%h42C7eYrJJIa?[$NYid9IO^8@hnp?g>R',W8ecW'5Dbrl8WR>9gAH[b[RL62=L'*3`I'E3eLX5\(D,Z1E8U_Qp%JbhAgLNO!1HNC%rmL=.j#%W6>V+%<(<Z:uS/]nu07A5d-[-TgH,P2[J2-tCkqds"AY8bBhog9#!1s$SbkR"=Y7m0]aW+gpT"iO'K0IQT(`-<rN?s2i%]2$HhjBd2scU_3?7OF?GI#(E+o3gFl],Qm$o.hWSKrH>M)7u7M4tqS1DaO(Y,l>"[bgCco*^/4eT8a0fUW,-!Jnu)`nPqo@m^RU7%NZ;:a!=t=[jHklg&p/94?00[TKI=3R>Y,qXQ_Ef(8&t30NQ,Cm"/&h2Su5Y6qXL]%4-"+>*U]li=NI[G3\#@,r`g&(_sb2T#@p^f%d#MC%aR0\<G-pP=eSWc7cFBPOFld_$H/WOQTfK^+k`fRTZJk>a2YK&!^+g,LM1'-"g%au0qO*rD>[X[C!9ui4IJ::")6\UnGEOeZ%;N*sYor@Y2>WhSK:.+L9^sgs3,U^M)lr)3]=L&dm6"8eFE:n[n.X[K/:E4sL]5Y*n]VZtO6RKbB?4j,SFl4ieK8L]eeNH8`P[C5#%Cdr2hCJLko<(k6tL8)ERgSfu%Q*pR9X='5+^U8k>ZF8Y"!C2g*O4kaQ=.8U]1$QE[AM-O)e62BuPg#c9mhJX9@QEZM+cUc:FFj7o%;%oDkQQ*E2L^c._@t0rV;o-FDbK7cj$>#5`_X)cRrS0%3@m$f0-B*@h`#]_L0o&/dDNK0LbDO2rG((EkX&Q`]*mSUC"#QYI7*SX^%k3GXL/*MCdS_4N]?AG7[>6+s#]sJ?R,]V"0j_,Q&fl](Y_2c16H$&D-)q.=Na3GB:T+a/pV$,Fr8I'DSG[o\>"d<<+5VW9Gm^:[J%d62IVMN8GW"Gl+CaFnEpK+f?8GC"u_5GenM:f4!YTprdfn-mF%VA8);jJ0JPd]G\`TFLDg3<1L)Y6=<E'@`+m&%`Ff%HAd!GRX0+%^sD@$5RR<T=obMKo%X9HBFLm_/5-'A3H,W3T)LotI&"X61_MmqeLs/m4BmA([2_hg2c^uRU>gLh:N[7;p#X>XjCp%-lM,=GEq"?h%^OE%HQG0]K'j4J@\-K;FK*TnkPK:&9Gaa.nA+7d;`S`Rfc1/AnUJ(1#`mU$"KOiVhOLPs-kKq,mRj',9PUt6JJR=)K59pV('A)#o%7X;`c/54JPP]q&L:SnY@YgH<n7Jd\ZNVa\^0=O*bJ;c@DBa3YJWW$n08M.A$*ffV#I>56BU*\t=lZ7pbRn%D;%R4:;L]YRd:9Z.P%):MuNSW=bf[(L`!%1l4/ZA.p6c^=,BboJSBBQ1B5':tk_n<$WYg*n3[SO*q^O6haC2La>mfo?<!8mZVr5B85<AsF`_1`B'YLgBHQ%)3B7oUeX#)Gm2!G6eg;db>a:;-otE1?mn(A-E^RZDV25KZG(X@A'7bCBasoF?=S.U^o%g0`VAE[.9tO&.iNu2F+'d+hXT0?Tdc9M%Yqc9'X';s]`Nt*7An4)[(4g2<5Vh#V<cQ^MZ(MelEm1;Lom&QQ[#t\`(Xc(,]9Q4>G#Hf.rp>#mdJK`EoGikD_rC3rAT(c#o)@?H%A!h=k!Lg<p)^8_GfJ%ie6+B#mI<]OT*$YLs.(QKKH'k3^M.TYkc?F'^]&_i\M$@N1:.&nKM8mc_bp"FeD9kqNftH"Q&e,bK7\YU2%HrgXo>C]*\I`i,WI9_U&O[ObFIrb;$PgE8,KsVL]LA4-r.QjS4HR8&i\8H`WX-_HsBSa&"9J&.WAI4D?)7t!(G&"?\oSm2>mLJl7%et&;ATIe/Ppb0FKi5*7F`u=]]bjKBO#[-e,!f>T7Dl_`!a?%mYZ*?<55EL:S%U[r(p)9$`ERsKGRXBbiLW6QhktQNV<ZEV71UlE5%:ksY0j0q7ub9XRe5&"hAZ0F2C]=!<g$Oo*s?TS0hLjad9V@0<pps@'M5+6%P'O;WHc+\C;.MSF\)h*T9\OC2:qU3JPZl$.``-Cs1%AcXuL838U1l>0Un7Q]W%g5n7%.F380[+Z)Is5\hcgk_dYHYbl_#_5$s]XLXi-9'@la1i3"\Pls)V8\PoeMhF_()*aG9d+HP9E$'h%rA*m)D3qre*Z3)HkRUEb1<eisE)2`DR-u&hCM2]X^ihaD83nXJ'Nd(]`VYFT_b$?M3T2&Ujsm550./?mc8D*+&!23Z"49#+#%4T3%>$f]r>AVMR[BTMHHh@R^S!Ae80_V`X3fSuYn<cf%k$*9CQ8Z`kp:$aIk$+,qR+2=8TRLlTW5*a[fdNAPWP5m*ZT\WdCmME2>5Pc-%;I47".ogFtn%!bXF'eC^TF41)P=+N(5o5D2-ATl.K8uJ$Z@EoUmgM7([c$L4FP[mW^b6);U%?R&S&cA80o+%9K+?5q=@<XiG6Zkk%[c!*)FP[mWB("ED3HX*qFGqS2<t:crcC>;(IY;7C*'3Ns3]<Sr\KTWNmEL-]Mdm8[58379lN[Omamra=.)1br-bVe0JbBWgmW,T0%aFPT3:M%.Vb6\X]MY*LD9sp=X5BYm/gO`,*j2mEpA(t0$13>Y=Ed8p_"ko"r8PLi:$T.!9S:S_YkKP`on(^JNFF4*[1DDBaeZkJt%/P'^?UL3*)"&D*0F(?<E053$U_*1r1>=%U;LOBf6cF=@ncW1UTa&eZVD!W"-jjADB;Y(d[YN;EsFm`!q9Qlo\$o2C%&6%DHp#_2)%@^94"J60fVfo9qA#@)4mY2IG.Il#0!,N@g>!02@#=_-F"Iq/1(=?CG!cXB4dLPi!la`#V[O*`l^n&4'(!9tlG(<QV+VH$:eR50&2%h]?9hP'<;3D5W7]i".KrUchCL6c;qDk/<3/<fNQ'B(O7KF6<"Pr61#5H$mqJT0;[po>'-t00?Jjm<dde5W-)D0S*.1B`u04[0Q]t%dNq>G5C`ZZi.L4_7AlS=mlWd("ES0a+I%9>P@-0MA_jr#R'UQDdkp3ND_iERpo>2e@#VkXJ*K>Bo3oiapn\3hg:#R^mW35f2?N>c%bO56TmB4(_K/%@=hg@FZ'5RajJ\u"^'(-N`\bgGt.VDP]:,ea)ma80jG8mtHY5otA_#<=0h^3N$K$VgmjucjkEo9p-i%m3p1?.9a%E)YP>g!tfcpT1a;nHBtb3(uoLDk)Rm0?XM(PRTYrQe8fX.t=W_E+[)g*e'-HE&5%h%'"BKY_>l!S7fj'?0^o8UAR]D_"QEQKBYCf%@ugY^<YpB97rZL[#>n;[H%gG^,iBEJ_K<!G+u29BLdq(ubK*8AI#rTsbgBl@Ga^*+_qgl$VT$f7-[S6nRiHrn5J%"rOqnXlko;`.%1:-=FP?0YO.oSlI#`ZC+%>P=LaE.n.Y_*49QAp1e]:hK(B_+](8@II8Gj[_BR"cr/.>Q/=p!(gP3?hs%i%[H7MY%mLj;bsp,<:NL%aanV,A1!;trfQ#=G25(u`)o3lIM]VSK\<m)g#X7(d?&QjPVmn0Au_NL;1P4DT`Ae?n[[,hLjnkR3@oD]S_(D\<jnZ>?JQS]OLiJf%H$)E]SG;6s\YkNK1PPcdLgY6Ds,\^Sm^:`6NidUM,M/G9WDM_E$uUsJc%!:=>')qJ0@%>bI(4^iO3O('B1*L$)0*"1(dB*[arRK<%k/0p[lQ[9eMp@*I.pF^s/jnYe:i6ot6Ls*ZHt6GNSB3c!b(h3]R#-d37H_S!SeA9sI(58R7bg?$iLIV!Dcru]gRC:2*n=K704-:"%Sk*OR00F'ZAUlq+ckq7$B8YO0l\2A^LOOL1.bt6a$0g?m`3C*,YOI]um*>4(csWHa,22#Qc&OsV^,qq"cN*Z6-dXU1AAcQnSTQ;!%<dp=H&]e<`[<iZC&bE?fa4eJ".2+((#N(u_p(N7'CiYKH20mHa?OWt*a=5BM[l3^]m<14^!L%\YZQ[qI-1/q&L:;'7o^lePOEQ4d%LGOZJ?c(Sn*&6Jtg(Zb$9mj3Q58/A\Z-:1`T%]mX%&D)*r,V.AOVt-BMp+`*>=:sGYFgMZUl%gEKk-uG3t',#`E!b:Oc&NW+sRio%f7G"Fm@M"'M^]g%GT</5od1mp%i,g^]t=ah_hN'.E/Yd+2HsgO<&i'QjhqB?Op]6=Cgi1''<,qL`\$Qp$_0ZHk>s8_'oqbk?dgVU%'i'f>"NWEj-P_YuNs49]#Puoe0]\`0ce$5Kc4(CbkLHj2fYl1S1EWQM)#J;Yrc(CA!sF^jYu(Ki*ls(]E#pbsj5L-c,jnJ<Y_;%Z%3\QB]N/,OXMD2.?0D3-AeN(qO%_/([N/m2g_(s]%jD5?nrn,uOA!\\Qh@4pfGFou;<T,TnoqP59Ot9ts7?Y.+=-;POXsQQfY7#XR%I#^'WOjqcO:<;4?/%RdqmX;Da)\FHEZ<PQ5]"%?ji4+Q/brZlIXn:8h;sh\EZ+$"ADbdTBr0LK>h,<o+`U/mpX3Klc^MHQ$Eb<re%HY1p\+ut+MGcA.)WA>@6O`fg!O70PJ$J<>S-.Ah<faY-Rk&a5`j4h1Mn+0Gm*k[Zl4p>i%6M:)e=,(#Q4*1;=la6*-Bhd7<G)H%a%I3("^`gU7pr*%D'E,l708["6tXP+og0WW:!.09MFAE;a0)iiTqYBRG1oWErs)jA"^[NbfV*/n7=fpE,,H,:+M(`2%'`eZZeo9$_V%.fV*0%L_uX[:?<Ml$@h'U,m@1:Z!bj1q@57">BTF=RCAUea*Eq[sRUleb>)i@&[VZr\<8aPZ_meEs!j*36:E8P?cH_h"f[P@drGT%oD\X`VRT%>570@H-#s%+BAWOJGM,O6n[WNI\*m*&LihO$7[tU37hl*\*u>omj6SGFRjHn"]?Y?rSP,c&c>:)MEL;$Wl0P9/c)%aT%Ca%JRDF4d8$0o_TE[L^ictp;(1EQ^1e%*HW)3);%Cc]%r>?5Qf;;$$l:C*@ERr0.(4F8uWF#l%B/kFK<\njF:3"(&9Mp8,?bGFg_%gG<=tSXX'O[^Tn`Cc]#1O\=k_Y/3lcFDf)-=Q9e7VK2ireLuj&VK9qWF')$BaJO#7:9@(UU9a%=k0LPGC2qpKDRjjFYOHS=l.h^7%OC("Z2OtAu(6hPVQ:j.Q`a#k7Jn&VgCc]%:'^*`[o4QOW%2bdJCM27nZK^.bl)7'XA2YH@&,_$cl.iu(7;()[@0AIY@^G=Souj)9%l.h@$Pe>pj3]CSoS8`-`:uH.N2j;a?+!8"CF#ngj6`1#Wmh]2),+ZsZFQ,G?7H.7mgtTqaNm5.;aF/1F,Z!`8!Vb-TdAO6!b/KS5%c*i!^Yra-!?8u9q*fL63pWtZucU!*P^8d2$'(:!(c6]hrK9Z&<`WP5Bp\%aFK^f$l5D.$6r?5I`a=Gtg`pOEZ3^'4ZrC9-tF6&e%%\T^CE]&q9t;oRK:TD+d9qsAEoMsdG\RbK]D0)&HD-.4C'oPE-;m\V(f,GrYtA]?N#C"d@jg`q]:Mse*2$$sj%&5!G<$dnj?4+?U%%TZ&/&$d/RjluUJ&d/rnjqF:qIU'*hf5VCA[TY22+oP)WthRJA8[J,cHmhg38BV+]DK-er?\bF]M=(2X[IhP?AHi*`IdXl<[6gQ4P%-op2p>Hpai))Lf7.6>4d0au=QT@cSKbH+K]39Y6.@e26f2\aC5T:<h#hm5&0,JVT/#Vl*ceon]HC9:N';4i$/^>%2?'g*4M?4NdX%G\+1MRDM7uRpfgU-J"X_`n_8Cs"n4!M7%i%5&3aFf\49CJCmsH>:<%rf:V3:F0C21mc'u3Wp>X:fDAl;pJBaB0'Qi5k76cK:Rmos%i7p=J>@u%&ibgH_=l^$H2aJ)p]QsOc2rd?W/>3Nf';=XFjofD=4-:]5C,Kj@r_il347h<09eW>a\Q[2KP(KMc0FT^2,(on&0A'Tp%C^=V$,Vnj6nFVaQ"XJ6l'70)&#gS/g2r%,MDtV=5geD<CcHh4t2r)Z*;r1LL6s_h6/L$fCkre'Deoh,ME#0o\55,M1PP;cEn$k/o%nYY)TiK=)GJ;Fi(]Q-K=9WStq!p.:fAe*)o2mHCgRerCm`--35+dnD*LZJXukDHW&?Sm\4&TP:A`7d<@7OP)ek222+I_/es'9ejD%\1WgaBV.JFM6-5-2qMHCe;^p=$^em)1@WMkjJ4O#:jMN#`5M"t$'N:2S\B(s#NNG`mdgL>I0J7U(at5TD>QC+<sH0fle^B?T?=?b%)9eJdA;cN-m>9\69N)d_!0ZSp]1!I3cZ+B&=E,WuVI@P/[4,4<C[o+nk"RBO$M<pBr%rFC4i9HFY!)J:>hF1[d$,D3p5CC(a`2_J%"ur&$TFFgl#7401]IE=K-2?.b*<(>);gH$WBE&rQ!%B$Z0[W`6ojI=Y:@=qDg7LP6a2>_Y)Qi3PHAC2Vk4W*@YJ!Kd4ae0)@U`]$%AG;q^@r92T]N#2]qBoK^g0c<u#:tAY;U_pEdY>c]0'r>:X`F$l#34;l57'!J-%3A]3#@J#HeA,&lX_.Z]rnpC,B>j\WZS-?2B$Yl%_^6G=]^n1$Ghp8<]OEoZ;pt_V,g13'X3"nj3=rjpZdLQulH"a=o98YD^"\]EniP=i1kD"jQX=(0lq#I8,Ws\#6Sg6p3m>0p<R5\Z%^><ll?#.HE04#8tg4&L[1C`etNSE]*GdA(BFrK'2S[u8SBiELZIIc'[Lj80hd;dZXXnOsGFFEK:QUB/mkK<akDp@((:3X:<`"\VH%"c(K>6tBaIL[)g_<6#*T5VbJMY5;b=<aAaYn.r@02GSR'W-,gTjb0!\&JC./nN=9]EC"WJn!Bs->/egrW\UVIF5>&<p::B\%HiKD%,=t\mTNeJ,;b)8@ns!@Z4L3Ddh41O6ZI4,DBMMG=pFHA^N3c;qlLC^JgHFbcio[XA.hnNYW2XsH0d&JO3^TKepLsd6M2D+'gmXqS%1V#Hq0!8Fh_gJV+A'EEXR8TIC3*Nr=s,\4G>Hi[bOXe+`,BaALZNFH8a=>M'.`dnohi$N6Km3N,2ub1>hfGnk(>uh+9sSA.%WkCD%+(><7MtqWMQ&2j,JfXF"85&iW&TMi.k=tgCU[qk+VI!PmO8L=X3@)hmX54[,%!(!cA%s<CWWL7^*/6[Xa:9reLoPj'IHS!nc2cn3%p'B\'f=WZD.20fCG+76W.=kCuIEjj?.`^gkRWAto6,M=Tf(eDJ"L,m_+FUe<eYi,n[&JS!H1.BJagI?O2;]pD"4,l?\\::0@fc!i%$f79>/NOP>na_gI0gB#V)N=LSncWli]5fn>`dI7(R0I.B$#((;_HcC\WCO)RaT;m>"6b"?M/O0&T./%>SN^<p@*flY6h8PA:C`Zm%M!JNVB)r4]!=X.0)%S)\EraIMGIL0;blS<B!uNH0L5V(b3IkAV+".LNBF`sB4u.'LbrZ1"lmBZ=jMbHJkC"T0U+YPs,)antQdAB9%d&9:H9i!QPb3*pmgYsmJj2nRF?HO)T:!d"\V0peX48=Rajn$&8CN5^3EUU*$lV]o.8Bm8[WaOQn6K.H-%G("@@j.ATeSiI6TdK4#%Rq48.o_84P*/)35Sdj41>eo#h!UfUgYYSs6p\K0ml50A7..;N]!hToZf=cXa%!eHS2;c)rhHLc#QUT]qkA@H8mN@tW?9acM0#hdK%O!t6Tn?%'9]_=49(3HaPpWsI]Mn%AW0fOXXh<X5e+@D(3H`s'0E9EZB4)KH.e<bY=*oCL'i_8T,m`@ulQSl(c]7>8,>k[&/\,+@9%Pnl2-m!f(:Y^?>]?!V4^oR-E0RFq5h"[12FIadDkc[)de9.L<5BfZ.*Ibq3r4n7e)p%)EbTc'g;\C]%\2;N3DU[dEaA;ThpoeXo;%RIa`Ln"iSI?5IUbTD+(Ub*DSUlfY\7qR2/pI#GMdc[3m0i->i-YC$5\(V3jl7;'3`caenhI]M?gp[JF%,hVuX^:@&0cu8S]b^Fkf%7XU;6NZe)mGqTc9]5?`Af?Z&;_7J1Cf#o'-qUsM?i`<fsZdO46UE*$!DTl8!]mbDX:bCg95OTh_Vn.q-k.A2Fp[QMSL9A#^c$1>f%PeONjkm`jNqFu)IhrLngr5dEQ-gGs5lK=T235rR[$cu#1e')66Cp&-`]PmJ4l-q&HHi7Q5ohBq>+1Dstc!&&6I/ZT3T_nNH:55Yo%KVUa$E2Um)Ekg.CR^:JVme('FX'FXf?4lsHme(W["'@.`LjT*5;+YAL!VcFn(iscQ?-\-3P4LMMYMYRa90:,phs9Ig="`WA5>OF(%jmGG6]megm+Y1Uq\_#0^0UuB>SF'WI*\-EVIb^3N.IZs$^=A;0b5(N!oA1#%af_32?9^Wn0N5c:/Lf>cIbkGlcKs7fn+H9Q%MN!8%1Z%H<;%?=3cKOJg3V$;Gd.IJ?&5sM$rOCP%3!-^j.rR=.f\(W3]d%CA[N*](@T^4EKZQ5-=_r!aGpU$Q&kJIAR0$AqlBZO>)?DSk%[?kK>0\EpPm:AakLS8BI<:?uc[@O-LWJ((HqhaY1qB-FLPus#R+=OPh]`/^<DuV732KsVW`7F)46fP]Mh%M9'58g0c-ab*sO"SRA%[F[GTC):&G3'K<M&WSppT>FaCq#qVI3fu;YqOhs]g^Lq]KNhm7(2fbRa22-I2C:O5DrSY&\"tn>q>("WGe'&/_Q/(!-G5qg/d?qo%,r6D;l>7$N@eY%"ISjUm2.[L3K$+a<G-7ZFNIC<7pJ82X^"_G*T98fskl(=7]%J]*c`_)=X'ac3V'R^7)I%*o7h;oZlIjpaqsr=L%OU;pC-i;TG=#)'YmB'3u^5`ONbm'E'pFHV[MtH<+6Lmd)6VJmkNhhOC=lp&^r>re7+pV6i=[:"%7sNj9NXl>lW<=)Q.-a"ID#?K%%-*Q\Be`'G'W.)B$$FR4hc>`S>s+ZrB&\YrMT1WQs4adqueX$R(,[LbA>NLQDng@tnRRt+E#%V5QY#]Cm(@,)m<b?$2p0mJF>)gJ0%::$'^B'g?iDTe_eA>QA>,0BW:*gRj:&f43=R!<t8%sB1sK%u/-:[[s%lT`QHde]$)dr]_kZ<KqogftHC9B'Q_<R6I\WgCEDj2caE%::2::W.\N\qI9$eEsFnbrXcPFaF#Y;akQBDeenc\/=dqk;(0HV:Oei!nA]pI?J#"Xp63:q$2s0Z/;7G0j=Bg#EE6uZUqir"rr&Su%RG<?ikk'mjKql8lh]N(lRL\PA'"8pd,M:[E0G!G!V/>6Y.0Wsj5*Cea2nR))K8fI'Cp20:n_d(t+$@Go7GC/+[_6RDYs$]28b)k-%+ci#)CBnRhGB+^'frkOcZQ,<\&-%UI_50]:b.BSEpj0Ye[J`Ec6n#)_Z-#,[fZbV&,q'%!P+-ElJj;ALWBEJh?t;8h'JFjI+jI1=%aiU&;adJ?nD].EG#4sQe/`Y:_FHGnrR>9geg$,QbbH%)aaZfjHb*i+WlGdI\mA@Hpao5^:-5EMfq[:tp28!!Xq]9O-aOFF9CJU"N%#AqkMWhdW/TmEE3[HcUPo=B=rd''=";;I.`IW<S0U7@1&6d]Xbs56/"[pPGDnp76Ic(W`lnp3Aj+c;G5<2Bt0D_aB,^YK:Wg[RQL%5!=bPk0:P%90:jY"EX6:a-2PQZX*0f=B,T*`3R(uPl]PZH$]pD+$Le+Y?f<Jae/R#452i8c-<?LcsjR&!J4Gr``[ARn/nU]X*$1D%R`!n"F3F)Kc^[7hOE^.Cp$,3Jkm3\?ND(=ef5!:"hmfq:IpH],E@E,t;bm_Xj6`Ws)p%PW,X>K]NCM%'iJGIU\8E>MWYtPm#fm+#%5VTKPKK"E[ZS=;mJ^%Z/%>0!da=q(4jgjmaZ]?5eal<NHSKfV.`8n8Q1aLpT-F'?$m[%7p$Oo4.]j5G-FfStdjl"=\EZ-<h6Z%D.%nPWO4?YqHIZ[9Q8((S670fsJ]k]i"?S0fIqLZ8<)<fpIm[`ZCN%lpV:d4#AlV>cUkNbmcd+*K!!"qgG^Lk?)B>nc,eV%h#&cQ0Q8%>21Jk%2Z(2mCDqu#5Uc957e=Pr)Tr6(YuDR*uXo-SS<W/\oZBmoW7LXobhoCVI,Ekjo+cga,F?QD"pcFT(cX(G>I^iq@2nbmFg]E%c89bgokj4^RQA<LLQqgo1aY&ocTmN4X08Y;!2EjKN<r+[IT_Qk4/E,S*/MUf_hZDU0Reba)1.s?`X_'=VKWG*[WMX4TI0]RUTjp3%0Y"0@DkERF0QT-1UmLh)5qZuqQ0Dt`$LL5lkkWQ-ZlUY;&19;"cS."AhjX2cM#`I+hAn8\B.&[!7]h8IO_[k*,?3jj=[2@a_QThS%n&2qcbG2JU+k3^L"33kO'?;H*Rd3sj41\#J;Q6m23.o+QgYk&tM)a6XZ;k=<38uTV<d#tr0&lk&1$q8=pVE$@V59a=Ra?k6bCdWS%Dk2$4^ni))<NAut$)+nob?.K#ZMXOjK%WC>`e4KYmLJ(,6#C!)[@*1Z2kNJl9$9f2p7/"R'iG6&s#*TpILff4=T107N0]fm9ntC*%=bd0CP@D>2"<S6eW6poQ=7Q7U"Dt08M;rUb9:$X'Jlgd[R=fR&7lg;YO6o,^s0@lk_#lEoqj"Sr-1`mP=T3"[4+(3h>grI25$0]_%jdT1Q:a=ZD0ij5T-&_q5p4'!,rnNStnO/Y6PD"CX#uB<m4?^HC,,%-31(OTc`M-c<FCq9*hN!1U.*<[kBct/.8D"Ik,a9>hcNY$K%V`)4<"()bDY5jPb8D#NmoHnTo&.*Z\qPcDq9)MOOYMm<`_&AZ*ZYpijdT?oK#8rH(mj#M>Kq_sOI!Dqn&:7Wlr'aG4YmZ0sbhZDV%#)gm2aK$7/=\ZC_&9ft(T;OM?'C4,b@,K^kS+1+N#d])X)[ljZJVTAV&X=,5`maMh,K#3Y'Fd#1@4J!l1dH6qMXrY*%4'uj]M0]e%-[-rik7eHKq'A]ia_?9rc;<"('<-7c8F'I'HT'ruMc`YkU:ttdDh:baNp.fN+^KjHbfC`8!u=H/`jj+^if0aE1m).RQts324"AqK%A_&Gljd0&[o&dK&=Be;$f<h=`eU.R5M+S11W_@/F)U"oY@+Lge14eVTf7:Z`fSm]R/2F^lQBC;tV3Kod=PtO'@ooC3S4s-S:p8Q6%S5t37Ob7_f1]tAT)O[\5JqLQl,V^oUger>G#\9Eca+[4Woi/LP0/jEFMXgDuHnR9J<@WXAq_;5/YZC0=G,d7iIH:-+fa-fmg3P/f%qgkmnJ/)+@O[unmXh<rb<GEIm&okfKRK<KPUeL+P\L,o()r!2-^&^-A5AL!`(nO^/V*(aPOJjF0Qh&dkrm4Cp*6PAB:k"N7lb]pr%+kB'jj/2$daR7;N>$kRbK7HCreme5Dp=IO.eqrK[*=_]OAe2Q=H'fgA'OB*5K_UES8EWVV)!OI)\G\/=+9?L3.:dJ`21.>8YSku@%hCo.1&3e5ek;`@eC0ldG2QBZ&jc<dLHI^'ODqYUpDp#]DUPm6#DH6$e2>Nmr62)=Tbj!CoM>#"p-sZL4[@U_2_U6AqRN<ZLgZ\pP%'rY(ChffT!`91=$ola9Q=oC52p4GgYbD[T:m4k,j3sIe+ASR-"1>SRST]gobj+;7FG)s74C[6"LX)b!hN8K-F'ca!Ro[5p(0H@S/%#`=Z'<Ts_>>i*Q5fN=$RdIDcsT'ZC9lM4N4o+gJ-rt'0$8h^)?$9V$nKd1S>QK!lU)FVD1[)^+&HuiLcI$_:;b1?GB@P![,cEr`>%7<pb>V?4,)9rsV?\+HW9C#qU+NQ<ugbg?::lkiB.ff2&k&sYCQDI5;7:2T8lXJkFqR&q(2"n1D`F8R33L%V:_)Yk)lSsD%2Kl;lq%-ghYWfZVpJ&9qnUVe!Aj;VPLoPPn6VH<nRVGB7%9C#c,V37t6h&]6p'N?28^T`[qk&GI8nfj'g(6=omF@BGD*bFl/K$@m\obX-RS%:K*[Lp[K"P:Yq-_5]h>VH*pPorGUcqm1I0?-n5rRjaC#V(KFU<riGMUQlCaFjQQKF-74d8ZFIZY<g(UbiY_h-ndl(WopQTPYNCAh%IcV2([BHk1^43$D?QW0'U;_Qj*I't'k&GCF.$Y<R"W2Gp0@QpaQ)4'KR3m;$%uXof7l[4>I9`.F?3U2MI!ogqKobC[%HQ/MD/TNR%B)Mk!6=^KJQK6T.a-1e9h8/AG<a$VX5PQYq-GH&Yqt\_>nmh@S(-]F(EB/J7n,FUPDt,oqIuNUH\;frpJ(uRfGC*ltnqZ$S5o39,%1Dka-UpjrlqP%QhAOJdq6F,+nW5%CF@fsJXou>jaT"&*QHGoKta,/0F!?CdNA#<+H@qW]cr'b[<7i+mCMEe63DB#8m2GZeg]mDue%ZuR+4=K`ho5Pr(&`qP_$P%@^0's2?1&"WPqHL96&]keH;DbnHSYN(2Bs"MIKpBABDAc[+"CrA(U4/^o"0d-QZ002/mh0D#f#Yi>o%>'a4%&&D#+-Wb>/['=WoQ(KmtGF*[Il;g>>o\O'k<C#<!!.8%-&\Uu+/)Y2T$,<K.c-m(,2atJ)Pokd.!.92*'g3BL\\0#gp>!a)%paW5[Nt92'eFp'KN@-fA7oBq7@W_e6`gT0br`U15g7&0nT$$36jO[!9A6.echijWFA*/Yp4L)5?!?CX9;Bu'?=_hUs[dV60KIQ-]%Mt7O!+4e!:*l-[21oWO<%(eBFY>ISk,OB5cr-;*$GYheT9!.lPLNYjI0]u2.NqG0UCZXQCNeJlce%E,P,Rc]A!'W'6JD+1.(uNS!%\3/j5F1T]E=O>As?"&7GRAeotmh_#PKk1p$Gli1/(MSY2#E/i9lq$I\Fr*GlF&sih)PFkuf-R*XrBjCIV6[V'5CP?]R8Ht$=VmqN%G@>i"H*D`s^tg#NWLT!5`FPr#&7pg#Cg5[rKH+981@cu^O(,WU=#>SUE_UrIs/G9&?QF!m`oJg,9qN&]L1[YLO29F&,PCG9:H0>S%^i]?JG0n$"K<X+e!?Nci,!#s1g3so"s18%2F]tlhL">8ro!nf3ct>XjH!1eG>.-)WJ`@Y,RMGRlj>=!V\)Ua<RcN;Zdj(g@\j=?=%;C8OEX;'W1Tn5cYDodXah0l$IZ#(60^>'K>2_j*[]-#L9j6l=Ocql''_OmJ=Ft"+"D1CT9ID?$g=H?a64Fc6".\#T65mDZsO<9h5%m[[9Ph!(HCH099Z]"poVr1,R$9ZiZ*KKY-6@Br&LV3elIfmi<0aK)G.4<EfX2UQ(aT^;CAj.)](iN&tG;6I2_%FBQU0'P-=FoK0E%&8Xa>d@C=.E+gDeSdtCKq^opQmjXqNi2hQJ\Suc%\JX?H0kQj:a_X7&I&QJ$`d%W1]&PKif1cTHlGbj%>jfVBjme1U4m(a8SEnTK%G*rO8!3Ga_)O:eF50K73NgmIr[J!%/=Q</`1$f>6<2]f<aqf"?AS26(6^@?CbZ?H%`Z;"XNL:k6[$:-P18sr-N,nRo`(XuG(L^'M%Crs<\,Z2Rm]X)\`LSH4ZELnr"LofIbF-5!@n_&At:&o`?N*D]lY!).8>RP(;)8!V)M"^O__PlJLpQbkB.Wm#N7jG<'Z1h#rQDM='%F_32r#MZ&@KCr0IE:TGBe4/e88$HiW^q0B8-7pu@l.%+U'*IVImSXP,S$=RD/an\X1u""G][MZc4lO)KQ$k^8ii]pigqJG5HkiqR%%i"f#7,lr[F5HRp*gYQ"p3#13NCZ%o#CG3l<&0i!pSQ-QO0V&)\m3nmA=_V[!T/=V!:HC;X8GPZmJODNq_BsP5(2"ZTKA4m)&Eh%%Uj,h/jQN^eeGBbPjJYe,_peG19PXlfp3q"fl/67eW*2KEVcS6[1l9#S.f(5ad*Tu$E*X/amlIEJ0(k/52=Y"*]@7mLjV:*<Eo&s3%BSkPI0..Q20/!2jBM#ZE)VoJr'1B0G#Mk:CqX1CnUMR3g7cSL__/olt1juU:M)gE7T/5e-K3ahD!qA-Cd)=R*cInE(H`7+1]/dPX%:%!AiHdc[qHt)J!S'l_!+?m)JM=m\sL=:Qb<cqlp\jgl7VChPbVTNs/bEfVO[Kcd]WU(f2L^leAfJ$)[!5PePQsBMl#>(Ig2Z77!%oon)()8D,0Kd6,eJ0?`er0R7<P\mBp4\K9s;Hs?"`D^F2@V/;=G]9h3%fcq/01kqpI29ZqJ(iI4nTNLXL_HqpCrJ"KoY'S.mkmQ=%Aoc&*,m/STA!;<.Z2p*UMQ>TE,-/Uif%YJYm2iXHcO4idFZ\:E4sq-c,V,d3?9%AZ_g,jh'@T"gk"U,/C!7D08+S:J.Xt:B+G;Yg%d!i[ZM"?T%L#Y?Md!<XakIAk03R7gerp__dZq"=C%1N%XBC,m(M3!ql+<E3UcbIL;Tr*$1K=n6)U6f'd.BlksG&k]54bL_d^/=u<%P\ZJOQGgX$:JuK<'DK:X`tO>Z]a,&Gp3@jqN%_RF:OF>rDFm,W%^&I@!4pi)"_[:R@H6;#?e<a$qa7^&l$7YjC6-WNf'VTmg\GU%%Fr#YD2a*3T:!\MtT-s,FHAd/XRdTE_pSP23gJV,9(RWqLJm9/j^7<?4etqJm93p$CdWG28Ggck?Z9M:`ddV%!KA;JMXL`c-g*e9G%*YMo;2GPP=!Gh*q8Pq+AY92aZRHDl&@WLK>0R.6d87V]`$b[CGp6TQ$$`iKT-t+`d;J#fK@k*8&lq\,Z;?q<BY9U+@c`H5)gN)0L%?0W:JC)TkXlr)0n:`K<Fd&!>]Tsd^hEcnAA%[VJKLH=7tOAAZApWh;u>j<1IC9V-DEN*SmW#6K]i_iS2:quqd.1ZJ4Js)\BX@rMM%YT`q]?"4@=.p#J;ptUaP:H6kpmL`!@ql7;TgY'$b4Q4G<XRpg_<0LDPNXhqDGmAJj3BL6N1%441,qEnjYIUVPC-CbY+'GAIpkkTp%(#5XWd@nRfUa]R6W>oYOqN`g%15/A\<l+Wc6bSa<JP2Ee&`6ZS]UM8_@M]DUT&r,aqMEZe?0W:JC@ciP?nO;teG$OAh(M>0LYA.P%C[,'.[jR@C9%_l3Nag<9a/.'P:dkBgIBY=c'n,JH!Jm]pST-ZYSp2q>:C#upI1NutS(j:g=%2sUJn2GMrXT7U3<&o/K4Kpi$-^lj%7$_P=A2"dOVrNt'>s-(pe=on`5Ae[Z,R['(iT[!T4W/hN-\>m?IR0QSd%fJW@V14i^XgP$#!QfaB2g]':ScUka%[UFkJ;n02HKOj%jNC0@aj^.O2*aK&.I&qeZNnUrIH0o%am,Lf1fD=$Oti4!%gL-P^UW_e=_*VQk^ALT-Ar1n;*4U'kdDS(Fmg`OEn(pNbA<&SW+hF"%j!=%ko%ITZQlm8mY?lQL()%s'0K*!o%,!g?<:rY@D!U)>XB=9pFk+V=amut,]d:W:g-./\p)CK*J7Q1#hjlIW/%`=1XL(JW)CTmf%^iod=2KhKm$11-5,XJihmUB/;in6ESj;kMr]Wn<*c#VD%l6/53($T;EOgLWTEo%5=S(@DSn4K%0)G,fKI)=>l8\gC7Ki.=38-jrt%ebLi,Q_Ii:&"=hX[3i(nD7rh0^uTm38&*uaZ50*)U&/Rg>%\qAU2T1H,l?LhCmYa]m"<XO&+b?[lc!kJ%*;>L*A>sfZ34+:p7-Rj%+/INor=)Hp3R*qb"[QKg6AEGJj=-?UinJP(D#5DBX1\*ojOB*Pal4h*%(o-[.e!0G[W3OQN+q&S9th7T&t=<!"T:qg7s_*\b_)dU%e=)6W2b_.pVcboo?UZJ:/cNDl.GV)Ym'^"dkA?<=p3Wn5j&=29&$@_;\*2D7[C>=&@""<ano-+!ZT6+qggj1gb3qfY)D1L"X,(bM%e<=D`T4O.O'H]9JNIft5D'r/FpU>-&nW)&,<.:Y?h,eQjGY\:g^6/%`j/6PTD,fNf(K1noNbH]pnRQ#aq"c[p=j+f=es@]r`f.F0%iN8V7(fsMs!B<3tM)iB=Th"i_+J\<mId?o2,,Zl[-`,_\Xb0=5I[$]7Cq#QH#pP%Y'QcERSqIk-%@Ot%UknYpRJr6<hT2[$451&D%jJ/N"SC<IbG2^51q/EA>qIA\j&9;\ZW'?>2WsZiu*@:fGO;JR/XB@jWhZ)78.B8gEX#X/dB.h6lk2:(&qJ:;laj=WJ;`G?-Rr5!&%*Aj8;c$tes^%ZNEfc>c*_O88@l/4hOQ(.6U7Pd_5f?1cVN/:;PVf(M8]_E^K:;udZ<r:`\^>,lX5D4e4Vb%VipUB[#YY0:?fN'8H%qPZiG?S-NpqN6d``Z&!(86@m8&l']=2muOH]BVZjiV[3"o=1'3XnIu@=_KdR*Ba@2BD\fmm%5?e*GND3Far^0?0sdeD_$HIO$`ZI%qJ]`r/o8:d\XP\toN:./>KMEHIoh2Nn0lBT8FlJb!l3^L7q/IoP'I\o-6@SY%\m?YNl5/hSOfc-nI*Z1eBh$N3Z4eTg/Ei0A0'jR%EiE/Jl279W$jp9Q94RK:A_:h6L<Ng,AKC_JN#o;2g6S7\BUt!G1h(sATTgcnW27`T1KK_KpnD+P:,C)5R%k5[a.+lc_<BOB]qk&6%_mS=\*TL!SbrkbaIblk%*&@gPZJF+jim\u\HEQW]CaU8ZIFkLMTn:U@^`24jg2Y,7coMgoi0r$=-`l,p6r:-9n:C+(:,LIGrVRdL%mO#jcFXaA]+/eA.LX_&@^D&r^^PVH\JR@k[ZbS5"H<@!X?V/9I?$/DE1;P$jpi)P-m>u!Fa$31'q<D+fXY-X_8^\8/dAJ7L3CTAK%_13:S1N)T6U9h=R,;<AJZb93cgoPD-QG/TYIc7lb]q]3c(8'0MoeZ'4q"oK_eA8F^?E`_n^)\ShUCc\3ODgIR#iZW>Eh%TY0AY'?%&_U(aM9ekigdLcrD_C]D!mbAOYK?Kkl&k^7[Kg4VduQU3Dk&'@mmiQ2h.mh8?fC9A2_>nN\=RfkOu.f)Oa>GM99NRr$e:GY>*@S?%'7/+,j@_uGb2Gih-\D$k#s#(dSoa%N<#7/7;Pi"ZWSZ/Ma,*cXa=&r')`W$u5Yc<&YGJT&Kb!iFWki'nFctZ'C./XnNYY^=7K`+[%NWu_S@YSS`XPVPsB$$Pu+)5<p9kIQj2\ctF5Q]U^oP'QGrYT2WK1tU4S$;6ToU:;4D!UlgUuPh+J]:o`S]a8'7M4lQcUoC:#j>nI%Kqc$)OpFp)%ZDSJT92.$qQ(q\/[Z(RRI*rl>cZ@OnB@VWSDaW"TP&L4Z:Ft?=<r9pI00e&Z@rF-`.F#$CrSdB6M#&fJE1;[PfuS5%m`'J&5f.isIUH.5,Ds"/Clk-]B0S@lGN4']*?5iP-L=6X"ZSAt>j=?"Z!3pc6kbs54NGQLoIL,l"30RQ6(7j'^[B)RhYb1W-ph,l%1"S*C2I]7e"rpn4fgI9[RXQ+?bso5;3^)@SaB\f;S48:=*.cj4J-I^E\FpZ,LV#9S'_cKqS/:5=KJm#+%u*sro>fXT#WNd5&O.-5%L/?A%MAn;32]MFl;l]rpW@b,d"4%<#.>"g-Ll,:j6)i9lO3H9F^EiTKdS&\u<XqOG^i69]?aQV?IMiY4qI+,j@27C0<r[tV4^?uo%Aa:?iXW*WRH;DR4<JVu]Gp*A&\=AJsE-]^&Z'cqok(*=e^s\UVM>`^QbZr'<:K7RN`b#l&(ge#1_P#AF'8j9^k^4BMeeab=A2J>r%-Jhgge9i/Pe(W8lEVt0tjCHkm)O[[Ajhr"\m_BY+HWO]di`fPQHhuFbJPWl./IR(`diSeoX\Crb,J6Bk5E$?p^7Xg2ikh)^8W46g%7JF31auWghW%T1`ab#e,?4>N47h33k?E@a47oEaNYdH.U%Z[;Dq`l*giVOjCB`KD:>oFilJ&ErL30(I\*qW+ViePFj_g']\]BW8*%M4(CcVb,V]"pb;e]RQ@sIKHgP5b2]K0r4&4Oa<Sq]9i<cJo)Iu['<;K9S!s<%$(q&$)$#tJ\7'k/i*9\`9mZ#m6YabrSiPg.l172%m(Wu$N?%If(5_1B6&QH7h:lK6q-=cjl-K%>q>83Pq</rAjl2#\m$CaAmC,P#n[t5@CNlDG4lR\^h;ZED[MA5TNQtUo[GR&1BAmU<%d],Dfc>hCt>-t4EBT*8Y4ZppMr>/UKkiH*h>Xu@ukmJ%=,npl6)2%;ET^B5Gk]#@77U5ME/B@JjNSV_;ZQ>7/^>rn=@"Na=KH@[-%bQS[8lQtnqSBlJs"S[5!:iq7)9Ge^tLAtm6"Or@Q%53uaK3`3t7AE\"eJsSG=<[E:Cjrh(a7[3:K9-qIrrr1Y^D/=O8nqJNjkrcA%997ss0iBq]`l#jQ;"Q&4(lZV>pJJ!CXUkC@Dd^ukammVA3P5s$F^Lg0AiL"A#VT!n*lW,IirpQQ#moPlr7q<&1kn5]n5B]$3XAR[%2gdW=%tDG_3Z%cs=;8V"iMYR"\:H;=L@SMOaK+!5?HB%N=uIJjKQ=A_c7>>mQ*it\Tpq,ZNlAp1GG4\L8CQ"M+Q_:cX<K)FAbDD.%CbD:%b;m!T;o[D<`3^lQA6Vd/N2\8JC0FO,[a(9r[\fKfkHciICe^shW@?#"=qENUXiZg42&.Dh/#$^XBpCD1Z]^hZAAL0IVMqXV%#\cSgD7q`:9[0(5'll<=mn=TtdrU8L!3RFKR3B#9pC&c6I:e;;krhC-9qN;4CO4;<;q#B6fUCYQ`74FI+f=Du%<16.84\Z5X@OHV%bRaJ5Xl^oUS$P;7iVP[WQ[a^qiKK@jQZ.[M-[A_.R8?o!RQbI;C,8;IS<bEHLLnJ`/k+o\+-n$(A]?sij`#BJ!)9AVX<]N^8MH!H%I9pXbAr-\Eoq#BU2_tBk53Kb:!t5/\X/&0Qb-I+s71:"ccqY"k*?"ljQh0.P#mNY\`s/gV$^k/9JDg_"jIk;UnPAm?%n8frBco<:%f[P:PL:SpPAe>-#q5.Aa%n?Q_?K].\'+dtU.&CuC\RlR2E4E_G3@oB5r6r@)JIu%<g=\U3ca!rd9N50AN"QL*lTM^4Dg_K#I1FY:%2(dXcQI^(k%P8mOopT]^[+Q'<:J<2h&%E:D7C"$d[eI!V/a"N[<=*!U!B`A._]gCtc&3LD8BufE!C^a,"VZhrAA"k;F)!o)>%@XW%$ID7;e[T2eO@2B.MmC,Ob:,+Z/<eLb<LbJ\.p:F%Y+,\pP[A%>P"eTD-998bL<-\g__Oq"-$rcI/ZMs97?f3N\.iuk\'05$8`p5u%[>9N)8a!L_bUkV@VPXM3loJI@M('0O>K;7uRB3>$'J5kGVib%m]F1MfLn_g>1LPbh=]9@r11P,sVC@Dd?H/X1"LC<CA[u@Vk!cNG%,`,T5^6o/Mb\PKZ.Atj57Ebdnk<s3U3ALb3pq4g&1Z"B"n<[,++pJZO9P4MtEgGfD/T5tn#6PVRftE>i2[:SNk47qOm(;0[aeHp0%1I_R[Wg$NMAN?Ca-#]Od.*Dt'at5F5%*CD,c>q+PGOs=NiK]h8jJf8"02cgN]:aa2/ZUAhALsjsPEU(#,(n$Y.Yqb(G*[\HAg_+;%;\`#J04Q-H_ZZrRSm,fc/.W$2.OqpOHoIZ%='Tf"@pjjC&<D^T/.3/*)d=@oQQjSt12'k[6MJ)kg'Y%-"Bi]EA7o%?<fHhiA\Cd"%ZlHR!THDOo+>[#8RIMo@e>hR\!ZNG$"%<7*5F^97A]E)i$q?A'QK9DSpHaoKSh%:o5c>k-=#n2:>F(KEU0]/I/DN"4*a0n+C6i)$%8K^cB=\]W0:76p\:"%4,8aTh2$S$j!#+%Zt3m2QS]O^J`.8qKaUemq!2-uD*=rDI6B#g-57OB?U?d41VOd!=e3CT&&10N&eRB.g*%]hAUY5a(cF*-)5t.3Pi77Gq8d4TKJ9U^T43mjo\'8'<_5q)N#<UsL_Z#AGT:lt(H2POq%Ld91(uOoo,;j`QYBfi_pI%"puS(R\\'%jIKkt#"Ca)VonF=/:D#!8p&E8;eF<#(q*QPM-<=pV1>Zu/%dWl)O7ZP'=$n1Al9jU`P_b`($,TCWGSi=!b":%1'SGSKN_.3QC/s"%;2E=!2?\OY<!A7cAg.c(UQSWIAP1ff3[lb43E^MYA*"D$^T<:;1.@KKZ;B!pYadI9NiE)nOO\/8"_Dt=BI<I/K-40UUP^16bKP/r%[cST`CR&%s+3N)<50GN6`hA!'c)Rdj)1t-g"5aT`OtD<31Z$C!qOG0_Oh`V%6c[iP(X68ud@)P;nBY#/"4n]sQXp=dF-boEfcY9/%FI%KaA$i.q(qFE"!t0o_7C.V_($/uK0e*H,`H3]2-t(6:S=%jMjF#8@pon=%5*smEE]GGl/X$p/[Kg]<XI.M3l=Gj?=1Mm-/W*l3%M&')Ob#%_--)#ol0$([LPGUV7BfV/WB$qA!51N5;9UU_Po^]u6HPoJ'+SleaNN.Spb:@au!G-#s@AKor6=eb8b,@Y6XEtfm$6V\L%2>8m"?$L0VE47S)((DAK'lKH0XsWAHQ+]kT1qPcO!EDdUa=T2E%qXZe.,6SqgX&2"W/ASH1Z&Aebr`RF-r]_hI<mc0:C(+t13RIh%G[*u`(hN'G=V(`HT9Ci_@0&j=3Lg:%e%g+5^C(aIQ1N9Vg!IAY/DtM>R`[3<k>D>@;)N6Z+X/X1V)cI@>K4=VWX^D0/Mgf9Esd03%]o3sN7Rip>_3C@t!f&@s=1DfgD.m>+9=uJI9h>>X1f\O]JM+B>?4t2`Ae+sK7HU'p3/O*f/Bb&&f)@/G:L9=Ab:Gc,%fp]=F;BG5%[nS*5;4l<DQHop<QaV+ifcWf5oWFkTThK0Z6Lmg=CWR1lBJ@fCEb'#kMhQ%UHl;,FP$NSBNBq'ST)/"R-;VG``ZYb#IbHuj[WQ//%1'0Nbef/\VY*I"lBj::1SoOT0VV_T16CcoPHrkIS$M2EIlhg\%pCK@)o-2(_=P3no!X>aU4>0Ci<IQ88&72G#/1:,DI:@S%]/#[S%?tsZY@XQ#pRrdX@e*gR,`_*IoqZ1op"KT5&Ds#%a4YTRdOGn'LCmL#r:\(/,K9\<38ESbuD=VlD`V>[i@;TgsqYan"/FHnY]/"6G%<i9`5=/K?5<U<WHQ"``'ekT4L"58B/Y=sZd<`?7h3gNj;.3%Z8W,K\5kb9@nCl[!ub[tnL]0idHlN2Y1V_;YmYo^/s-bW[>CPQ&0%I,b$4>G7Y43XNPQ;+b\D[X1X'1!@rh^0.S%\eN`(@pfctk<.b1Np1n!JSX-K?]bPfIDVqf#9;cF0\B]li@l2fT=)MdWcHP31GWVP%r"XSIU>mUXOBNm`C=/VQbR3#e[gLX:Lht8:RY8(gNhch.d#+nk"mX<,;o,mL<8[&@0uWbd]H+HUcbTg2:8sjVT7gA<kh+cdVU$M.%-o=\%+aoCg\b^-NFik?Melu4JbZ:mJ^87_rL'?G4ito)2&I2$u>:ti@5\D$VClel2Z+ULq@2\e0^cGc>&aSb]q]1HO*a/B@V(QS"%1ukg'BkPPl\=SNr=<>KuB$Yc]&sM#s^%GMk^R;HHZeg]hd-3M'R'!%+k%V%<d6*T+bK%gWG-Ls8dd<OcU3?.'k6BM[OPeTO`A0jY%['?C.bO9b[ZDR2=ZOTViZ'bf1s)TghfIW3SS*@7o,5u3.QH\@X"0"QdBM66hAS_qY)`%_1`gAh^AJgSWMS8ADS=K/9Ed`eW=d@[+%Q1N./+CT2kq1d[gUIL_?@'1fV`p;s+oIF<gNgIDuI':?DXQhM6Sn$Ktorj\4%C$?IBV[3QUn6J&m6k@JC%KL"`ftP^E?JQ?\SEA>%a37WISt4p+=/Khc&\?h\IMki+UKj2PPn%7#l;,HBh80A%dZs(l^^/aaJ)G`?Qlke%2]]:+n[rg7kLkB1cPM=7;Am^PcJG`u:.Z=(%mBNffc4(XlmAGX/KkGEub(F"j)f'dF3Rm,8(>&f@b+$o!M6XeJ5&<uV8aFXVmrgpm2`q!:HEAr:n<+1$&*,p(aW9J%gO31l*DQ1G%FEh1ukIp$^FJN>H0;<TSr+:l`UHIDjKI37&EaIDbghumYm$TDTnuu#:@3W5(_`+TfbSK&Iq](^$9Vb9P,^qo!/8O(EYZV`mjI"(d%fjt^q@.NlTS[/VW-UZc"p,tGX'j/hDq=KTUB44(Zj3"_\Kr(4;%`bpe.SDbYIEGgH_hOaq*&biJO".B-[iD<(0W2<q7f''?7mj.K%CrR[E[M7']WJY$:7-rV#@E_bcBl_O7MNVT_1jri2_)UOr7k*,P/LIR>I^?[.q-,-&/o6RO%3tlD0jB#]I29#5s#nE0/Y*&R`BX"c%As6M#9,GSBMn)"h,RMe/=k=&'3PXLep2XSZ`!4`N&Hm`!3WjWr]\78I9rMKP:_$$fM/Y#0"ee!dH)>r?A3oE,]J?spd/4XicGlNM%2Yl0s^ndW`)&[P)+ho6fGa)7W!BoaO&.-45[VdiFKD%iV^X2NQ.Z8Yrd$VIkT0>UI1gI$1aIpOnk:II&(Zt]<$,R(6VUWZYir"nG%^mKRejo*0mM(r7kcoe?kI+7Uq/21\*@t"=pi;ur7)9hB`U<jdkPaUDqY/tcp^*X=@_srJKlH)gKUP5s=cD8D(e=pMTC1LG?6f,X#%7p+3I]\2i;,"Am-_Oa36;bra^/(8.WoIX.AD8EG=rPHQ/r"C9Vpkp+"5>Vrg(^moCjLV\%m.T9'=Jo/($]B(IX9n7'jq:T7<?:Jd%I9?e"P31Z#FjfquA`_OVK>>VJl^M=4Wk;$*;enU"JL<H4(@^4_'ctt=!re)eZH'e=U,)`bX\9Z;$nEOmIp&MX!b.tV?<C]&_Yjl/%Y,&hh7A9ZlF4*@OFtuU<Tmb-'4F=[hWpXNcl/TqYXhuZc^J(A.nk/9gBMT&&i9)6&qi*A_Z[5i6&cC8_e+"EPhL;ePdfVKsk$fD[%2#qFR.%_<QF*bY&]\\U+\7a?V*gs,_9]`g&kd\hM.d+g:Q?7DY-^/Yk7h/N6b8]in<>bNc\]rZlD6E*kA(<`3(Cc+3H.&?oXBL`r%*-JQl4h'['JRP_N4o@c$2>M%b_>\&AV"K%5d<^s0G*50Zl?G,`LqG+e)"D+$fiG[e8WQtrF,s#n(A%&&064q(CGf\K'ETEe"119Q%))DT5s)G1h"\EW+NT)oNbq/#c1?od1(I;f[8:\NJ440bF(fo7O^IP0XbrSX(A%9e0o"3`+ITUG]IQ,SUmh=rLPtlR3%keZ-n5H9E%=T*=N<X.05/AJ55D!W.o\;up6VP)"GHgYu+:^`i"NTK2n9^!H?]k44eh4Yijr1)fS;!->.'4KM74!66@>BE-fN!8.*;PckdD3]m'%YD77$r76[:IA;SdL!W'U":sSR#k:5E/bo[4$i+8pcV]181&dKRdc.NN9NokI,l.]qK2.niOTR?aD4W75[qn,gOC*?q1:KX`:QRt%%DCmWU7`FFDM_Hg3@2<9KD@h&S8+>+<9U)$k9W4,_W5t"T)f7a4?C@`WS$>d!^JcHmFG`cj5d"sfeRcM?32YT@Vsb>GDu"k&`1!qK%gQG96<9F(&Z=%e^WFp&+BT(DP;e7mcQ1pWU^U?i6IPJ,!DFTZ/:?>L<^8sPrnpW=XQ-F>M%qM,g`iMZh;`.[#&C4lD2H)9l0BSj;%?1scPHdf6=L?9?dAU^C0TDHf;:Mn*a#4j239FM;uNW-L>nk;NOB@^W=4#YRWXCKtMbbkJ#pH6pna>a[J5ni>U0&*e;p:FgTQe)VG%Y-u\>&imWCSHU.+km1nB7/(;@'_l91?4g\bmPf45Sqc*h(f>V@Mr<'sp."U]<DEV(K6X87XNF,MFg3Vb@T>%4D.bP7f=m`:'8t\6%.lt^PqJ4??hW+SNR*!n'=MqO&W3LDYPeT`/"*Y@F=itM7UZ91QalA@MXn!mZ'O@(gg*M:@".b([A>Y+aD4G,%iJ#_AFPo@61$t4N%VK6rWDp3?;Qcn>tD<R*rU^S)I%bnh?QlV:bYR=s3!fi*;hG!TU?/1Hs]-0N"7(3rTP\5$NhG!TUG3BHq"&H^3S,Ql++[[6?C"UT'%H5PB?=ZR*aQTn%g^H<^A?[oEBMF!1SK"p"/eH9$!(AM?O]b+a+qjYi"G4!OVn:*0/.Wc_"N#ucehe\4Cdnbeslh-"n8V@/nL%,tc%Q>F#0lNgkVRIn:,A.s1#B.T1#,r*,%[M`JsljO.c1n-JL-tQqm9$HKQi+rRgM%'IDMb.ac:O]X=*r2@5(lQCPbZ&l+1d8R@1M]G!%Yj1HWAM_%Trap2h*gob4B+pt%*oW#eeMlOSiUEdP)*aZ=ph"h`XNbgf(HOT%UsZ?(F%!/9MVT.o;AD@C%P8I]b-ji0c?>"GaO8$;%7!:oCF:OPMeBO\I8D:s%;T)=J(,07,iXlJgGK-#BZtjqfpHi9-GK,4(rG[!^R<s_G%j+U+(Xk9DFsQcgVTd<ZL-PY%-Xk<_Kp]uE%=.Ja%TX++aDW6?9-@dkqcR)?!bj(j,h\\cX&2qYj(6\<XO[1U`(6$ngHB&fRdjf9-NhoJ`%C)10YU\C/I^?l9QADXo7tQ5qnFu-5%*(K>hK*M3`,.KD9-(8h5XA`R`Ye@[^05p4nAZeZ2kD&R98D%&LFOEGr[2";@%%2j]&c8!Lq9mp`d$<]%CliQLQ51=]c:+=1j4ou\%'B9f=!^5bsJFLeskHhQT4sVS/U*`fa$fr&uK+q";5JjZP94P9r=_)V>kch#Vf'&KJa"#,jG"Xo"0$;E)KuhT'abn(B;F@Shp>2#Q%Fk#E?2.NdVf3`P/3:dfG)%.!FRSre2;WbX;&OoCG+mbfGR)t)>7!KrFA;jsFdOr5d\U:=N:2A^R)5T6loD"ckg,)90H_7<4fX[d_%X,SI8Z%oVE&3H6N@%A=>4Zcdi^_/9fDb-KojGY&7TPXWqn+%m)I5n?eBQ([#V$TU/o5GqAC%F6+b\4kRRR:\o(U?a8iN\VLiY]U4%A9P/4nC[["+FoGG9$0Nf*8]L_THTdSLlQoC<h[Tp_],0$6`3b,`*2\#*%uCjef5P9[:Jls7H0$fmbTb17GhqIrShb@)7,R\m6)Y6%:V78*WLXfmB<@<V1Epl:nU:FLmb)YKq0E9%f=oD47V<m.aRi0@X[8c1nQ5W)4O_$EON'G*W?TeP2BuR_7&L*I/6HMZF0tJkP\3&2%NRQRkHWe\iBXL^2"ndH5>&1IYo"$Ne>Me^O29%kY8.O6mmn6$sol/rE\O[d[#/BR4("ohsOhh_]CW@Z0G-jSHE#WhF,PAo0;,%TR%I'UCjR&Dl`bN%$G@V<oFDk#.Z_RE=/*E>&a3QLG\AaZLO0]gf[j6;q?$sNo(:_VMaj]ldpj51AAFF%BYKR\5Y)Sp#3%<7m\;.rYl%3]:_^*,4dhOe&i/@Q*F8F)E#PS"1*d@e1QOm1Me6\ItS`&MeR[RP3eEh$4IrK=Ej"-C5aB<O.7I;dPI-$qm(0jK`'0)Dg-mB!\O!%Pp.uIbh>CO]]m\HB$@>s$X']'[$_i=#bhL!q@PMKCQ[QaP2mXSN\hLhA.6([Ol&knk-VRCAFNVBTsPA(\G1_F4n$`iA8p?QPJQ>8%'t-'EX379'$mp/0l'_ES4%Gb7pR$[/NcV!V(QtRTGil_LSKeSL;Qe(`$YX+QX_*d56n`Tj=d[cllM^?7(s3Is#SWu/4r2A<aF'11%dM,u-;.@aDT.F]ggb_rAkDckc"Sj..&!SfT?uB";D.+.rZSfK/38#+?-0_XG%/[i)h[MWq?lpM*kh.!bH$5<k^17%95Q(9J=i^.T%Lq5\fT50?pg?(Qqf@^J[Y\V=&_,e=s)9*P6NO^Z1F=+W_o:e0SG4N&Kmu_3%2.^B@h(8;fGp4rQ.p<5(*:_b*1V"9(#gQ\LH#W44%`g7)Q9es.Z&>!MIEO`Hi-=_tu2TG)_\GFVO]R(oeF!_>.r+5<Dq/D:cH\F4lb3j2RUR6geBDNKmT--4Q>EOrrcC;`&TZN5R[T6sW%jW`o/acX0\a=oq\fGIbT_=T[Mi6ff8"aI40P,O.i85)d7^nD?pNgoEH7`fCNS:tSgUTmt&<SS/KN6H[n(EtTS]J>=-=\u.t^9WMh%8o$@LQhEa?%P/6fiY_unCc''gU():IEel/b8ZWbAU.BU54G^K-/@=Rmou.,LO'l0^SSi6Pfs$(Y;<98`XiR`aT9DDT*?$IU3&$q!%@$DGGVO_4bgkEPP*3Hn]R!TURPUjJbOL?FV=hqFIR8.QP8p0C5f!.PrJb!>8%-UqtjL]Z?2DKL@:ajeL%9B)^rP/WW',unU!]Ego%PN`3<,2Qp;H'"/lQRghRcH`N`e\e"XjPF'2T)6MFdVgN\cLkD"M1(es`=d7_Q4On*%ZmbQ*M\>WFiSU>.SFhIYfbasW%?3lgeif?%-U/haDOY9H]ZGc-A$n9tni=B$M5,Zm_Tt0gN?*h.q^:u2<\dj+,&KbYg$W)1R'&)1?ZH?+?!iW^Bl5HM>I\H`aH7^r'0V]iG<Y^<%o)joXJ6e=cQ5l:sd".<u[nr=)3/e#Wef4aP*7M]unfTYpb?b/O`g]+nc?p`+`Ae\>D#`ViAp[2<mrp1D75eXk6X#D"KJ0CU\@<O-%%[poa2YX)!Zu7=[S&6'KZPYF$0hRGckL_32]%(:iTOW;&g]%d>4^T(^]n:0i*ZWr:j7=?pX*%^8(]]+V#r]VMfOg,=mNqOPAc-4.%=QGq.aP*oPGY5P&G4u$lo"/0F]=Sb&\!^`[55%[9*"q+1L9-gG1C#D6/]'k7]42c2#M-L\7N-/5l4sIYHO=(!JSjM"I^f3UjcHGb%0[Ak^[KXA.E\p]Wj(o97>LGH2A4h\0r,1s`o?'$R%rCA\d<RS?N+n<2P)<ebep'6rCu&updh=YkA%).F;EDg&+-)b268G10#/=Ih%/!RN+fJkn-//O.QU>uEYRB*fc"NFd',pB0rPGkh\7dapdTTH=81SoUZ9&??^O(0NF2B.m(bX@[Mh0ou':LdRMa5">`@^\J(5uWN]%>1suU/#@R*g5m6/J6G-T:krW&''53"2TYi3YLZQlA<2s>"'[/92IbmA7'B%raV3=fI]%!XMoH\:@SS<,qW(OhA84R6X"3M$fndj(%a\E??/lRW^V]-b6d#cm!r>?d&.$>cgi+,[:$<:,;\@q6]=[$!:qB"A<C1KbNSAB.Omr0>DHR2$R]WQg/oCnXF0#i:ZL0Q6Zbu=5/%%gfuWN%OcM9g0BgB9hj;PD(ae>gPLQ?"!(N-D)#6;YkD1K].6faD:Ms.R=XDC!'i#X+T)QfQcr-X;0lARMA>8`C[c(9S(=)SKY(.%3k5p!6Nr'oT/%XD1Br=gKF;T8LgJD'NsqU=1GKgN[Z-G!5B:/rUhV5ELPh6C`[NTg1d?Ad-u]6^mF3!N?t_XH%j*9Eo<sVGO`dUN%nnc3=]YF.S.<*A1bUc=XcNS@8OdY.LR^gk#V(kui1\-j/W+6jbc:OI&`db-CbQ_RJe/;`_).[\]:Tom(.#-eN5']ur@@[p\`cPZ6%&(.E<$LsAN@d_W;Zf/jTN&2c#9n>]:jHNIh@?Y2J46NBTAp%W=[B12^rZPib]uq:6#':?qdZE8p9q^&^'/RoL$s6GK<8\(U%%I(!%R,qMjge:Z$Z]]TY+I,I/ZB:=J]h[[/E4i.r1/lnJTrCXF:sP23JWMG*OMP0=jJ;S]%)'PaE4T(^fa=Yu/Y>R^e;K!g'4[CD,SZB/%BV"IS`;r5Y&3N2o<a^#3JSRJg@)fL>lG47krkLL&WT8-:1ZRqg\\Ep#o9&'[KcN+E-ENaVEG*SFWPB>jA<no5N)\OKRN5RXDiFCi%&.cH\!i*k.^Ve=@PaK3c,'-Z_.n%%Zohe&sSs#JJX:?I*+@Q0ld3eGg&l:)hTeV92J''8j6Ztc8*hIM7V*P/.+8;aXAbmrbHA-Pk%gH0oIY<W`YLYQCf_]u5+^2-?oCi$ek7u#dI+g3jc$I<jQ5"Z*Y]hAm,;TGi#UJtV\=!^>H-b4oi/Ol-I_TB2G.qbL\bRHdgH.`OF%P5i:aY2VTAM^Dd`jip=ak@JAAFfd0HI)q7emZN6]-')QIG:mD.B3fl3iRo(ABbk5=c_\K_0eY9%B'[m0q:$#%/"W_^6^0@FRnQuP%K'\;Mgd`lOlQ;ZfN9U!g=IE//E6*"[).*]&[F+T<mc$(-]l`?VUTaB'>L9SJZcYn<rNdUl\X(l3A_?fLUFumF?9Nb@1@(7N>)b#(%,#,fY1lAl,e;3Ia;%TTeU)dL,ZR"MVQ'TX(g?sof,$ZlF8=Y[_Qs%FJ@!c'J8ElKjjiH_o<k^=dk`OD0jW4g:V>U#1)Ll?is'"Bf%LF(kubdFV#4SPa6cT(_G=RT6fNR2k0)./ncbr.mNU15+H[Z<t"rm2&(^dJhgoquh!@%9[iCel"l782l)ce(+Ui,l/8L_$B/2EigB%,(45O_aA+.0`MlIf(G#:%j85=QB2GIH`urgikfdiG<SHC1,hOU)4pfD_R$$!Lk\HFZc%,9(;#/:A21',@+m2bS9dDfn)hI*0eQ.T%BX!luCpHV+UH>k/Kd%t%koX1^+X84GkaSk[=-&<9SGT[A0Hcc!)$r"K<Cm.rbl.<ll*H5se&Y&pF`"+6,)plj_0B1mDl]9`]*m)#%M\q3O,CR_DV-<[$a*nH0S#LtjYubd5+P(]UCLWF6`Nbi2'44G*m:P2P@bR'lf$+TO:[;iQN/T?VY,`PkDXLuVFDQchd\^_!@\X@5%8V26@ju,$Mis4%G-bPK9Q"aGL=V\]6IbA8,iYV4"JuX(A\2*I5.>C=4p3-(ef.:%noN>6BcgGD-.5/!^A$sF,,U#7cMrhf[Y!/?9%'()/[>At.%?J?t?26i1&+krBH1M+jO@Gt(s-?F"r):ss_g0u<VIe#F=,IuM,?b8'G[05&q?WY5jcsV7-V=?@%E=+O3lP(ta0TOj8%3/BaM?(!l\_k#>9\[EVhE10k*hpLA_.dMf4E1?O7es0tLm8Mf@$pn@u/CO"X[dI7I;VX/nP=#N%Aulo6#WUu/'hj@gKHm($E]MO?%02%`j^7OjgNf5AJ3lH<":6lC30m]VG@l].VjDqh+W=/@;m,6W[6aqkm+B^DP?5-CFXFHX%]21^??Aa(V#O)F#`9Ro\1V'f*YR]_q%Y;djfQOQEEGY1nFA(H]H+aB\!F16.F`d71]ld(s/5p3k\MWn@JPIob5E1\;9P3%\UdZ5Xno9"iArL#E9[no-C/TIeFraqD`#UoGp%DhpbE^hOYjlORTgm\Z9hEpYi0[2[j=5E/&XPMnIL//M^)E0U28@o#q*RTm;#2e89BrBu0)VZ^LQg"t\Ss0O<*8HEU*M49_b-i,k/%?A47!QqgJ&$caeVNnL:]$m%4^ODH_dd++TBAiu7\eVf6j04p-IT=E<kA[;,R6m8p\A[2X7as,)I(;7"U\hJOJrnQOgoW9Jj[p5?f%WZ<Ga1+pfD8n2;nHdje'Nf]!*=^@?aB!OoM&]`>""hY:(-:/#q39Em&;<A!'C,q>(6B:62@raij9EhC8DESYAh6F;%<QR/UN7/T-%^'C_3IV"LD[5Q1o-H+";J65d#1OF0)R;PRQ3CV#=1]7MG(MF`Y2fmk@\\-dQC#;W;i-o+gn!FUHL31?L$fqcF7kkmg_!Wk>QAgS&%n:euND>$/q3M]Ft':=fFViK+:cf?U<DIW9\AMT=/DITcI$[X3*1SgM-H!Zo?.?r@(=pj?8ClP0jFs$\*A7lpN"f1`WoM"t:JIjq:%MZ.(nMf(H=(fr%SUet5^\nuAlT)K%;c^n7F)q4Q4/\fpf.kY2Kgil_[?`jnZj!6cq._kiOK/aJ`XA/4!Y5O&60GnI3eV-L$bYP62%GCEt`.^MQ.)N-8HnT`'I`aC(+/E527:9%!h;*!U!6b,X/1*IHGK8d+)DC_rTigA@BUMQXB:4ZD;irmq)p3i^[f7Y**kdrPC.#GZ6%k$$45U(7,i[?)WR5h=ei`p[!kqItataN:MjN!!M)o&Q<2+u5*kX>-(UHp%XFTt=]\LqTM2$.tWBFoe)GM:6fgDoOe,p:6.dT-fd/%..]=DB"[[U^5*Dr\MZWeQ!sr]pJo6n4T\_=I9[UAP95)5,ST_bF3cJ)R2;`;=Y)?^N)McfeS"%>[>o6!+YZs224',/Y)=)&9hR/!%Oa(L^\]!R'#<I[`Cp<(IWja<T1=e;P$s4Ak^$-*s&B@'=Om;ne1u0u*9D!/R*bblfFNs4e)!Aoq$Af&\Dl1i-f!6MFNS;(s+`1N]%CScJISFio,D!(p!rp7r>,gSDJ-2WVBP22'r@(0ZZ(&8U^b;,(,0=-MjqIV)m"0o46^+p$[#82U[913NgE&c\FI5?-](Il``+`.DR%cIN]E^bPfaNYp.:c.Yaj5U1j'-GGiD@QN*G3S`DW/q?6Mj>TP2l[d'^ig^i"Nr%!W"acZ$K)36MHZi:Nm2M7Ti0rqF2l,?8X:"M7%e%XSK(qKNkYVTm5]Kqpu?1Rs"P<OYe.!e,!FtlD<B+:E/h9Ieg:Pc;P;`snJ*.,]IgVIXQ$E7rUHSM8]+-([F@^;&i%/VUSb#g34%7!$qmeWB.a#`9^b*%L3CjdC8ld_DXk4%boXpBZWmG8qJ-ASr=s'jpW#PEp_RRuE/\0.Ur$T#iUCY]t0/OWE/Ck#DL&\P!:2<o0o:%11VNa4`QK@a3+"&ehMTn5+Y>Nb92)385k!<S]6GgE(n"^$"-c(VW37_><o6`j?nef.a/3+7(\Ko[rTf:,`r-d0>E9g,eG_(h8M:l%l!Fcaenb(NmR^r/m<9m1D1>Q*kgd+%VVcnTXsne*VV)!dB'T'3[-p&Gh-PMg>cb?H=d.J]pT-,u#OYSjq.@@caLdmJhs8q_.N1h<%?1$OjXkPF.`%RHt63X1^ef^Tu)rhW2@&*E0GEj?"nXJdLP9o1Al$FdX\+NI=8A>S$A4DVAOttX5PGFuBii)uX7q.q&e<-<:6?F@a%CE%7N3lWP[Kg[\"iU[<=*e6AS>+=Wu9Ij=?7'bQY*-8l)Oo32j*>MH<rFo>&9a5'pX;4%@Zr=bTeH/\4Zt[b09OLUjQi(GXO24L<%Vu/k<-gHmh,dT=K9Z/%b94UTDZPs.h&eqFE/=)k@>8%ibm/UUHX;+2Eo040eXm\Kq]jRri?^Weh&K+0YH\k9p'3H+sFHR3g:-i'E%L*'o;j8g4Z?,T2Ra4-aa`kl!j3f[nSBLR`)jg#kBJ8e1<U4Jk@e/<0+@p93U$[5;P&m0UO4M-bfBDZ-6C__NihVjj1V2E&Q-+[,f%C9.JPYlb9A?:*r.,e;$;7'>">Qh<KFjp//ZXClUV@l>Qn-AH;QYSGP?RpO1j>31Y,l#3H*'mX#1#npU,`kd5Nj3MjVI;kg#4sgDs%O&N01<11G-miqj;F?^>gT*++P_Dd\)7t+M3ZL.>0[-%W8&h]+PYlB0NqXP^(O2HigeXU)30J5]qf&YERMs50kMB32T@NY\;^G=W7%-TgaF,(4K/AF,<?UW`JU;N+sj*$5H`I^*6R-i=a'-n5lUN%u-e?o(%/b1NN#2'&\?oZ^?[JfV%uDoA%FJ]N>lZ3#W;af4:7=R@s@%dR0iX?[kih=3KET,>,T6N9#P0?:_<K[5?]3Om1s@)#;[mXi</Z".P.4KC4eR\9YR*WhkIGBhVUE?6K-Pa+Yc6"t20.5q.^JmPj1e%AROktqp"mo"`0tq,MTLo/>%=]'Gs?TJn8pjdPa1ahmPtlS3`VN9`(h\0TE1WcX[2r2Fe&]a<=\:Ba_>WAlok=;5?iq(=g9;atk(*%/MN&/4nrUBPV"VqQ?sV=c1K2faG@CM4CTrP+:;n(qk,[Wd0EmV#B,-M..54Jm#1,\DUj_a0#R-+&EUcN]K6@rq!hDIg>!9D['!*S%`o,bhh^sk&O!9[S@n3oh*RbT=*1cYWFM*AsVmq$2(gl[s_-oq.a_Y<YP9j6,*CZ?#R(dcbKZSp^RjUk/$e*F-,c\S@p>+`lNsh.A%o>Art(FC`UO%H]3-==3L8i5cIA(IEErCF<n:gB18_/b\eOhg6T=Ue'ZP!i?]2EN6I$NcShXG?*lARn.]bZt(dGU(lKF(S;2QB5a,%3o-aUQ(RF@T#iUW1IlrYM(N?H"8tK.Ls*b-LAiq\X:+1/bqG:S(5WLN@_72JqRRPuKD7'=9_QY73(1\V!bGuHW4?*aLlPU1Td23G%,>!#d3\)[MJmOhiW61:g_VDI1_X`8b--\rfn5hTH?e\]*q-J&7HOm)-bA2Pf-Mq_!((7.;U!-6X-;cNF$Z_SiR)!I*n^4L;:>aDm%b%XKgdh[-;hXk/%bcf%3d@7<1$u*0]$/TcNO#"1o%$lqj->1Ud,^Ap=feIb.%d:9@D4Vr`^6neEPD.U9i]PmZ(2YKPG)Yl`_))3l%Hb_?rrT5CT+l(B,R.gD4\bF#>Qn=0'1b%m]c@I:hQ?I!sk,-Xk#g@36Z`uW_'-a_EfQTk]3p!W6aY+tgVilHhVI-4HAdV0.7bX$L%1?l[:b7L_#N2iMocAoto10;%Bp@8?]&>h,3eAJe^_D-l``aKTi`GS(8V_Y.6`k\%1<CJ#$9WUOVO@8t8>`'5OZ8"AacndC7Q-(lG%_XuO()%-:'*7Lca%X#?:rN[b*aRqeS\YQpj3($!\@W6m4cSq%RU44Za,M=?gdPoXCd3\U=BbdIK<WU8'>>+K[eoT4YLYke[U,`^u%R@O%00K8p15,!f?^R;MQA1ILgqF/jW1c[,11"RA.UGf/"?OKPo];-ph0TKSF78aL_`qb&<Z]=9sQfRo:B$t:e\]?(ERR>L*<RMMk%T(7j=A&1,ZU!5sNA.I53@Sab+lkHBgZYE_mT#l;YR[?q3/-;"m>;]RB(UH8t8n,XF'<;hQ<qRsU)g@R#K99#O63!lnqGp0?prV;m%ABrVE@G36"6YLo:.<@X*aT^L<jI,4Y<K[ad&U+NdFTrQg[2%qC9Y>Cs<1JdVoh<S-<H8J9K5b5b>R\X39HB<;1J<"Ym"-%nGp:'q%,Xk07\X(G_0_b<$7A-++4jk[4XF].Yb"T:FOs87P5_nDOJAb8eZQF8'4!si7eI7#;XX\,O;%L[pbfu&X&l.VXA.<XDcnh5fOu:TX%>L.E:GEHi^]h%G':S^d$k!/SEAZd>Bq9QP&1&Wk&rFb(nL>;VCQ;-:ql)lD%s-tq?9\7cNBrS`3oFeNRAj*hq,h-TJ?3p8MZl@XH%=A<US:"o)G<H?,[r)\e?VUp.6l!(qOg"h?ZJo2]rI%4q20MY2EcQo%BauI?YfICnL9^0Fsj"04*@OAR&,ajk^R1!eZU[TDJ1]L4j%Zu(YPQ7n3gR+F-Bf8P-PbdoE2QknjC%noJ@>Ik"V6pXO'DUp&<j@GnLKQE[d;<D/B9+=SGa[s1A5/*l-)<Y>/kFR%7Oct'4O,k-3%U3cPeF3d`N?-fOl1=m5\[)j'5Fk27\A7e!8P%qN_l+ALVF#AJ(0Nj9hGh;!h5DXC.f9=:TbrDkdkmH0c@AJ!V>UlCEY.]!i1<#>f%8ulS23]ZJ=EmdhXjBC'O6>pIs%Ot1t6/%@8_9*Rkh_fcsM-m.YKM6a'>a_[Mkn?]XjL3!jIo?6>G[)8QiCD&*12f]2cB9U:0BUj<%ibTAHVA".OKH/TB.9)h"=HIkV?\+Sc]3=u@,.(*6d2Y29O:tc[C"N*jB/3r;QRE_(A/Fir-V@/Iq>5_ZS(rr)J%qCfYpV=[V]l%K%qJ>:Bh[a6,aV*Y2M=di(._UfldiQUDip1p91%!pN+hf&B%o0AL(cmDj,+-*3Ndn;fh(PYO<XHP>B%iRIQP^'he660c;)om\1((hi%^!\/skaUhC9nIjYQu>XHkh$EAhpj=>`j*ol4?RIMR4Z.?Don*b(>hg#Ce//rDl3,=87mcuVK6ZrpreBUZ]dag021+U/S+R5l*j@p%RJgR.YP(.>HG20%q^$M7^7!4"nXK`Z(F2doPiVuAMb-Q"X(!d_@ID;sF2:5Y9R:G0(JsbIUut8=!Caas7M7TIa"sklT?S-&oYn0h%HUj8fJR;*c/R)>>A':C2k`CEXobR,ibB/PtpHrOn`P:%g]D%H`Zn'T[WYWhM_bB]t4T)Hh44Mn)f_7X@kMHZr*c2[go>Td\K50gp%V#Nk7>Yq.X7Ic1Km#lWe+7/!@qouJg?2SZVR=83R5MU0(h)$DJjqmhW+687TNH>;YF1S2X'T/e]nB;-#;\Y+`f/0[)*h@C-GX4CN%E'9N<Q"bT3366P)3R=K"\`D)':3)/kI"A\DTEDS]5j#q*i"r,<7URWcDV"6tW67cXckN<^TA1A\Pn[4?9Nm%riY&rq`T4@%>MR(s%PkB8f8',_V6V$56()=a31p&;n.>Mn/q<?]'9V8G6#O:E?\Y^M"f]k,SFdqQtg5CF2H=bf'W/^IJj?1mta'DE^=!iRP.AQbDl'&W.%alCON,tM7KlBUV#Tc-oP=!ml&`/W$g`7ELKVb]okI:G<o\?W%/b%(P!H/<^1]Go'`Q2*%'[[)ahQPR'"opFVR5IqoJ.fVc^N:jD.%o7b:fTt[c,/[%*r>oNBiB>#H+5a3(NC_nl%T!>4[F^[9ur#jJg=/'.c2^V_[b3U0m@JXePpTRG*:!)`Vk!-^;rRf=XckiSX<7hH0%oroPd\i.aX($Q8F91f'#A4@:'FuE==Z.V;)QqiHPNm1p)QHcFq5Zg4n+^(kHrq/%X(t%3BcI_lEnTM7-\M`^J3B!KT^Jf@<0BSj+%(Zo)e?`X09+)$->9q*bqcL0_Hq0qYl.e^h"a!\"7Nm:@_S-LD7<)iFb`"0*<d-Zs.>S[p14IrmuUdn\-X0*VkcehD<*UEiN@:EYK%6QE#=Qq^=Xa0f"h=d,,]#rXB+Z7[fN6q^\3gnnX_.l'31Rd+C[qh?9!YHMYHdpGf8oa#CK:[0U1cS!?*D"eL4BiC=C=)3_Z\W:%U%?1$41A(#QoSB'ErG"h)J@cqJj@ZKtl\*&kfdlLDIPJ!#ClC[d$\5"$2B)_gAC9e(S-aRa2k5"_\qF(5rNlep9;T[%O@a*=t0^!YG%94[<F!N&%mm"H#g?V,mTO.#.8$B20\gQPd[INV?o$H0gQMeR`00_RmBInlE?,YLUV]eFY(Dj>NR99bV9QT1j;,%)s\oo;6jmH*=P%QYMQ)%:h2cDDk>s`qMB!lK>:57@>FXg_8CnPkZF>bT`2a<Cm4&:GQrDXlB,Xf>)sBCC6FiKCa(90UC*ob>KV:**C`aq1^rDRMAGl%BF>m@K:0<"Za4%I3fqUD#3]$(k5G7to\'3WPiS4$"PkO1BUa_/5mU.7"DAl:VZ#,C6@bOVNp/`]CgJp<M4mVLZo/%(P5NnZ`.:ct%4s1Wu-TS7jb+^pNp?M@4.cPi\@$?!Lh+Qpeq^P5;o[i6(b]V$Ld7h4;:%.r'95g7l2bR2l;uhLB>$KeS*96T=?rM(oF+ViUFSf2\%#\E7!*RboT?nB%"<(^PF(Dt@eIX`KB;$FmqB)!5oQ/BfnKLNIaQ?LKd,!?PmARFa@Q[&dFO`!<nbgmX5+sm2_X>=@pfchQE%rp!%%2))M:&.mNig)Cl)QD?s!CebkSr>5!cod,8SPO/tPO@<)+d(D654"C@V/SB++DmgHO@C@GBneYdP\qX&%U_R.";/!._LL\bs/?r%o%8DSc!i[R+K80e5Q*63;HSR\1\*iqst8F:T@p_FX(oO0+%4O_\IOe1.<R9T9^qI&Ak-G+B"?DR0DF%g4Vp%n?NftN%<bBQ\F&Kcj\%=M8mZM0c;EBeV0R',Ul[qe*O_a"O;akp@L%RJX;IU,l[[<(B$Mqq0b4VO]hCA:?6RTMU%!QcUSHIZ*Y3C[++gp+F&][cF_m6nff%%7D8Y/lj(%uRji`F\O]kL2G7VO$^8"AISV24hTUBe$B<>U#n3^1g!WrXar7N!/XX)NnY8fnEdoe#'NA_Em@3oaVqn;#0l79!s1bYJ%58U"5YMqYDrl;eP`uk?T5Q?!-HuK'R'%up?F8kq3q4I]SO"N;OjH4riO\f.J')qBm0kR&Bi7ZW6qI]`[9![m(Ni[:,fRuR1H'UD4%q$APoT`j[`lcSkQ:;(d[g(m'_kOQmq[geHtJSdCb,$bih@n;&ta%CY@l9]B<Qtm$Af&)U;(m;;YR]fC,m8h]uLUi]n\U)\.$t]$e%"f)dD!bQnV0ku]/mbOY!);0\dkNg<75IL>WS93Y:g"qHVmT1aa@ScGEX7MUuZUiV`S*DYj[NJTECK!qubFN_@4f%"2Z2@X1dT&iS%rQK7m/EO_EUR$gF`_OEZ6gTWD9Z-VQ5d45&1&#M;h=6^[e$bLs*ElCApG_-W4<`O(D6LYdk52k:)e$E8G"r:s]B-OVeNL`<N[52;%j6-NJPt&A@/tnAgEEgY:Csi?bCSWJ%ch=p#Q0EYil:''BBX;4FD-L9`0rWDQe[<56T<^XYGr'X)#HL"iDs$4s7p>[*a4rBZ!<q45%pbbj4\bW^7VlK`Q^Pp'-_/dX@5mpf@:V&=U/:#-X2W=I0j*R'%2GYejIq/>gHOF$r])BgZYP,\BahHY'H[5VOM?d?1#4Np`#kZQ[%RGY+X-5Lb(^iZt9p:%RdfhITPg+LBoRERkUS^&tb%rA:&)BM)0XXDXLA",j&ec)e<nAFm$KN#idf"eZ;RIZm*R.S4,[C4_;b$<iM%bUN<>9SOP/U.]6&-9LSLWam`%GFf)2)Y:g^2G_7Fkmc%0\S!F?CsnS_>:NP-[O]hqW'1A+8H@)D?`JD8r%R$SHRE^=?Q#Jq',"a*%kiEYKNc3[sdL4i;`i<0.1@,].>lrJf&U(P8Q"aIr0"EfT>1n;&.VVX'DHg2>cVD!\Zo=HiKZS(N9RjN9C%WFn\*j8WUTr[C)`>,U%7(j22o]S=E2JR?C$r!;L]6#+Yc*m$W&$WR7+*2fcs(lg\QeoqN]Cj"lgiH$_BqtLBbK.JpgMoYF?dlkJR8UP@md#W"afXgWRBB4f%dZN=Y]bt+Sq%)e<X[bf=+m3]kW@#\kqn.rrT'86&ak5Vo:13oLEf%QO6C>/,5KEpCO5XJdH"YnFXlsX0en8pkafV3/T&-QW'j:i#%`BQj1Ecu.Pkjr@'QPH^^L;<H7h=IDFDs#f+bZ='&[E(V'Hi1;q!=@YBB*R"e;#q#_-X(sGQ.NN#I<MkWm"K.X(7!>;%(Q@BFCPMR%#M(!ZqC4WmiY63d;D!<h&s_7^0c!Jk-StXZYuo1')irjY9V9RoRJk.4/]FW$s(2%DjlH:<6GB?IV6kQRPN=q!I&-s!2^TaUMsH6Y%aM;=u^^N;O0RZ!Z-IN=Olra5/fJEu%8(OWYoOdGa!EQhp*'?/iN_+aI&::(!U>rOMCo`NZb%b3=500A=M,D$T4ps/=T3!@6l/JZ,%5/K$t'*7F0`-sJ;h2)97ijV^d;h6Os>=bAIK0QDHl8JjS<@58pWAQGO4<S`&n]!`s*[*lA.?$5pqmku6Dg&;BM2ced^u6?Kp,B$J%U:8!GFSn/6=ah]mdPNuS$b<`AcGY0`7Je%g7nc\'IdW1fMTk`+XA?1AhGj31[jTg70h%%\rCt@7$)lo'Y!)p9o`.qA87?[%F=a]8%#,PGKgI]HXAeSuDV-I/0ZiS#h:Uq.Q);g='SNl_jX=Zuj2`T'P[+R871g'PMN'6*eX:f(7lf"GUOEU.@\\5F/cX`M5]"^:R>_aK7%8d"DP#r/r@n^Umi0G_YpfjHHh.*s^;gmGOQOP/s=[\@!dZbi4p5t\g&'*eXeiX%(,HHB58iXRF1g5)KO1Y*s1;X2e7[aQt]:r,c3%;P$+3'9[m:iW@F!PB3LK]J4iCd9Z.!l$Hi_RlRe"K$8^7V]9M3VZ"plJ$H?F"K(5,;/GY6q9an]XOet4CEHY21Y?(:'2cJH/Lb%o%=rtM+2IDOf``>a:R79_A'Gt%?F5?sQ4_dufOf<O-(b)Ce,8Y$QT!"$C/MaKWqPmVoY?7m6RP?`TD=[,N`_ICY9Y4]9cT9gGC%q!,%XA<ffEm09?lj6Nu[bJUM>Qn/K]\"q#B%:KFXW*EP>%!/%+_P"e1?D.q*)!js>=+h@AX.._Qn6A(G"9e-P9jOC!9DN"0?/GY?una1%NPIM>@R`gNFg669c,p<Vc086]4t;;gN*p`<H==4FLb&_W1AT2'G['\Yb$=NF4Pn8HELo\)F+V%ZcBOek4Tb3gBg,4`F7s-aOPYpp%BnA3BCFIB$Z)ZJ<_1lXfAW/S-jI]gm]5onQJT^sp7Ul4G3"mmrOk_n8R;KcD)?!?(MAm+>@0.AojHoFn90E9W>fr>:kO-nEa><&!%Nh_k4,mAH3X_s*H:usIR>O'6#f`A:p:h.?s8PK@FgZp?uED;6@B?1`AFH\J&.gF0c[@uA#F5oKaJk4MsL&#Qnp/+Q@^05&b9:7>p%r3i9bPZT*;:uR'Ck\N+#\06&cq)Jb%Zlk69m$LGIXRcWUiR[R39>4kbj>tJO*GJmIGju=ao4Tl!n[6$_HDWetimBJko/i\n4mUek%-mD^g=if/0@rND/o"3J5(P."(0fVU7@;Pj)"_E!j>0$o,7%s:d+a(*626eEKnjcj5I)fV@95,p5H]73,Yu0PC1YETZ%8n&LNMN!%%\5++)EjK.!0Wh-f?mX8q7O#Vm0Tj[5PLqfp@Da&.niDMgDq=3:^K9S)Y5Mu#ffd[QKnZss^q;A$#F^b[n=2l%f*^eR3$aaCOM.R9%aBU)/QE+%tat^#`#.CG!N`gY6Y-4BBVA4=!9o;Q?)EL?Qr+8!`WebOeZlL"8Z3*1#*YOhl^DYSt"C_]+d8k!nC6K54P=@sB@k)6T%;2=dVSH[t"duoi$,R?'iKUic<iEJ7l(n?+7%p#hG9#U%<OLP4K2$S-D^&J*]YG2p3r-l\nm1V\_lbZn69U:MO-=&]9,l7%Q9ZMQ&%^]+\i)7*ElIPF(AQBQfh=0uIbFK16fh)>s\])Qal"QkEkqIle&O(a-PZomBFeK,KKhafY'oY_[6b2h'+Na56K_"'s8SA:61.f7,N%Dmm+[q/^>qE1Bg:-QPm@^>]IB1GP&$ZLp!QFMS8kURiF=^fJ_GrN%c&#O;&j'&0/)I9@=gV6O6bR77PPboFBg%%3"1:.:dgrE&.J%>+;WaF2-<ER0M@2/c2aD4Q=mu,!&S,M&FF8A"67>Z4f2DN"nMZ5HT`$<f'p#MiJdPd<WMEN\HmKQH,Ol::7gh8DM0!Z>.c9.FBT_%1\WsD<Yr2?:7YO)cet#9b`TH^JCA>rK-JVU6!L[!A?e77[(Z#JPAUM^C%tLgY-h.kGEUM,QpqqRj)4b*Z;Ti/%h82d=u9M%ZPD3f%I%(c<6PA2,d6*)EL3c1)>)j$3M^>R_+5Zg,;Y$<B`fn#uMY`<-?6V]`G5E88f\GrKU0E3/1-AHNLbdRijQ5A)Y90W8<Me_YS5rIF%N1DhqRAoK)H1!(AhN!R5$!4#,.<F&[E`A(]*7*]5]U=XdN`6E\FJ\$EXPS*B80RZP.Wb'GXH5J!P%QiIVFYq**Q"=4$eZ#f'oMcp%\sY.'q*[RgZ5n*[:%Q3VZa9VC@Rd8Mg`Ma8neIa9n,jMAZ`XOl=mu#RZru^+cU:FnO(kqjU=_1pAXn*V3?9"'V!_C+oGtOMCIUb9%R/;mh3iW!_@9%_J_8\%R2!LFPE9't<6_Y.6b2\ml#`r#jEsZG]7)h'F)3"2eGAQbBKIcUC*^)A92VEgtQ+;+?Rc4Xn1Mq1FV:>39%@l>QY0h#+>8so)E6;lW8+[[5e#IJ[^M6/"VaYW1+UeU/B'_(X)STI6[BI(Kuff;1LZ>)+817_G\1,k(as'kD!(?")o]pC$iTg5k!%e'D]B`KcL$C?jnO73EB')QMtfS(s"B\"DH9-%!UnhgVX1WQ7KO7VUjuct?lm_):s>g1R=Af>.)?,*<TDYoP+'9mR[=@WX;6l#";a%ZdORj9D[h*\S&US*g+"A%$o)>abKLa0>A\?f70o4E_&YVb/en3Ij87)8.!mG>b6sur>A7H\+;"h.rh!jXcgISSL@DNB")6I=/)&Z%4YeBlQqgHlAr?ID'+%VA+Bu.*\E:NXQ@*+G8NJ*&j\5'd8;(.`/K!fkheY4)'ZUt=PoWH1Qp.!-^q'2#->c5&NX<38Oi]#im%gKP%\K`l9#U>?Wl.MCu8BRruTE<;4Q]hTD\;ZhNN6IT^`QFP/?c<f&0&Kj6B0;.c`C!8af`TBdab^[V1'aFFAYjVuVcDg"'UA?Ll/+!8%"`<]_AdUDiJh!C7A`#9*5.??ZCJrM8=_ENt.P47YcfCZ:;*e@.ldd&D``%LIX/j`W86-F6Js'`9R3OJVAuNG.dPnHF'=)kcnsYQ\%C_&dqd+#C?R=Y1%f3%$4/Tg-BlVAf%irWiHn&k!S##R_#/`&c`IP[N2HRcEpWn;Q@[4"sB#sgm'o1TR;-K5(m6:^6f,14]MJ$ffB%G:%>7;+'I+O0uDF1-'tPU0LS-1re>#*^R&JOkDl\!fiih$=h:/g#HTrP[!EN,Kgdb:Q35g1R8lqKaOC?`oIN\PDEcSe>_(-+Z9rX%?[g.[9e'F8N&9IIllSAZL<LXmH]qH;BN;?l3`\'2k[]6i@J]_a#gALm^:]lB&"+*Wp!NPm0=X/;%lnSOVMTEQ:3C7PK:QSqCX8P&%N(SI6TucRtLjUBU\<+?1bdJ3R5,B;Up).pA5t"):-QG#Qf`jJZJ&>JtbSDF$XtIFPP(T%)8l9!7NXjE5-&Gke%;c-iIZ$b7H3?I8%OUCJ[`qI\[]DR]^l%J%"o?D$"jB93!:6\ZR`SBq'"7!bY46AO5LSbX*#k0o$MZZrSlX;/8cV@F[0tpaJA!&LXg-Um&iS@s*,^bQ=%:e$N_3C)7eCWqh<#kCS@B.RVCqB/c`Vk'(n`0_ur#lK"U$5k:8`_?'YN3APPX3^mu=J^'IYr7r;)qUR=fqj+mZ8^'#7?"F9^R78i%j_EJu5L6\g<N_XKLN&9tI7IkpX-7U=QH3$+,IX\6*kT`Qc5[#-=3Ic4*L$(!@a!iD=WBbn3R:C;QJ$C:J$*;@LH:Qunj;,QI'Xgl%^+q\jc"?BHU76BSB9:f[b8,SC2jZ*.<3r'@QM-k)ZT'2tD5s<qQ6p*ZaL\loWBn?s-#45Mp<NMH3`?6`na:%AbTq^d`8n1G?Fh>%%%3FAaMq=1K\*X^ric:SK/F/!<MKARYk+!Yp)o.u<a1Ep6RVjd6Q-"b5nf$H";42:k*)dDl6=k%mkM%06=%Q9[/9bF.;q1at'*`Zd%1<>YLRRd?fTBuJ=lBNYjb_ZD+!o$XgpAqV,*l<+LF&Hn\'=5:s0P8AZ\O>Jej0(1!:<t4=APRa`F!JC?F(,o=_O0^qMg#Zf$%$3+%Lg04MmB;b5%4]:gCh,RP4a[Y(d&^@]>65QTJpXbkBnR7KqRtO<QD_&1D(N\grGB^GfZ!]Wf5bCmP"-Si.uB1l?)ed[]j6eFYhSi]%np@X*=-)4-`>..YWA2#05Z6g.US1/FPKf"+0>.Eub[q5l9^-M*Zc\Z+`K1h'DHfgk10,e^!*GA^,+IQ2m!si'd,j%_T@G[R9NEt_%6^-!m2fm=9q'<V*=[AT+q;"_W2[F84k.[rAI=Ai@1ZnN@)gC_di*adq+\4i2oL_1MA8;h2Ve8[A@a'ZijI`=%,29qnR0Z.al;:L,%ac)W_L0.c>5r+/1)!)>U<;I9qg7HDL2_nCBRbqr2f&+e'e#d3M*bE#h,"N[.3TA+o1WD0rO!@\G';OJ(OkE/f6B/sT7qQW<bH.=X%UQ+3lU^k4'!JJ!^$j)Ta+qDF87qRm%CWlB.@[rKl&e9T]eT5FGe,Eql8qcQ]Z\WU=b2;5-,fcd:([7PJUi2fgoJ*_u1&ZudGQlJ)%Iunih,R9CW;3#X0d[F^?n0_)Z[,9JR(m8OC<#2)Q,!1rBLqZ;$9]*oSH&SMY'kE8p/HkSJ`a8c/,+)]\cF[J$4<]2_@,.G`'YtL:%ENO7/n+%`eUu+_87)m>RY=r/`/RXpu^E8ncG=TW%7)kQc?p/30n;E]*.o/Ib]CO5EZd=<q%Ik3;SpdnZ@pBo+^qiXl>e[ts4hL:]%H&".l$=lZphopT'hEt486O226)7&Ch#6s]TY"YJT-u>@/XS:+O>7cUues5L/%B`i[@G4f#Z3u+9I23DlnHLHsD9K<'g5]m0;>mr:%nVf3:R=BBOe]n]fSje[oqALU)V!jH+[V5&mUKRf?pG-,.YB"%i3!;,fA[gfF$B2+X?n9cLAK3U,OQ?+7+171LYjspJauHKcp:InV%^9I+`5%?>6_"?@of.!NuDLF>.e')r,/a13A\qC-!m8A--FA0(cYc@BH>7F+DhgtLuJrdBNl3\"j"\m7A(0I8Dm=J$C7@g[F@`GAU%^R9HB(nTFST-A@D.oHi2I>9T*c@P[\n^T)2D!`E^mdjU#K(M54BJ3V?BBtX_mD-kT^C.JZ32XM;?u6sO.<QqY9O/.E\9`@,>eM(;%-r2tG::=B2`hg8kP3839:V`o.\!`,4\P34KHDOY$?_0=@`huD1D@MbJ%&VKDhTN=<@5:S80LXL=*DSnp?hgC\\\#&2J/T%>A4GZ+%9e)EKF1taK]RDnCogTc==Y(O#^S@gc#^h!aM@A_sH=]QG]h?CKIR`J6@RsMf#PTAl16&.2gS1jh?5?!7\\sHmH?3DBcVD1/,elDS%"/T6-GHr@dnl9su$@Cg-T)s?ZCK0:7CpH;GK-mX30V:S?1!:s;!mJqQNQ@R`r.@iME"ke%4jP8]-j\$[8hq20iB1:SV^^%V.MRoD%&W1cfLASuGVsWJ1iMVq$.Y4/EY^J5NH$p%rQ4]Kkc:_]X>?8Vd-&0'u$AIqod3nC/_Y+u*LM_=UW>(qjGgR@Sp0Z(.d@*&=@Z6ZQ%N#AY)+$I4%8#W(?Uh?AYWXL8<638ne=:FX`kleR1EXXtWRP63>NYC'm^Dtu!W#e;7(_moYl%#\6^etp'%;]$haC(^N;?B4oBI]UZ%GF'm2TtTMZK$q!r:_?K4"hX!dcbqo),$Ud43LrZKo1C*e8U(BbcXFfF,!eW`>j?L42Ou%-Ph-F^.iT!/%<-0Y@8mC0S<>q>XWu,t%7*D>#DCe^eEaj,k3@.^-HF&nn,<DjCT.s""YsJj(*o7`s7t!taF3.YS,6eO&8rK?@_EhYoFr2<.adhSI.7r?`ST>.N4k#i#U#<eP%-g@#X]3H4+cUfC#2Q7<;N0pS7VInV8.9'LMe(m&HVUs+$R;.JV=ZEXLd%2'p>q?F[@$L6eW)Lgb:\:G0Dj[G5kU1ulOHa&]d%F&m%KaT>cXNFcDY7_HL3L4d-aA#D\M96`_k#>uhlC]-aC++'q1H0iDOi4r),_WEl)/b6^aq4f4O;SYu8bb*G.Ep#uf01EPPd6Sl+(>kZ%ch.]T[7S^oP(DQG>ga!+kt2)r_6.&$'Z#4\fP!VjZ;-:Uc!#&Yc1H5$h,h=QHg?b,%"'8_4K3-iN4QUuDRYHu(GhE!E5&?h`ktj=%PHd&#f:<3"A#lnY]/!KMl(is=+1'@_?0-kt9fiKtV]&8ajHpk[^p^0I)3l2jJph$4M[bm`OINS4fiqH-SguRpJ_]c'H),%W(WpPO%/O$uFoqos89>pOXA6/fr#(\=_cf0ppoJb5.B1r/-j!Fo^QC7rT;[4-I^T1=3qjY]SO[OlFCk"6TF$Ya+4,h@[jr%Gm!R[%i$YaL^%/JHP,)*68'ne2*TSaW.+>ndKd`edeZ<P'4%5^TasOutg$ea<fl-tF?W:)l70nRg`_itG*Pa<,'Pi&+p+TsUB/9$'$1Y=,m-'B;/g%,+bW3jhW*H.BBBCAqRS)c'B%ODhE_=B.(5=(]s\/]<FlK;Mes7(B2R)ih8W/cR3';h.?Y0.Nm#:+(+AsmOWJ>pd.gP8NA5"MIZjU%.6m>OApI558gW@cT56'45FH:X@jue6qH]`n.NQp=Y2fi90'jd8^R5R'2o5F8g^nZA_Ha;8`H97EOi!"`<5"Yo_'*qI+0%Hr@QL=t%+ifq`XhMn`*V-"+[!JEEqiM3,@)!g)P;>oN/;*n1<d%@f;O:'+55EGkAjC64RIP4XSgCB3a]r$]#cC6g\BU&u[k4ig=;NB+*OT!_%Si[q?$p8;l7#^EX/14SGZWSh7rCB!sRn\=D"oXe0CtahYk(UoN`;-9hp1>Qmj0L!R021,`=I[&Zq)03/eKY$*Y$[8qA81Vn?RB'9%llpMI.s'%BLib2S;XW<!R!qP;V>S3;?S]elhkuL2ouK3c*e(Cn/Q^dpnrS$`nRf("_)pUhjVLBh(4\s,"iTEC]tpt]BKq)]dA*l$%Ds"d.ZHhf`^p-h!QPbW2f;"A.T&oFG]_Z#b,V'0P57%`UZKfu[C@aBIQ!BgBYMW"pm@onq,&P=r$b/R*(#"j=bgW1TRk_homFYt2%bWS#+kkp:E*L#m6(T*`bftRC'r4l"23I`h*kTr9URj=$YA6Ne0ra`H2OA]SSr+<Y6-)A2K+\ui%=!j-;_3S6EQ-"5,j?QH4b+oOj%`)9oCVU+ZV44\Y_11E2O;kp;*fhlki&2iMh:&2qBa;a]1eokUeKA^mIe]E<'9ZL2EG$AK%kBLBicBS/a3_C`I54XW_HsuHj:);=u%e!?Y]ca0cJ5-0rGImMd]h%Jdu1$s)dhFQ(=))90RYQoHPh3^sW6!e>8,!.-0"oaWu`LYd?g$oYCP+Hi./1f^`q36"h3Ko2XdVipb%3IXA>cMNM;PmFlR<Zg%iE2X/m-^Q+Xs'i,WW:Rpg]"aV[fTQ(2T1F;BeUUcVpgoB=9fD=9"sc8;?'@7TkJUh/nfo)*fuQ<lQ-=UR%U!"%:`H=Vh"l>(FE<\tA^!J$o^a=,BJ^tpMGH"/g0k=!\BjM\Q0a$N9@.YD/@kFrXot8$VX:Ac3mmp]P<b/.6e9cFo6g#.Y/G!(1%cnjq'W?XoIW>>c`?kd3P#g`7AA(p%4MrU@fBT>%#+[dcS,b$Dhe<KbXJPnt3*0)u*\PuBX0?5N>$r_4&C5Y7S:7]`JlRC#P<%[RU%C>ogmr?QOuraNon$`o4n$`rP=5tZ7&;B@[mCpZ(WN.dRJD.A->@JUk$7Fm0,[kr92\M39q[O#/Fhrnmp1l?]'PukXS*OG`HH$E8,%X=dN:GeA#.380kHWGYUEK'7hUjb;qMisWpE;mD].?/obPXWls^e!YT$--)9.no=#[A`,L.AU9/p#e[C,H"BYbJW]WDR?(-(+(ACR%mu-Sn$h`#4)E-L>Pl2c6A5iG9o'CU'*(<>ka0fJ@/8.58IG8@5MXJ?WY=@MLFOn\XaT1;b;^BU(P5ub^-&nBFT#jC<4m*JiSjTdl%#-r\AiX\]qe?baflA$nn;U'LqjS!2+qEPetWGqeMg@pR9WkhAfUs4VTrlDDkJNasGYBV05TVf6hPL(.;hK^9868Uu!fNag@qco!N%M]kQI[\$Em3pU+eNGdN6PI&Ye6U7X0*9<O]HPLO1)kf"@VVp)M,"RJnQoiV&V"7PSFJ[&4/[I.5f\.`p?=8.[6"/3`&SlD<nVgc+%OI9LR*mP_EE:^oPViaq>pESumHD,uLBIo@m[1lo%)T*!mR=dD%9nTC4m9Q?aJ@iSZR(ThbAqd\@+ifuIL+_2GIB#ZT^e'Jqdcn:8%7bYVe`93MLe7q8$:3c^JY5<OR':t&tcCVi/0MIl(k2_?$rupAr-)a<XUQIoOXqmA=A%L0F8ARTgeR)":q@kCRbpocBA$Qf-N$Og@%LGIHsUao.u,c?ldEiJ`Sk0rBg<q*2cQIkrRq/It5n(cW=9\8E9JS1b<M!XI!+]kC6k#OA!qq&u!<MO"PM84&,cR'pCW8Gh62j62d%-hGYrb&23/g6R]Q!B7rKEb6(Uhak+-"I[SuY"Ze*B![PGAbp3hpSo0rVGpT0^5.5;[8M$P9`(c/GracsNXbg7/9./'87pXnj;<;T%10Z]\WQtt$M*BUjl%3H&^o>^6<I^EQ-BfG[DbQcl^<G$/9UaD?S?)Zla/#39<HES`1CW?a2j#^kK7V,)jdBqqF'-CDfpY&;m;ib0%Zg<CHB;3XG,g7h!Qq[XuZgg0Kp\$koANjhPF->_M2cF-JiP5*Zn+o4-c),euU1GRtHM.rcdkT7UkMC*3<ib;\0?d45,fNH+1\=('%eQc.#:QDHHacU;DhGc(umEJ$99O.1cBE7WtNc,<I1Wp6LTl_H#As[mJ1^:s=BV]WS&(f/)5iKhQC4!]]R5Q=-@5(Zh^6*foJqIQr%;`UC,4d3$95kV._K'S6:L&qD+F,5+VPW'6rA@"!kPSqX!Ufb^7R=fPFOj((a<15sD7>Jf^Zr&R(W*^l%Bk8a$pW_hMnqom8:#AX:%7FFl4!qF7:/T==aq9!5<fW6Aj_.S^!k4pVp50R7abk59e#K7M&9acU$0"+obUKj4gmaW^Fg@(8tM-sOY*@YV-3h&1;V&2AKImoZ9%,+^^9C!&'tK1):^jGhCRW97=/,Q]miO4pPS&7u>/'=uLYPjm[[(gh+ZY;'7'Mg>l7oP$['ei2&j`sIF1+FWRKOq=>+Np5.>R:HnZ%RQMf^LM$?&#rh/Eq.;0.f4<QXL64#+b"+-;B#UokaVnY?r?^J[WCR%?46t,q7lY<Cns%,F,(d1kdLmoBIp&AuH,q^C9)RN9ddt`M%[Hk"3RjLBaBlTDAXKOrCi1A'4@5BC>Ncigl^8/u![m#jEau7Of<+*?_^fXX[M?o$Y*j#&T/BEjN.L"rafD[OsRUEJ)0WXN'9F-)%%I5X[!=ndqeok/PmJk<4MD6b<K'*</JH0^"A9@%\:AJ'kVW=@M]&<,\E%8U@oWPM+XT'^X]aNag$12F3J5BR%&klinUZl9.f1Dl)4%i]#W(1c;h"`;=0CC_;Nuc*T(AMU;>Xqi'M<,Cch*g+1\V,Hq-_BMAN4>gtVGfI0+9a0JTeU;0AoM:iGAV_<3u3Ja[4r*a5t2L7#S%A7gs-4<5@UdC?IAHpVY,$e#>Bs4UW=I/b]Ds6.\43%fWa:6fD+W];^11=!3.f%"d)K5p<"YfX>r&&d.L.Y>m`kNS=!W:B",]Z=*m%i\`j!9OBk0O]?)"A,<U^X-;=;aqk"m)'b/tTf,q\`6rgk4/lkA_G$9(I^1u2P8@(4,L19p=<3sd[RAapo"fT+?#@c<m9Z#/1)4e:%/8`/T8P26A`U+I';43d.+m*+Lm2(u\,3Ia=g\,7MD2>b&#-s#[7g/856X"$OkNVO%C0>I%j->e,YVNB(gd[Bg=(1]H1RU=\[dSNj%r6(,41GP3*2AHf202>l7WM%`7,1^>M.pE_?#$+cChi,9n0H9#(qnr?<aF?*d86^\AM5e-j;jT-E]`fA';2/+Sinuhq+Xc7,\h\^-%,SKH^QGj)">(Xql?J_c!-49RQPL6R^1Z(u!;6\3.Q,XK*S^24JT$?WeoO=r"d$/ntW8!TZVkJ)&P/Jgl9V:\b.f-u/;l2R13Moq"%pt:D3%pMAUrVI]:p)ee^cTe!cs0k5@TE"@%I<!'?M8VO`C%,(dNXWeoe:7D$rqp.&f0B<,s8(d5roY@o(3D<Ufi*Y!nu;O`66:kf%RfB'krg,<,+I:mad[9pnW=OlZ8bYlur%DL17G^$(94RCVLrl?5CVOu8rt;e&,Gjm&A+#ZuQ.&N\$N$Z0rg-0jIr9Me09*ML2QWCC%0tQ=!k'm,%7gMj=B5.A4#l.j,o+?#Xr0n;h^\m7>jF6n`,NO@McUZ(Tno%"=s72eCOSe.sN0*o_/]0/AD%X43"(U.2<-DQ#mO:NE%S&#X"E4R,Pk'nhtl$mEkrDJF"rR*G#9,UM)94RCV3h5W)Nqm&)E;Eo[F2-5`FMDqAs&+U#s3d;3V%0CF/n==9s)`q$HMu`]OT4E,%+!LC%^DS3pbC;]Bm[&DZ6N3>OI"^9.s(6r^0E:hR\R5?\#e==17JQfVJ,F<3b$tfrqZm&V<Y@2@&+gslTE"_:6Yua)s8:dS8BBZ8%j%rEEeE9l70k<lZOQYL#DU85F]2emoOjRfopbP)5g@tQ,s8Tco@6K1fQCg<2U>Uh!^Dl0%fOI/(Dn=n7q83/(5J3KTO&NACNEeiW%PY![fmJQpImr%pP^$i_a$U7A\a!jf.;BbmK.?eBA[.E<f^,t=]qTAh1?Q:`<&p>F/1>fZUQup?D*W"\)pq+98QbN%*dMG--p]m^U%N16.gBua"B5<e8B0E.fOr%I[GV+Br]kopf[Q6Y9>6/2folj*G_:])_Mpci^1V1^#h"S/(5SiiqjpAaLjs)3(n/VVU\r50Z\KH>hl%UN6UrO@N_#ImZR/m6,G$8/MI]]HJ:",q:f0,h:F7a5*j@]a?&m2$@!KPE'1K=]R]Lai@e#W(;q"S1rmD!-F1H*l6h#par4D)LQUW%Ncj/&G4Rb.p[C@H+VWBcL,tATT@HEO;kPH1<Jr8(7+Xp"WVN4M\Ek*$P-"ng(d8p)SA3(=LI-=G-U$(!"7ikEj0%XoEDo!`KOFm%%#=jj55fr**Dgdh3cOC1#V#*3+1X\7']KZq[YJ$YDnutugn?[oXEeQ@r![JEi;HCVDr=dk:HcR"`k2/]J;3BYo78EKhs-u\Q"YWEX%Td'M[J"`'UgiZu!h"P/d:i+*:-[hd4RYHDOrJ'SuM7AY60Af<ma7>:;@T^#S,SR%RTpecqk,O%h-L1hTIQ7*&6hUC'Q2eN@mGTGV%Pg0M/]dQ68$fhIN7m9%]4'(5tiiMrP>WT(&&&`bcOjC9%K)@k]cL@J-=(b_*k<?hZ'0g^Q;Rq:@6FeOBq$Sh%5j`fYGqu<X!pY6n%(@QhjD5!p)Pt(U>RKsN`^JKZB2DeS[%Q,``J;R^D^B5DI\GCQZW#?(LKGP,.?YD+XbTnEs&4fA?T;"i89#8A/G^b92,o,AVN!r3A%-fiUKZJTurA)S;a3bpubs332ra150)?SEZH0'Isk+-]XUiY,<!j#a1`r@Li0;o+Z$c[8-'08)OiolBI\4keY/+uE_=-Wubh$fuKu%?BDo7)UBaW]?$-,k=dCjoh).^51,3I39^9o:P=+DB9u%YYNJJ91anf&UOdI%5UYX;UEP!S6u%W\8^,Z/lOe'A1K->MTL!jD4JGLu%n>A`9TeA04\"'NGJ!*S$nF34h`1*?l,s*)OWKB4\LkW''a7Fa)Up<Pi+I:k*c$F9/:qs'trkOZ[KTJW%.4Q=f]9(qmW$hD+U7#\H%i&J1/`5PrC7u:-b9MUfQ`0ESMU7Gqg//`PQ)s;2%#k'0\g.#'ZSG<fJSa_HEO*OX$NZ2/do+^>d#r2+,MW>2#bP#Tc6:onhY2(6p%5=d*LdR!aM=q3U=mLaTQd=JJZr'`itrhG\h&t[el')ihMb/6:[T0pB@/8%=>eLnA"INj%&SX`$FfnG]16-!pATZYT#RT`4AYMCB#%3DG$.h:\Mc.YIcJWG`)`SAQT2<5+P(6j"GO303"d7XsaRLMd>3Ea\HOAD0M`4>bE)7IpeVBZJ5+Ecl&g67ttR<VbrN?N<+cfF^hu%gk0\C4pA=9DIS/rEk\'-Ee.TEEK`SbTE6Ie,j.oiHWAMn0e("%81mDeHW8,/FL&Y&:ac9BO!_EGU+-u-LGi[]UeHah'e5r8RU!m4%nr4PJ^S<")K-LH'qMZYj4^nR"osj_1QbQ'gdXNiJZOAJHE01:_P`QrGH;khCN),hNOg_0X5UJiu.M'@&*.G%UCkVP=<Ah:E%r=rg%)YU6K=d5(gZ-1uOg2!;p<4J1%1[^lk$Q['Y*;N!R3(LGJ>[e$MjZ!I>BG0\?Nb$S#iCjaK&#e&8K021\/-h_El35GLYNr,Re)1_.%O"7"r]MY=)(JH'GKQdojhh(L1+PoiN6&sYs5eNX)R^/L"JUHEun;YRu!iZ:;)iQ#S^T:,L?(aUuD2+AC0CUX`VZi]kO=r<#bE;>o%Jf8n>_mfP;a!LVG,:f;j!Vi,8[QY;+nnG"RpGj3iJ9\!_Lit8XSg/O82sHPGAQA<H\Y(rs102OioSMLZF!MglCVd%_kcC)+.`EF$%]%-t_nW!7j."i-Oo1eqq35*r%!-pku[mi@.,9HQJn7E!1HMD>`:o+FT\?-Q`Q:OJ5H_*a?kJ:m2W)sN=jF9f-/]tn\U/OQ6qEgHk%6<'X>>1"_Vm1Cu67k+:(]OSh;r+JM"SSYDnUE0FD5B<8e/ngCFL)5,Riu;]p2`QpYCg[:'G2B0!T^WC\M"_(pL:g@LICrCuWuja9%Dk3ui?iPRSb<si:`]*1Y>5n7\&q%-K,(3n4NJ$n\'n0T(\#1SsR]'O1Dtm]TVPbAC.0+NhKmp?OZ6>d=;328(`Y'MeW_lQ?Zh^-E%5=CI+Vu1\]OPbl5#Z)I_>T(YLFG`Q<nr9Nf)mE17^OJ$T3U,%A3d]F:j%SrM-ZUW>:<@as=?<9Wj/LiG$`o#.i\GCb;144Al7p,"%',e"H,uP0<A8?RtKdd*n.kR;I97>Y.bI_jG(A/VU)440Y+K.%3`e#q9i]jXQ7>:qP%C]pp):PS/K29075+s>QO`P"`0[m"9ZZXJ2%dq;OGAsCA3'q/3.:e:j@mMGJeL.X5%]\+bp`NDOaR+e]:HQEn5@=>gC*_.^YdU-[j*p1BikVCbZSa<G,Nh&KgV8$/_cXJ?*EauBT%:Ap;SY>!L\m#T1bEaeP*WQHpDPt>1f_W"Ag5k8L-c&]Z`De;-9$VP:.b.->KT9N9g+W3]#0%t&A-BI/P+Jg%*-dOqAGr*#HE)R1q%LK_G9RBX3&H[,#S@escYd3)__[U`2Mp`#D-K2V`F)j3C?$=@*qgG=+s;QeRYdWS=>)jW#'mt1Q=g&jLeIThu%r0+\9"'La`DY(kY%1P5F1iZ*>SZFRfMJ6XWa`d.a>3T`@*;o:UnoLC_CYVZ;B8p#dAq52^dpT:Y2d$`g]%17dn4/ouohp2aD?q&J[(#]=eoJ9lZh4(a)%2%9B!H`_WQW7i]QkT`MsW,P+KLLWH??tt5ZoR^VF_#,=]o7paZ8aum%-*8kUT':d!2HVPNFHe(Klr$">_X_,7^+(6`6@fjc4Tf1E%P[diQ19gK1G`D?EA9J<];tqA8?SGD'D''Xe*%NE)T$SoKF[<*'_,i@PZR>n0Vj@,0'Y0Pg<0?LOEK99RTO(f]h^Z]i8a!]_hfXrn%YBO6=;AYrZRD@T+63GGO`@CI8V;p.6`KfGMcHjcPVgc?A`l67:N&'Y]2^m^snsc3"+iNrhEq(E_,'Ji*]i\LOVVJN#gcNM,j4tJ_%mQ7k#3CXP^*pKQ-\,<sT>X6FE\KetoK32%j7iia`VoF$p[Zr&)MfhIC,ZTmf4"Brl?7ErBYXZ+6`)]%%(=elG^!'=NHI,/I4[#h]%-*2AM.N@HG:$b!jOPR,3,&jWHk5e].d$'U"YI97Q'S$0f%lPm3\"qF.N2o4>"qOfa(7u!MU!G"l=?]f$p0*NQ`@rZ6R-p'XnD$,2%PitRJX:Nqj?)JN,8ZXImDP&b3k[\1g0($KJ1=n4?MDE.f&^"t/WFG3+l[LtkWRhF!<gd1#YWpZ_,WB6a'GdXqCQL_639:l$QSJ4A%ki=aZ-")[u!3B"rG2D''Ms[i]U+HQEc^m_a1g%"@L68G*JlDO09[ENn^u,42S*FU$_-d7-RTq&RFYiF>8D/uB7JaJ.aeXl/KML4e%L+E*4#kD6&`e\M;E0o;$L^a$*4:>$X&^K+n"terXE0&H.V<9OegPJU.P9?7Ya%7M=?sl>FnHNJ`)87*6'Sf-D'IF&hPIj@gV8C6j%)GJOdNTps6ekf%BT#JX$Z#S=T$'KWOH0;0%%[Qu_DoN02s&#!o%&?!9`TJ5i^Ybsi/QsmlZegYsI_\])6Ep$V)-NeFc,B=\(+hg:%PQ'`J)C/Tr?98r,0Y=M&;3FV(?l@L/H"_M7O(:=G-[e"dDNFE=O:p4,F>iCE0?59WKj<dm86I>3(pS.+jJS?;8eI"I>N/\R0[Ad*%,flIm4Z=cqPc&d7$m$\]OhXqXM#iVhP`E_fisekQoj_GrAjtC)Q&2D03iU;BX?doPd8OS4mK113TRoK-XF"83_N)juaYVT\l\MS7%@b=n0?miKoSP>\N(Q&QjTEqr8cp'TqXc[>>C9TEKgJ5ae,#deN2Hb,\=[h)'[D*@C3/`3oN_)C1aC+9\"":VTj1PVicpg8[.^UBa%4.Fa1`aTmk0cV]HGTg_r\R`V^7>XS$YGRL=IF1K!)nAB1S>cFHTXts&0Lb<73]=s=SkdRQR-8M^:B%)M2=c#c-Y#1GDl8O/SSF/O%[7Os$^dc24E6=BH*8.*6,c'dJI"@S9@Uo!_Gm0A._pia"q2nt'=I6CF@&LftnIVF!*lfaEOi/aGkBK9=r\S1T:H9efqB1j$:6%]%%U$?<W^NU%<Jt59PMe-(M8@dU1EK(s84DNqjPto?lj+ilkeEGRL.SaT^Zl@F@OWYZ'OT#^3Z6$idg5a.p2:j#Md_.f>6JcEsaR`)P%%WNVqPb(LC[D1Bug:W!$JF/TmUl,Xk>t$PIUp&f(h'GRt@r>?6V2C/8Ie"n-Et"b+PNH=cIF;5l=?0i;pRC5T6rb$D.k9:mJi_Hr%R-Nh'20Pro-O]f6Uus,"+ZFEJ>"*eZ$YG[W,(mjj$$g]aKhX=")8&*fm2\/9+.G<-169/#=k5jAPCn:gF%+7u1)L7ZZt*bAA`1.-%N^<!mDr$&$._*N;JF<%L)cW)[=Eu7h!%bkT11o9R7nn)M4J(;MT!XLu+#7=(`:+dqA?<jKGdY]#F,o4'D*rYM(7q2'THAM+NnJOB%o^(@#&Bf1iM51SC7#n+_',`7Y1#P%;:>RH?CGX(Z4(@`r`o+PcZ/\jb2G&=FYu@GYr&r([jT69i"+:!1SXS#qfh>\)?<WI;8cFmG%Dk;Ts\V]KdeZjlu1<p3P\QQfb-kD)CVaM<*UN.G0LbraT:p.G.4ZWoi"b--c#1ks@)TZQ3gfDLKc`nfsM:9R6hoM?8O#OD1Y`D%r%88,uD9KTI5G^_@*UO^I#@nE]CK(2\<-<=;;`aG<2o(PoYVW/$'U=HU*k\,B2Y4sR;`B(%ALs7?9S]5?p1ZY!fpagBCZ#9i1-(U)m%<r:Q[7k(c>7Z9f/.r5a9i/=AVdV7WA2<at<lmuFg'PZqXQ-Zh6?--3FfM#ar)E@Kf[+cFM8W'Aidb:>B^eqI1/f@%9E8#/(>'jMP%6EeZk]oARlhSSJ5E3(+&Ota<i02b,/Hs!$qNttM?6/otW:.BW$#4S6#:FTj&GqYp+RLF=hI%;6DV+K+mO:hNf"cl5(G<CL:H>UOE%f>CrX[m3c"OCp;riPW/+5O$J2lBk[oTQt(88#KC7G79ME<IS$>ea5?WP3p(fUMC9Ik5tAse]&V2.Do+m886DiJLis^XId$;6KR!E%qh@)-%7[mJ(e3H7r64\CqQZ$#8qHBI;iV9?&rSRMJs')$1+F`)mkkFDP7AZB)_V/E5>2n<(cnX#QjMEH1"KS(jN-,H5bo"[#SD,E%BtPFll%Dm.aekTB!eS7D`!di$N_:cI66jIiR*BC,_hSs@gI:3Y<9Da66BDC'S"@-,aq3W$[L+ki3G)*@,GcA_Vs?]ZI:]_>QJQ[n%77G0eM9cst/DH#ea$]oZOcI!Ed=[[hA+Npq]8Rk.ZE0*"=dSWnFOKEkQ6>$VN^,=9N)&Xe')=2F=aS&ZT@hYjp#h=N\BJ!APB"@Y%50PcJg!CE(8\#@qaUtI6'$?X_^bPl3EGoYmLcmG:&CODm;)F]REnTHU,YN=?F>E8Cp+PQl[^!ciMUP/,O)#;O3E%c)@uon(Lnd7>%16RI#07,$XpA%OZj<ds+`7CkO^Jh"Z0?KX?RqZ)'66'WcSDG[p,r#:X7%#+pk;kFK^''B*"\BG9@si\slt@7q`g'^@G4^s@Q#ZK1%FQs7(6iK#K'VU[bI=]d!N3?R($B+FMk+4.U`\1$?E[#H%5Mk7ojdTLHn,*=]*GRV&`C&or=q3B6AILaZDD5B*%'r"&16''Jj:uZg%'ZsX[)WoD+0qA+5S^0N!WDpN#N%;5?oeI9B7trm$\!G5^(h$cua/W0?#+7mk\$rfeI,C?$>kWjmWLfN-;2,[i:@1eVj2iQNT\,<?%q[TkMduO85[`CE0Xa-#TO[fjH/H*Ukfdt)Z7GUduTcR*;Y)oG'a<`]3:WgZ!$p_lrJuBHj[#s0Hf&KDk892gt;71A;UtP^(g45Mh%m./SJ(2)jnAZ>lh:#F+=Jq\)QBRuQ>mjHrAQC\Lb<N.m^=3bBZa5W,HW*<7DR-FZj<XeDnadNN%R;S+nm&e\4\_-d9oR=r)K1<=A%CE(FF1F]X>X8ne\g1#&Z7@A!('-0DSHn>P<5SY0)D,@UJe4p"!6CU1i3WOKbdF%1iXYKV#,LVKH:`EC"?49l5#$)>.&JY;b\V^(C%=Nn*KNO5:i0lsP8]e:jcBCMUU])SpCSPE(NDufFpn(BFBZpB'<N&'c1R;^H[T!rBMfZ*(-%>s?W)bibr$ol?(bhVNHd040i?`=8/%L"W"*le(9i_D?OB)-nAmi+HZf3AeCHbH@;#6ad)-E.QM=YID2IRq<uO(J+C`A2EAPZYItWV<\kBU4Se7bHjI';FVHfDBm,!MmkXB%VlicI(daCO>&MR&QqT,'n\Xi2@u,FSS98Gu[6n#1qq]A=GDSXj;HMlh2P2KsB`$t:XD!l3OI6@Cf#`6<B5Xt4I4.,]+_uQ-Xl=H(%:Sh7W+Rn^*YAl;+;_jU<^S;d4M?RR2m+Zq$SmipCrhF"p?DYWXoKE]u@hq-SF8<,C[7F[Trt,h+WU;<3)b%b.Yd4.SRGl?#cI!(V%nfb("S8FNMAmRJ<q9U#3:b@+#@NB-7NdM,%r:#YNDM-/\8;3d.Xa\Scj]4Z%kYV$OH[Fkt$8ZL?RR@$/Bd9a_IC4]<,"%;j2QpsE%O>j%;\\As$!],@Crkb)6B1'dQN`S-j"]_&Y$"I:CcfR94'>S8SDNmPdFubHLeO!H\]j;1V\2!S+aTR?<6OtE?UJh4UNPRDllfq/u%cAgSma?7-kP(=&XUep!ebkio#)>"$j).4T8>.1+5?:A#`4fO'GB?3o(d]SNm`$dtj7_LR3(ns]8LulKm>0Lb.Y=K0=0lf3BIqH'e%$oaJ/PS6pe1PNAc!]JU6a_MUa$RnG2!14\Z(RC\XaMcljOgM,(<@0j)'<&qkl,oUEFIA<aOhRK6AV,V_BCemHl@*b_o>)(:T3U#R%bX>gJa9DC@2`>#2VI]<Pbd$uL1F8gR'U+5Xg1MkWJ:k+F]7mb)UPq,;gMYnNm?98*Npj$0SL"Ye]d=c=U3s+l8(iK"@!4r6VsL3D%_u?XjV0>V<5hF$*ArAE,TdF]b3**.#6e('$eJgW22'&M$<n15?F,hB[o5DBthu?jY%r,3=gQ#@spqsG@aj9eoA?;rBi8Cq$f)&ue%=eaqGNup]t5ELg\OI1(I].eu,Em"*:%G4e23[;'R]jJ*08UMHTc-d>:j=bkV;^YKu-=+l2fGQ`6KL)JiAV)-eV_?M(,9ZY<T+D^R%Ap62,RttLDT($;;Ebfk[S1fg]5@A5/?J)K)mkcVW$lqW%n@jY^_Qc=mpq4GK>43E2RX,BCV=aW$eGBd+Th7j,^]%a`pD,Jp5VfoK%Z#O\$j(pZYR!QNOC6P(%1hs)IoZ!5;hA]R^>H*okYu%b5;*a,e&cYQ=:\Vlm@uVWeAt,5`J9,Ph97fU35sl]UB&IT$]sp<GZ99G0%F+@sl/^G'YXk]`_bo_YPOHb\[Rl?keDfo[[@?^Q#cHKQ%3KX*&c,Y>SW;=,rio\n/7(H%sBn;3QXVj&!DkN+D#157Wp^n0HfOQf:%'Pp<T&_s8NbOEgf]jJh]#%s@LiYYPn;^%&DB]*/@$k$Jb#:4aG9^bGeQD/OWA.%"dRRMphfJ^apWX_0getpPGEZeRZ4+kNq"N&!t%XVs.qA5Gd+,)alE$&RW?LRf1G/Hj(PmqRtpa85Zi.NRJ!aH>0H78LS<&<n9mI^^[2c3DHbF=_1t$s:uc*<^QOi,_R=%JKp,7&F7P%VKaRl4<'85W+l1D8;"GcGLkp`&*JaZAt`!>:[Z2tQAqh-O63.U;=g,sDLog?/-K3mmp?hfR6:arjhN$Y@2q`@-A`Dj^Lp5h[Ld.B%2kicF-0Q27`XVg%JIN%=!k4D(F&<-^]!Eqo/)7Rs\O@R.+TPOI2qhf]dK72koW2O#'fVG@IGDr5DLpYko-A'oQ]h*01fi>[Qf-L@%4d]RZeM\,DnBd#a%X%(W!1(!^\m\;(fGSe=@=P3><pimh$sna+J#A^kaS=3iW+/KjNT^p_-/2D$-S%PWiP>R!4>M^M^!&2jU/V;W%_=F_df[=WL=L*_l=N:7OajoB*\6/O&+aP8*oe)<*nXcF;NQ*QdZuo3QrZ_e^lbs`OU`+boRA-m21$#R>5_dOQ(tn0HaW#<l"3.W'%BQ5eBZ!pQR0MUatoRtOO&U]CXV<3*%?st%q*]4$!0)`J_#!<geodgT2c[_u5&;PD9EicT,&P,M<78JtY6d=oYJ2Dt,B<!Q%Aq`:+%\URA/)3l^Fe=^9Jam!]g+a1-l;i=SG9/S<I=C;E3);>tI1k)Zk+'iB9Wc'<Ngqj?+O;OM9Q&cm"Z)U0k_3hKU@N7/)9ME_fMHUVn%1pa\fN/_[`XOI>MYQctF`F&<V='CH;K7,sX,1t%;&%F=U`.E,G'Q@SsIBuX@^J^M(MF5:I]eRYZSbgiSi*#J1:h8KO;i?3UK>fgQ%=./=SM14.h>Q7s[IZ)a^5W6X[],3VN[\_(e5K:g68kilUZaQi8H,^'>@%+Hn[+X5hTLG2:VHNs6E-_gQPKG(\muM0@Z<>tSRDg1.%o`3Bcitp7^o5cT%)sJ,Qq8GW3I6c4S:OaKMXMh\(qh=[H&kd.RI$rf0HC-11A8;4o,;T*dCuGpsNp4RGHU,&6.F1&M=6:kcXj=R4%gC`osLkIrI3n9LpKU/KpUOS^!\qCZG]_:/^ND,8.0$JJnjq)7^rlj/9M#9@[EO,Y=FB:Y9pCrfK:&A!-V5-Yr$+6KjS#_lX5F'sP%W]\ahFeJIJ0=:RT6@79?9cT,_o>HB\_LlEC[e<qLZ(bt;jL8*$qd&Pjf2r*A4ICLDo27qQF30!UGVnfSfmt+.)E@gsfm@8hg)+?M%HS8&"fY@h%[WeUGHDYIFR7b:'S(C8HFo=(0K]OkP_W#rS>29E?T$kq5=u#QJpokt=_H82rVBsX<k)u@dAB?T;_/bn"86W"l@5M[3%b/6<)k0d&FqAq=*K$nO7&*(Wd%SQ`3$uch.LpZNWPA1tP1?GK;Ormt0Mm_f$8gs=!O!9hL%t57RR?!_40V1,[0U-i-PF6lh3pgEj%hqDsiA*+q[GQ&8XPG$KNDTm39,X=qh1^Z7KqG%iZ$JXt*dn4=6/#XD3VNF^u'nXNCD#A`%A)8Jug;c`NB;f4C@TC3OYH66.F3MPW%=OD/\f5T5CBp^k`D!04(R@5359>B'*]0A*>g;5pM$+aJ*g&-[l$0put0tZJ4W<@?>[TKtA5d9u^XBZKG4jRq5?e3_%)dQ``MjU7I%WH]UQ?PZ!G4,_QZL@drtTl'r`(2P<MR*&77Tb_uk)E*u64elI4V@B5$+WF;c.be7D`PoD']n*0=.ih>KW+nt<YXIG#D-Zm\P83II%W9c\3XlHL_98b+>_Zs*`/Icc$^+HcgXdmW'NEX94Z$#]Q9F]n"3c.P9dS2<EpSK@7BA7"<Am8n%]#5Odc5iq90aqle]q#1]`Nn%h%Jh9p2Ip'(V!+6Mh0J$\h=g4iQ6p>[r:_%DTU;pa.@+,mo=m_g"\copdbSXsNg-Q8If'Q']CdQRCk2eU(/6<4<7WYh>Xc7%()NY^m%8b[^PA&jsUomSTZgB\U-IK>YG4/&ZinmsYH;+Rjad5**OJ^J/NmerelH!+O^RA8kTJMBcDB''RiO^YboH"E`dYVVR?r_>N9qiS"9%kS2ca1`meaM^3T2bi[=_9$ds8bDr^4^Bq8aM5,!-bVQ,#JZ03n0W&6/j\Q;.MJC@nbmfAq^8G`t3'Sm>4_rdB*phEPe$`m*X&b)Y%VF"*K4N+K\9Q/9B$Ru;@92SP@;7Aqp+RS5"Q]<+8$OobF!\7"ErF%-WMocY94kqdA][jk#+FFde2Sj()7a!XBR%5rXR[o>B82nk(%R.$g8@Y#c6k]upld.XQiJQX0CWjM?WmnO)akcno-U*7Y:k!ZFQUKom^=8!bXCj*=L-mf[s\f09a(8fgtKrEF=/8Nt]L8$Q?!7QC,%,)uB(P9hfA:fbWdQWr+1"PY,gFrZ\em\B--JM47oV/"ct@nXsRb:J(=>M$3]<T@K@X\@5X4cL4Elp`"$-.<dH0U?[18\;8al3ua=%6D8^6jq3*2>/M0=Y*BjRLT0P(DoFG#r(<X_4X%9]2Wj8@1;-/Rddm(s5$?:ln&j(?hiJskhH?H<5D0Wup<?coqI(O9q[M8nDOX?9%27$C&D-q*j2.%+,dlUd&[tiKR>3rN&k?n^2O6MVsN/a%:</CB(G;=R(.Vq_P@.i]uA-LeXlo4-fG%]'1p`NO%/=erJ`66;QD_a;"%<Fhi9Mh\ob5&q`=L8.c/<+t_5kSL]QSk./p9VTgG;45qS\lc?a8heD/aIaGrQ<DNP&TZ<c,2%:Z3L7%*:RV'f7:kBp5?Y3?8hd,2%"Wa/=Yt$T`Pd.%j9Jh4iNg6VjBc4;:08qB$I2L?q,J16F$ts"8h-GHmZp$6U7Hug=*ua<5G,*FVm+j8!n28QP^G&kT1iC_7,:=8/%dit.tkEtR("2hH3^tp:@^^;8>WYK5?0$g8(qS%Q7MT$14]c<.1YV3*LMl;aYbDn,LH!)BZpC!b2l:%^T8E8b$@7:P[^_.@i;;Lju%nr/9,@+nOIoJEsT(9@$<XGJOP@b$'_NO:3NdG6*_-njf3Au&XY&rg0@5AN@$(E;tY7qWXc.`AR>1NkOD-!GR!VX6e0Co;AZ/6EW0%R%!J!Ar8ZfZ8c@:24IZ0=n1ds?8X<t8WgEPP@],E<A.c4k"s)1b7DXu*r1p4L9bC_d[-oK=:<%!E*G*rB!F83ln;;l*S*-D;i>dh%'W.si03)U2jY)ee?=7mnoTmD+(lh(n5@2>pp97NbNEKS'X_,6Wb8Xe^oLbBlkh$NL/GHq2rtQPY!^59c2QpsSb>6@>92iJ#N94%q%RcXN_*Lj+XW'<i-BGGBB\J8tgbJe=m1=if-dQ6FC;S/nTX_2\gFP>j)RTh"2Mp3j(9m`hiZtEm7V,@-<*p/cZ%([nL7+^+UmK6R%%IO;s9Pe#,^Z2*&^$Z8K#!k,@!2]UPf0Y/i7?[!c*B,/Z,ALs8+(b;i,?G3RA3sfV2mP)Lk?WA/%<UOa`*ONW7UT@[tXc6o'k:tgp%Q%q0Uq2#4seK)6opPLQ,dF]&aKu)8l,FUh7)"*^]=\f%Djs(#X'&96C2O>[ChL/f`KT9a0@T*MKffc[nK8)"@:,m\8*jJ6TN:H<L%PEEh<N:H<l@kg(_j5"A!FS]fiBf-fMN(q:H[>roMD:Z/faHh'dakR9lfc4MR]@Ta<'KK<r[NWEVf`]%DglBXgRi*+<]>-/U<7rN\%Rq#4AX<\g>!l%l4qSjf&(9B3`%=3dFWc*h&:?^7!Y[*n^]$Zj5U>Qir/lg<5rrUks-S!iHCdHTAcR]ccUs8o*$f]N<[n>U3)NRLJ%alIR^U3+GFetD\F@4$+UCKr?e@SJq:j+X\@RWqWZ)q?[5g%lA!A[P`!A[+9@0s-jcY800'#WbD^5GQ$_*2;`FYb$/KlE(j_hWrI=%9f!%'6=lQbW1KHsU*VKPlWbpEfFQ+cfN=Q-.>r+0otn\jb]CcTjAG,i:iSNne](7>fU30)+WeVYFXs4^L%Nk)8M#=UR_S2P<p\^R%CU-,[*^$cf+6;s,bE6[V,muH2<LMDek@'pb2HH2(h$-l0$YugdC4gZO(M:5(D5\**:k,RYaL\`_:XTWW>=$/m0Q+rQX?S7#FpkP,%>UOW9&_ZT<dkaWH_>Ie[96+M-Q$)Ca.ME9A*qQI2$1,L^P-gW0j-_3P@170,e%,6BC`Nc3CN&!f,OVX8)p-_WqiVZ\G-W@,)s^&[%Ht]*SVVTGJW$K]B]Z&;mgj>Gi+,aL.L7P"p,h]r1e]6ZbHd\6`Sg$567"4NhijdX2EseeTEGHPoA'`B_7>D_Z>]r<Aadc-:*FbU,%Q!Z-'M3^XAPEE7+$')ebG.,&*BHf?$gUqWd_5jbP9$^Nh<ctqG`emLj#1LjC&f"EE]4W*i%T_lY'E['7P=;OQ#1M-KU0!]\@JinQ%JX4ec4Zk)*KhjRl?<AYb68K!8G]LQnZU%+jrB+M$osJ<)'52BS2:Pd9hhkohjsZoj%%T&;"uT8JGuj,>';%r?;m/7j1VF/*@KHe^%ZRPReP*T("]an/Hbl)nBLJ3)'gi\fL9;09pA8+EnDgAX!4gX#tD["Dl'8E`tCoua5,"k9bA)\04,t8i/S>e][\he#:ga$Q;C*V3p%2,;`)I\Sj11m,W:h!;sJ]2q)#UMid\eQ0)d`IcY#K4uX=-p7E&-<jgAQXp;E]JnTOq44/t"hPL`f5ue0]_g@-C,7V"QUfjL$uHaJ%kV)POc^b<eAF<Pb&"1dXoW.:e0mCd50l#Rk+sKmM\=q7b[H7@#S'5J4"&[B`VkRZ@#n8d<::On&4,23d2s<M2e69#6_b\*Hl0QZk%digWh.F;Hk-?^Gu9o"aB*#!BT,BkI1PO<Lh2`C+MQtC;Lo-o9j#%ohq!"DP9]Wef<08hU=n&"F.$oB@A-K!;jigIL%&PY1i<ckRm%g(ski8R&g4LF&aK%8,I%F3)58!t@kDhY+$`(;Li%;-I,g_D&</-:14sEj2FODi>@Q^j9H5m%@&C9P9='Oj/s6CbCi[Y[,a07I(eY%'^&rjSio4.coi]Yo7j5Nj]U/K#@OPOTLrSo3-k:>?AU]kTdpZ2`@r:9gV62%!)gF`04Uh$Ar:[:m]Y+BcXatjZIEW_^ur.q/BkF!%QVfIC<rMKLD/;$fNTPfVouemjC7r1Q@?h8OFO/0Z44)ikWHi<_g;Wo1\;k=H6(\Y=`S,EBO(uhRb-bES=s%dh-:=.Cp#nqPXB6!S%0WG@HB=31*<?ZIg$.e2aW+iLR6o)5+3h06odSZ!?Yr'.pR/3mf`(CkMCo&`nF?'507sXfsn+I]+de?-3;$G&t[[DGC<l^:m6r;W8%3VH-:f0G*i%47O9b9?SO"B%*$N9S(IbVCCIHCQ25K,u8k6IE&%ZS)NoSDmo^I:a%8B)\'H/uOiVi@;>7ABfijJA$_Pf2bqCVlF7h%ep?#Mh8Kc&1B`G-2Y#0qA*3.KN7/c^AAg,^E\TgD;).6566D\pZ,)e)eV<;Q!dgb=]/!umK-_Cg/7W]H"j+#cI>Pdt,bSBZB2!la%L1'J(Z'R<"CH0?bPIYdCkbX/IP7)`h1Q\SfJFUIE?3Snj#kNaaAcRq:%lb2:c07MM<9[t;At3H8emtFpLtZP%_cR0Q2BHS$G\5Ij%hec/SiPHXQ7KoZh5`i";6rofL<BE"&7_Ok5VIVX(WYHYAdhanq/JP9&2Xc<)50o&HdB>^1D<GeQ?E,#O/nj)H]=cpd]2Ui+gmHn(%\s)43[l<96^"Jb:^dtpb(6bbq6'`0.'L=49da$E]&))"m5766!',@k4J>>A7cN$h)*NNd]-T!Oa:a>&J.XbsS6:5.$"4Dh,jW1%@%A([Vu;prl]Q+Y(tB;527?t-d,UsY?.`uqqT^Xme:CuY9ZOeM/eDIfMB20Q%3m2`NaF=FG>]ir%CmAu^m"stcg>(lfb_]2*QZFHsX%f:c?!$e>[8W&?c+oBefqL*TrkKjuND/c+o`Pn7-m*HtI6K`Xq7'pA-a_U>](8Ub&F?)4<?2=.E4GR'G;JQe>QPHOj36*q#V'MI#k%1Xs%!EH[dS&UXdm;VbB0A5"0eF/n^\'MMR0P-QGe!39[DdA#9$'%.J`/:7bh4"tM;,0a,.s"ZJ495(,!,rUmfl[`QbOpAe`NG+&V%hbg^G/79)4e\Vp$mppC;#Q$T>dV32,DOei*LFr+$ag%'r2Ml(qAD*-n&pgP@.*?#Z!$(<'g7aj*[/"Ki43*^FIRokXgI0oD:X7>R%@L+4s4D6[i<,0IB3@;R%TCP-Q1uiL/l,$?b=q7;92O)q#fkrhS=Fg25&EJb[m&X>j+]uSi6o5?u5FB#<A;2AApAO0L:<pq'8+3E4%\>NH!%Ao["*($"iBUA"Gb4kQk0l.-EQ[!)nf`PV>nU;j$k*c(8:amXkXm"[;LG7t!Kis5Xo+YLo=m;"GMXII1dI$'5Jk"/e:7Bsj%YtaE$RT9rq^k&n$S2cl;#LS!f:++^I2)KekE3K$uR1'geeLhRU@s\R'jpDNW+d\Ig5]MaB=d.Jmd,hM*=f&uEL#-YhM;ZQ2P-.,`%Z#!t[8Lu1@/(k8Y*)"lT/X__IdnmG\S7=k*<\'Bp2JKEpFnI(s6OV_cJnE>"T,dMo43"FEb$H#i)\944O^mm&<+GAgY+JnL.'d@P%`tnPXkt6n`2f-4h(fD0=>q;J'V7DSo.rYof4k+!r@hqQ=CDS!AQ6lh`?)PJ[ZRh9,Wg#p75aW1Zp4e$YMZq9_9&bZi*+9<f=:CBA%>Hj_r4gicg\ecmJ-R5mb8D7WhiTihX]Q6YLrDF^FrKCGnZ?H[kl:-qE8(XKReG-83[Ab'9Qp<.#hjn":-sITU')+c@P%OEVF"C"e%cO,fQn#-i$`?=r`IQ<7Cj3_Cfp*%\<X-5M5')MmO%mlR.[oc\-(H(]N*P>4S+j*AkRN>1'+,(YRZ=$%fPB^enVQY':q8PB<4c+fH%3B8Eh4c@:@lF]q%Mi*V<TKm7QWFS;r)e1a8&mnRGH^_d;3#QP,@CJatpWTR+=UP*2R;*o8+("26@tu)lJ!D:+-KUdQ;aqI7m?tL>%;eX)s-WrHB<j]RmM*I&83@C-"=(d[e<7eLIT_3>cThL)7Meoq#YH0VL@a3sGT4%\^TN-\;1?e"o4k`[p=]QOOOrjBi36(c+8O@'Y%R%:3G47q`R%/nUL"<*>9#*r1>%S'6@hUp:t,ZA"?aPN,SF)*O(9Uq2s>MZQ[0"iMJAjn3k__^l/0MY[KcLUpON2&Cs6j]^(ou)HI%RO@5$8sEAiHlaT*c'CXJ/kpKd3JOLUW`P'F>KU0DCW8$-RVnNEV\C[HH?+>O!+M*B_cG%kqMRE6P%4PZAm\Z;2c)7:fd&T'5F[Ht%4\8Pj9"hHH@F/Pqn`!lO2pa>j4@p0.Q#>%=QU!3rB1t/_P@d0pp.EI^s#j?s0!*Ih+aNo[\Zui7,L`p]:tb+/o1TCp,_SlYMe?!@%IZbt-:4D0Gf\.09FbL35lm56WF%KH!MV8i&>lnr'F/tMC[c81'@K=`Z[T*H/-/cXDj-J#-Oh7r[3tPJVSkq3<<d]3`A0u+Bk.]R%%oMl?L/5:9C)k30PMPCQc46c%d\tJk$#Xa%_eM4[XBEd)nc2/@3NnC\^p6TaK<UH?bZ)eD2P)Ombc^k$F2o^lT8]H]47L,PD'k>SB%Otk(7WR7n#C8P3unPgrD(`JJ$.3KkXA<"ndC\Ctq!Ef;T9Pm:)433YP1Lm+Hb-[g+9_?^!g8I/qDf"9&e@NR;X4fljacnNUiEY#?%!E;!D_TOFpOXpTE>J%3:emS3pPb/V1D`heCi=D.Eh/0W32-MoXTmYV&mg%P04T<IX^$(Ei$^sjl[!D2$BdQkI;0@0\%F(Ha&^r]4%1qkc1$ak"`BW^jXDq+E</"?"9C/rH:AK?YtOHpbV]s>3CRYHN7CgPl(2Wr*B]qB>B`@IG(L7+(,>aS_GNo%LT\b9=BSMt/aP#Ju:%AB2jJ(*)ml@rmuV+S;)(9oF`=Xe!kNdRI/bQji6LG9Z(%9=Q`@QVG6g/)lu!VG,8FrPI.?O_Nl&?CAKDR8Db`Q.bRk:S]\a[e"<u%q2GP0lq_1WOCafh`7iORra\p!iJl+:jfn=qRua0u7!*$Y3O>U^h3bm\XS(foAASpq]k#^jL!@;peLe=K43-^O77/Vb4hNK_r+MrB%e#"3H`5*EY8Op24_&OESKQjYp_qE=o;sD+H5c.$2&[Qu&3r0ec):VC2Em_fk-E(7<Bt7p:@+3e(bd:tUaL18KVK"7IQ1\$(O-Z+#%O;S.sRQ+J?_d^eC.ITPTF&js<N$!/BQT;)_AmpSFZp!*1%8@-2Tf>)qR^h[P$)?+(Nnecs?<]0?Cl<;NJQY"W+5`I=X(\p^SjB\@%NLbb@(e+?m7^HA;F4nCP-t\;0^,$VmlC1'ALX&@^-cRE60QGp#1"N]CHjo:r_GL!HmRnp.[9"MRZLMbn4'aCA"t`r>"?l:?n2#.0%I'G>'=U@#rDJa%*&i@F(<aHUV4qgC)Uu(;a;EonK9HXL3M<ut[.<\5iT0V7_44At]Y0Fp(MkPZ#Un1F4O57e]d6)Su\pH>WUhYL2%r(6"e?C`FCb)@q`3aDu^69V_>/".gj-3O![N&_A]p!DB-mJT6qZHi+6*sf#JNUG:e/*t-Ip/M2.GK#SWVAIiiWl!Su6p^80,gg;:%0RKsuF8mk+Y$BDP.Q97erS@3'/61O:hmR%dc0"udB6mVOE(0d10ur(8RAa;824,j"IKMVh\*bbQ)p:/&%X2`<$(2Qts'ctS0<8\7%$#mn"3qUEKs8@@l%;tCMX+#??m)-lbprq`SfMmGU[LSX-U`ZE/6T%3r&6#3Pe5SQ9Fn-\h,ru)O:RVd,0fq6IjBbMKKZ,e@H"1[a%"XY6jebT"CZ1&#mX\A85C,1ES9fqipWKn[D,h+JWg,,13#o@1T$]Q(C65>9S$Gab+m$OQ$7Lb>5kT$AJ3[Zh`g.`-Nft=b_[C@q+%]`)76'!`lCT49DqHX_%*`Y,p32V/Xqn2Q-i`9-q6-=kG=^<9qOp;G`M(a`h?N*E5D-=k_'o?;<,p<Z>nZF-1V@m]n5/1CrE+"CgQ%fARTiL%^mm>p#PKp74+eIFS%Hl2Z`RX+C<bCY#Hl%[g@J!C/,FQWC?C3g3`$0tY`6`R\2E!^2\6bk-kS(fKB66$Fl,A7n!X,`Km'%40?_KXBS[PfTNOK-UTCP5q$o3Ps[3ZE/W:7K1T`D,,Jiq_4&KD`gNP>G?'?;Z"T-a_,NH?KKp'<B;6;AWu\p%>&p4B'^R2HMBfHf%f%=G7j8$jID(:*L[Ds%5l=^F_pg-P$doh9_<U8*?VU?OYS;_Z<`k3ir%2);TR<k!BGd:rQ"i40nU\VD8L2>)^7?Er-E#)Ve8D,fm%kl_qm;u/&-e0.SU9'F,G3&0g==>L5[nf2Q?XSEO3;V5<CN[k61=aNX0(TPX31Re&=.;CN[&oB?"8NaD073(>u`mbnqm=hf,.[\B4%,BIe3;:]'@`))\tXS&&qZ=3nd_:0Fj2ksl(drrl;`,7D]Ag)O(eX26OP\9"J@da-X'Zp>9F)6;d?-RKceLn`(HD"SJhTp_oJjs1b%#!L'WkfD)04e0LnUlK!(H*qC90gqnH668g#"%9nl5I;97G.$EdMG2QSGtq,o:=u8BQa`120cnsaIjSK4V_]u,XO.2RI!-`UU*XrD%rM>qae61V\M^</L!Cfca1/W8c@aX=BJOsWa'ub%V/D//s0H&+&,OLCPei4ptGS?6TQB1a">>.B:\tC^OO1SW"s,BHaa9e`DK#E^k%q(hY.!Gf[6]kJ^4(-0b=:RI=qNA"e>pXCEngr5^f!i]UU@AECc9,,"3g.]\Lc(@]E]GK/+W@4-k?MM^Nq13%#=?Q[kVZ-*1@e9KH%Zan<+N7/Z[(rnbDY3nMcFJF%q]"bN*k-Z[d08rgb_<=BRZ(W4#Y[[,oI(fA:H<(]oJjRBO_V">dN/%"86a&Gg$.iQAX<3pD]eN9b%Q;5[hs-*,/$*=B\Z@6C(j'oin\q+QX']3.q[ECAW0nRfY%T`&^=L8+m@'m#]bYm8(7a!hrS`RlDfIli/VKK1af,J3O-eL2V[;3Kd%g$1i=e@*X@`7Yacg&oa0/iE`W@p'a'JC1aDM_&j\FZRos=._TSn]jLF+nL].LmBn66G41ni@\-_+jF1BlSa1JMtQ>G7aeSGepY-4%(P>()gU4Dia)jmK-L$<@Xb/f_,Yk>Dk`L.[d=S$rZ'cKCSlp)E+"#['7&enX@aU.R5,N!PJ+5p@RX9J0,qkI\26#*3VIPh=Gj(<G%g;1@j`NfsO"/EAUNuIu[4R1.%*=jGX'Hj:8Hc?)9?n0naX>4.+4I#50`d"jD<m:q.!dt/`'Qpo>R)ntW@\4S^("jDc/ldQ(_Ua^F%]miB:W?MMSIsT/Z;BCr%gTU*WH2>oXUqh.,bTX=Q8#3]ahnN[`()W/Xg[28biiEb1M150+@2B:"q(e+*He>HO>K>+eE^le6^HSlY%AAnC"7VdL%_i(X8I3c/mEJVi.,AYkT4,pnCmhUCWXNm7E1c%sL^T'A=@h;M^r]M1tAQJ/B(:E*Y(u51'<_+dM:?-o2W32^(`_en!%g1;1]me8MYs-tPL8*4]cR%N6kZ=@]R"@h9sYo`"e5mXCm0e*j3r:2j["X^"55JLCb,feUi@MtHn4N%58>o&';Z%$XOq/oa(`a6>0%OAX'6d9k)BE%^_bX_Q/)L?uf&OVKuCRp#?DV3ZF<AH[W1kf(o+r446`1WsntEs1D';W6r0A^(^FWkU:B7Y?>50?DRc7lQ4>`X3[:%F*@CHm]V?_o4MZ"3m:&XU7q`;1.q!]aF.KC.?MQZc\V;r<pL8a8NEDXA$j8H'22;q),mEKe7X5=bdI`)J@8SNEq22UCett9qTNqG%7m<AO*(KYe67)i]9KQJZWQY3mZK2FFBrH>j'TC_n>/2QCc>6gVki+e3FXr<BjYN@OPt\c[fj(G^U`4YqDJZI1CK'n3K_T-MSRm,W%rO[2gm[pSSA\ZJ*RbKfkaI=:<`b=7^WI.nT`PuqIlmL:hQ?-^<*<XT+dffW/@P7(oN,=O@^;+?"\a/%=NNp\ICq@<*auT`^cI9i_%hp.1(3`p$)ZiaddZ?O,u=!-*0+(1PCG$u(J?ke6+k,tNtFKAWTH>437UOr\Co?N@)@Oi*P8bN7k72sl\Ou_[]@p>,_`9&-)ga4c/%Ing=Drn!<@F2RYm;@VtCeJt%k%.#L\2E!d_:'4Z0p:)@A`HBn\(H,(U@:IK0eROKE".JDh0VA*ZeD>>7#+^*c6$@!ra#r&&C(3+6%cO_-2M'n&<7@3FRoOLbnkE2l-RTQM&47s!%eltNU$aX^;D0n`P#>Au=[r4Be3\CM.D-OIQ(L'B9\qX#lZ]epoFW-p68?lTQr:Cf#%B*Knb4GtPd+4=Us@g/V\)qo0[4+g!c)1C31eSP_$a>1j#c&UB/EFV;PlX1-V#KCI9`5kP?QDR*g3N$M"O*32ZMjF==Em51S8c_h&%[M12SEG*Ob[Xb?](KY5(&U^GHhUIl$T;n2EDiF'I_:4f'ITp\Fa#Ge7LMX]k_SOY>@[gd[]!BY`2"&>!hWH\af+sXsB4Nr!/=$'^%g`nXspn$-LZtX^57[OYPm\4F-[uGNQb\[m@/YdT$oY_N'$t\c.QKT;")eE[3jk$+UBd$E`Z/T0/3p`@Rj%L=#<pcH!B'ejmf!HmO%RBbL&=P$#&B?'^kN_sSBDsYlgGH`Ve^,m"+K;:3!66tfo(K@A.iZoog_?SI3P%8WD;26?.R/IQEZ;6D]pG0md=Ujj&+`H;d26,pa%]J5E]auEHkMmtI$N!&BH;06:$iA'B>cfmfkQN'>l/XY"^%=ZSR=<i>)W@*+B4Gu7X%ZK6(1(",[3;C?MH7?`<Vr^ii`Y"%Fn`lA1%Q#Y_J7Zgkd$a?63\MSUZTI^Fgrl2<r:<rJkmO2jJe71)q11lQ(d</lSb.m#E98_AiZ'ATantm2+DG1]@$hPK_M<)[*$Ti\':B-9D%lnY(e3:5"III'?f_T#pGDnl8"^\mg'rm/@XO+d3DmnnuQF'+M'C&d5nrXJ+$Q!'q=2YIYQ?gN?(I?'Ir$tV@lFp*8WI>fNMgMd,c%roAS./c>U_J,^VjoC5%q)ahH[+7;I*\F<jS)o)Cps699-rU7N"e%bj9eqZ!h@9p9;Z)lEhr>%)c(a#mW6c]+3%dE&:[_H(krM9pt%mreMIa8B::TFg"Jqoct6?RBL0Kqi,UV.9KXV%F(44mjs>F+9$6:Q(=d?TR?L;FUecmFNA"IgNrlAt+-QMn-V#dl5c-([Ea3OT3Kg%Im`WWs5FL`^\m[^jSn^'hN7c\5CZ&g0E:#@q7lk!2rsu/0A_ffbP1=P5K7'lp]!B@68:k^&C,]WP?gC>GL](l>eKUuMVT@,[f*&9%:B-ZEq7iH'e,AB;gL&\#oRAlhs3(4!h-VeCrM@2&s-JrF^RVLVrT.MC?eXi<IlWqsbP=3tl^H&tje'71oYPDDTAG\0b<LJDmP"V"%%Jdd:o/Gb0nh8j]s3!WV6gcW-iXP^ur:;l.rph`!OS_Z__>j3,$t#8*T!@rQnGcnk[p7Ma#f$E*s!>N<s8HAS$Q.T#pK)nH!SK^2%h]3XlI;iM=5jQSmkInA)-Lt?#M;Q5B+7ZE3li7!B`.oAGr(`,1%E8:_7-d%fPpc8A9ChQOZiA+8HuJ)Z[u;XL0lK!0RCe[#%KCgW%o90#us6;hS,!Tu+%iH?<6W<p-:$1m)FMik=4"na+^^pGildE_d&GC0IU<;5&>g2$H]_9;CC0gf@IeY!fQQN^-LNJqZAO#`$F162$%jhmjafB#6TL];pJ6/Q8lHEg'%.ZII+h&0BTZE?<p^K?bNs.B6scu'@TEIW'iOS_sjF.$!M@HV!.Et7J5#@nVdBq0>n]F<7]i*G#u%KQP/OY8+/V\:L<p"]_\57*\4sBgYU1M8[4P`Nb9I",MHn88<Y0K`THd0dlG0G\MDsc@rs:GqFE"n]p:)nC4mc@>MutMIq*pKe*UU%Al0Nj!Su47C*''GH4Zoq>m]srml.]C,VY#H`pCh*0nmC<`qU/K=p(-5i0^l'FB]qWR6Vh.9\QLmN=<sRf_=1@m+O#hi9QZ][5fHq%'#.+D:2\[Xqe.E[B%If?1[XSPm+N'uFSe?Qd"8Ku.S8Z/2eG]ii;SUXB!8LNm<WtgCMT03l$a`*@bE\Xl'`Ca@JP7s6YDkCfR1'"%;b0)G&gR?Q<OR(c0jFIBF:@i%c"jWq,l'.aD>S[ZdU#%AR6;Ld\>Q63R4VF(`n]UtUkuBaqC8&>mu/>PApB+'+[qIGFWk@-@qs)?%jn:^5)C.`j(Zqm^>20s5"Z*57eDl/O,=P=7*WEMe/)$XR2!I1G^.\Tn?tPl[QHXmf-BZFi@iZLj6YCui@p'f(p``tjoUd'`[E>aj%0j_)Y<l)dZO]*=M5:%KT2D>^'`n1GS?k.;tn]Eg>)GCd#DN&(l6^,`_%srM@*IY\g.5Nn@mfa2S>/!ZkIW*P5Oarn'Cp"N$BQC^=%\+WLj\M9)I"6CBj%2J7g$msZ>2jS3<AGp6$b3%j(PhT%f/8?.EXD<-`DYi/08fQa3o#"7i4l1*n?H`'3+!qk.?kU),Da^m3b*CWb%LcNA?+FRkfGu5XWN:^\E\`>t?.'TJ2/$gl?>&Ea(b9SlC?S>!9:ZqdpT4!V]8sYH.%\<#LM5LNF72sRo?(!RnkJh`cd!hU1+nKu@%K[B:Tc1NO,H0enh<&\sc>pQOm6WMm.D6NCc_4K#WCi0IdB?g+lCjVl;IrA[>/^"!/Q(b6W2#LmK.N#a#WW!qMkJ`"GB]t'uL0^ju%99Dn/Phh^;mJL6pL!mBq``OT)A=.,Q?RB(%<;k0R#Hl+og6JoY0?BC--X>?;G%gd))k6RW,f][HXd-.SR`lR"2e3:Bo0@BpZM*X#%LN/f#PUj'ZOi`sKcKr)PZt)g22Qt(Za?%%O$o8Xc?9">B`oa&<KZ"g6qb2b.V6[G$e!7CXOfA"Z;TF#8;<H3PTK4ek)jnRg5>76[%gfd.6_<o?G`dJV62V`Dnr+,EQW!D=Ac$M_gAGi/;(oj!bQF*"VLW,CajTDPH`%R;\1N)G%XRn9rQ0BFne5IGJ`"ORD"^90H1ZJcH%et:a#N!EsB=IT(pWTR"'N=SZCcYOZd?mV^,E`[Fd:qj2[-S1_a0Zb0fSd^IHFaR>.U[K^eC75j>bSHfCM\foB&[U69,!%Gb.^Rl%%g^n6*rI&)JL0Z-Cbao3spIXVlCn1XUQs9Koej"(-YX\-+en`4MeTaHGq`lD#G%L9nUk<%"bhWTJfB@b]akX:,S!2^]]GF6E)u7Wm%BK@&T[chfn8#@j<-F7W]*O.?Q+Ai>pFgXkU^MJk;&"#2Y7;AaF-M>UFRURCAQ=I=)MO\1!c:Q"T9VP%KRE]3+JRBZ3X%mun(^q:Q%^l8>2P^V,3Be,2Q<UE<b<eHpVbq^mlldcdrb![p<,eA+&g)+m&,8+*IBQd$9>mMnPr!6-]-3qe`2/VLpAKFt*CY8]!0dN@qDMs5N%bUP/`3jND[#t1m]2Ok@lhLJ13q3dr20t0s!@&tP'CP<"\Pb?nNVkh:^6FTjqCgK31n`km$Ba7bia_i&E3hL9QOLI$`ZZ/&:N._aA%[2@dG2PZ+"+<OD=)XE.P/8/s-0H!udmnBYGH7"iSPiX6@S"X=?50QJ@j0#D0o#'TW3S&<eLU(5T^Zml!j25[m1)?Y+);f6Gj2PhY%1>-Hq<IR4#Me%-kZCL%3YGqYO=Otl6?o?("L,7n)4%"/>A?Q8R4@<<KZCoarYJGt)0-3\G8DTuV3U0.E<Z`^3b&kr-@`b'+J`Wes%q&@))/dnm=`oaRGCq;"0g3Cgfd)23<0LX_a:V.`<UY5@j/">/-@?thFr[OM;VCS-[S:1f/cfPS-MD'Z6UD!naV38#UI7cc.]%h4[%D?6sW6bKWLj<CW!;V`5a9\l4R@-MsbQ'j<om7XWi6j^Ne,<G,?'!BGhk0%F=T@f=%YqDG))*U'kQbnT\5V\f1PKZ<@o$5H)Eg/#H%mE90*(E5=M,N]l@HstQGlG4mYcAX4KYLNQJ45u(YPqni9?'r6f@@710Al"`NSJ,l+b\X*g]Q9g6T,Et9anH]74!K$(#sQ""05U"]%'EjFSY086*,?8W7FCe%UG_<t1c`goim9VlYWeTntXUbqjd57A:@d[EE#"Q50Gq\VHQ`$2M-_&G:b-7&3N3s%$4Z6MC.Jn1f=O"e]%$2hXCe-h`6)e&W6YAEVK`:DZs*uA/Y(6oW\'=KL]))HTTg5(HoDl@$oPMOCF,,GdJ@4&Q@e:r)\n1dJOXc;G8;B"*M/_2GQO)!fK%r3ShYG`FtH!tW5:`WT'G8dV,+qK*`.-<?d[(F$G4O,/3n,PkB^M17p0b6!oDaBqt@;MBrjO29]!-XPHPKTj/D3p`&!^n2K+bY$T*%&toiT:UMUsfFe]Ga-s/I"@KAMf8^,OW=HoM',QaDYF:"'&BF.VKTm)8ljMiQ%C#R<CfeXH7:<<69,3sD&k7#<.dY/7oE;8'3kjt:%D,JOY[0AD!Xn>%RL2lW6bR_\3L"VGr,b('<@I(aMGf<+t=([B]1)1UC5s;PuOl7EXn]L2UAiPccnSd/,gF!i-3l\nS4Cc!tLsb</%V@,ameBuAd6b7Emg6f<+!m8d3%K3"JC=YNdW&FJ@cAZ6Z^j=7bLK<Y$X4C94k(NG<F;#o_N]kQbnm=lFK;1BnW1[tL(hM$]A]r\i%1;nEKS=g5?j/<cK3EqA;;Ah-`BK?/j%)q9h[q@TJF(Xdc&,(IDrQ=91;@cp5Cu,O>s&?'qbatP:(SqW\-(9KfF#-l;RU>]YR<`.!%<*)9^_VDO./\(,3fpssAjW6?;+0/PYh3lN!HB7r(g6Koon!$9HP\di5:p)WSg":FW`R:pHj1aT'AXii#DKHO]B,55.U+A>LG@cdd%?J2t)`+bgS5D<V=BudDPc#p226FN?EH%ci/1[Ih\2De>:9SJV`-_AjHR0kA:YqJ#]M1YS-=s\@1/-\6fgX!V1@-<YPqj3_RoWll9%\EQG?:#uQcF&hR0W$pqa=U[g4#'4)t1/K6H^+r&":PrF\$GBGB=*PmE44V#OeoEVAg/G_eC3Ni8MT$uTb9+Y\JPd'X6n1ZqXl7pE%GK+/"0aB/Zd2oHN]pkbM5:<5_JSa(d`idBj.MZClCWk7f'lIlI.2/\:6.]NmYLYnIF:#Q-$&dM$F^nE%Nko1kAUhZtjZ6-0mKm`g%$7>FBYf3r[*$)&YgTRVR]J,?MO-8E,Ta4TPG+rJf-YA;D%p-bj&Q'/anJUdh-.[P4AFk!QK\!XeGL$Hm9\Q,`Z+2Ch\'Xj!F6om]%T`n.X"'8eD#g[N%Ft^&EOnDG/S]i*N-l)\ER4QZ/X&Kod;-7<ff/(%G69cs*ZT1lkA":13VSX!`&=sGWp*rTffMAG6KdTeH4ua=Z%/LHjB=o#R3f\+.XR'AK5]]-h0<RHmJ0ej<S&g2,Dc!j<rP_@_&f)Z\'f'P4b&hP*nE`2&6Zc_-j5U/,9ff3'eZ!tBuA*I;Q:eAB'%[XP\_o5n!3HBn!,ZXgaiUZChYPu*tq[kWn/#,AU<D<16,38ts[G@kA\2G>oGf1tIW@nbG2J2k"U-s*upfEHM0/b*PqdL8V)bEsie%O]I]_itcQh]g>TO7-jHgGj1-4Le"c=U'?hAlY\klVo$fa@=DoS]k=cE0;BLolg#G+:+oN"o8GYA),/<&J<@[mmZ&K<qn'u:T8P&%%O(dBSU_J$6YY`eO$p\R`b0&tjYo%YqShN$jK/?fA=3&lnnhQK`@`IWJk1M7RoN;i=[eg\#@tRr=Q.`CgkZ_D1=a)Mtldd'`SoKJr%(sUfQ!s1Dn#7lQKWHm68>(C*BZrGAMR:9B*1AYR/7]ZAS.^]dXF=OG6<qH$D.V!@Z66Gc`E<n!1L%^A^'\Cg:(),D7-96Ot.%nn&%?<^,hT:!6WC'**PLLZkD!2eoAKlN8bPdLH-.!sH9RnOU3'<-X#rDoIJSs^Mp10V$%)LOWT]Q^b\7Q\$3ZViY@TJlCh66iZq>)GBK%&Cfo,Zhj0MC1[di\Ji>O`P>d6bWLVg;=`#jpX#Pr'[gq35P9YLDY@0(O.P&%mgl]QBMWGN4%uTEft<T$[iDTq*b(L2m[ht6\L%D6%onL[Br?=ke1GeV1FoIA'+83\i>:sSgLt!KKN-ZV(7arhN,4e+8Cc[nYbad%Y"pq&2ft95i4?at$O_=ggLuqW)PFj5b<p:>i,DI_<%.h#"9bP!8FZetnb8=%)nEmQTM@%agD%-F0u`]dQ]Z+?YVSlp.='e#o=.sn;Y&"kBuO*"gLRY/Q`%n5[uk,ut9<8CX<R=.q,geejc%dB@1;[fk^H)Z0(c<coBOCrHMs?;VY'_^eeWU(qJ8J]&0Y_A@h9<K"I4(rim`4X;:nOCu2.[U]\#XaZ\7(88%2()(Ye0R-WV>+hh&%;#poO"4tgQ>N3dfk_RfNr-B>ug1h9PkA7kd5/)sk4_f##Ug(Zrn<7"f^JtrJAO^MQX#$(G2*!-el`VB9-8&Y7F6527Qc6OIjIdhi%/`D]k]"GBDIJ%$8<cR`D-a6?Xnu,R&SS"0A_CR2--UZg].7pX=VBX7/e>:,j9g"M[b1)*#LYD!aQ%s/,Bac6AXRj4c`gM'Zmm6\#%<-iaR&)k^+%S6\"TmC-M#H**O:q\RVrJXI&..,1>[=a1,(H1_n:p+,l4^3Ca=5=d>Ao!)M+u*K]RX/R]haJKbgH/U*6/S;0V?SU"%'9\rgSs=,YWaqBsTha"WA.&RSPsEG@>E-l8*(sRcYs#$_Mg[\:>;K..HuMM(=YD>l`""K/C#Q:jd^WDKa_EJ-X&csA>/&4DePQ/h%SoSg3WIhVs$?oJ)THHjSjVPr![p\JO8(1aYLl:5"d1,_'Q2DF6k`5*$Qhd1'X3I>9\:#!$s+OVDf?5#T9f#;`1J9aoM6\4EQKW\i%b`^4XVQq:M@$Vp[(@u&FqF2L/[kX,Cfr_4:(E[cq4*u&ViSUL%PfeHsm8Q+*=bnQ.HT'PAF;!Vhc0_&rp*1GR4d:ltH/A72L,P2G%>PKrph^E&74*r8Q/r&FY[JB^sRU`\"-l)]=61XRh-qb!UO/`YIXgAt1_1c^9F"5ZT92cn+1f!FSW*6TX=W5Qa4keSf)rTsW/WB&q%cE[36<AV#<mlDdY9U4]WWU+%\dZK08@:Uc)l;_07/SJEuABQN2ChAX$W(s,/a:;k;R`SU%/^!A$;lHtq]!JXOd:QftCpVhS-Fq.8%r]L]8qlMsuEjrQ.g9ThtD%UsR^8e>uA;"M,^S$9_dgi1iAar"Z0=(4I'^;S?muE.Eg^sUQ,VW-6q?>4!6rZ5&_:=lFhXWX52L8B$%Ht)0o1J@O4/RO"ePr1Ul;;YHui;'G2b'5>9Nspo:RL199#[`tt`llkp]s&,l?OY#",XPk*4n!p8E$6P5#+El(rae6RYc[Fd(qiqP%9IfLr]lu<9bbPN5fu+rHX9TCi.c_s\RqH:(WC^12H%fYrGte49\'[!,63Kq+Ke&)TYA*bi-C_F,=O]YcAPKa(>aQ8iTjG%pMio.$%+"!9%?j.3HbD"n:2O(#R`#3PI.G,'eT%MNb7"&4]M4R/,gpAdG('#:t7,Rrf^CFsZEBlM:kg)c<B8iB/TF,DZbb+nj)Sg"*H"15=%J56S@/CZD-;,^X(cu![[`or"Ea.uSl%@KH\Aac$jYKUGV0?a;\*nHFc7*XU6PC2[_VWR?$e\M(LLjt.0b>d\4p?p^`AWcQJASV6O%fOI=ohaPO89Tlt^.Vi#1C+AjtAXjYIVWR/t7ESQYq`a8!V"^.K2JTt1Js;g$2L=gn<n.1AcNE&qpbF^$Tm>l>5nk#k'm`?n^]5<"%f:BTq,I=h4PMo>!SDp*a9B5o!Nr@,e:0n+jYsc!lBKfJ8ru>+[AbqnCDHBJEi"'7+oWf=:L;CYd+GLWH=L!3b$r_Zkm>A9UAiY:Y%Ic7\co7f"I^J_HiI#O$Thf*.4-Z+Bna:a3!XD&=M0W9kfB2-saoR"3Yl(#$uS+d!?0(psaZ,Z1Y]$@muTXdbP8o`0n/pl4'AKOs-%V6ScjlmdU*XK'YM2S,a()]LiM9_Y.(s$dCo4Q=AVEF5g%[HP8qndX9CTT=RZGO,ip(!qf$B^uq2G%K@J#Y[PZ8LfM=LS2Q<oY'NH%_o:2u5Z.1;G+Rud6I.EBg7p'B`->j!lOC[F0BL'J9EFI=c?tWgG0%Z2UDCKsdJ(RqVC)_u(`9N?_\9ip(:+oMVR#!E9bIn45D:&_%.HHlCTuFbcMeUmE3[G\s6"1[4-A/4\anXsB'1GC2Q"+D48n`,oBb"@a#S_S(ABND^g7pH%@:5.Z/e%TEI`J[-V4l:WBPaad*EELl%*j8#?a3_S[c.KfM8n1k:c#IAp0*[Wn?V[MB/C/V!O@8bMWY9#l0374_DFbta<:t@tAG='sS?\(D448's2Oi=0:nPY31!N470T!->%f:@m]()t/Bn4pq;=nmRq$^U(A0PW#9;qWMU:*fd:87\Y7&9H&96`Up8Z`6&AVP)SI:W.,ub-Z@k_DnK,m&X>0"AHErTZDaA>o1D/%Go\8ko0q@S-D\]IaPP$8>>TT92>28]JUic5>pu.)$7=dt?PCeDCH'h6rG,=2SY[E!h[nr/l:>HU9@A1HAbPm4Tmqh-@`D7kZ4\VC%S`eg>kgdLNh:7_k;\d`S^-9k<Odc1D4<84+9F%G(2PVusW]O^#%V>4UJ47agodjkkhn,j9<-P3+eR.Xpr/F!.lgMftH-];n_u=>(%0N:R*`o9[U/f9'--EH9P:H6fk*4po3XB>!OQjaW3MbsZ:@bIcm_$]1>?r&A"B?BEY_&A3eYjpq1FR68p3++L8'J/Jsc,C<N+b9e;%-E>s\DWJdje:o\?$R]8\Q6`b4Ys:7p]CV25gbt.=0iX<8A#_.,cGA5e1WA4oA=+c?W1jkua3Y2e%qLX/HV._662/]77Ak)T;jBXR%3kao3=jId9<>i`O_7)<?KS[qJ6*R`Fh-`$g(7VE7^f4rsA.A?efXN-aa4c`[CgNR3$fYu7Z'b=Lq/2D](*XdZ7c7DUL/bL@^i.uT%F?kE!N9tKD-EB1S'eJY^;@W'X=1_S,Zb8*?:c]n[4AmJG1;<oH'bH4pc$td*cB7H1RKs!+9]i*e/6N#pR#E3-%V7)R@r<Y1q+ml?%k^T>27\pb6@=1:pakF*ZiEm;<_gb7AFfQ2VP7`s:QE)JBn>8f2[0qmE'J`Z&r4b0n1ZK46.rh$S]/0):fJ)XsA.GS&/=1]=<$5cL%!NHHDh'PL;P\O]qlP;]tKV>4i@'Hct%]ha5%$brb'euQV@CVi<ac<o+e(@\N4m)?>9EM'0r_=13V^O.Jjq)m05.tfZf0WJu$>$4c%La/GQn75/qKW<U4gJl/2Q:d#+"Dh)9Gto'UG8ZLB$;Q`VbS4C-aXbaQj,q+#j=WojM6:f+-AsUh?CLNS9]^[2;mq$B],EJ3V*3B9%XZOOM@*oZ@N6U:rZq7H*!RGSY&;2,f&l4H0<fGL)R=/N8g-D'S@Img,"1l6[a6']3b&$g,4L5dA4@51`ikC_+,KDc_=.'>2Z(b4j%E9L<p1QfiHW.TadEn2B\%Yqc&S"=V!/sqN40mrZ@oh<Y*YXFU*(3nIDS)Gi<L;2G$Mq.W[ioEqR+0iqM^J%gS.?fnPlFmR=B4ZP8%31]9\M.?/eEU#P\2Mn!&1$;^!ZZ;eD7#j,sl55u"W25V3*<\qmd>h+OlpkVV\9=E?f>;"e(NlVlF_`"C5TG?G;PCn?0TOIS1:6UJ%fY"YarmPbXdc`lidCESK[e,:,V/>lI?HBMrjt1\_<R5>B94uSPSV`_r#^tXnlP^,A0b1omd(;ADbPl&9c(q'p%@mWKA#p54=bih\%ctaiH._Sku[H<c&2D:&Yf6q.P-TPsfe![<cH^W)h]eN`jf7J>$/+S4,h-[Lj'K37=XF:,RTlX@TCu37[dAppB*c,LOPT-)"27,f0%B.0Yuf'f4=s0B]H'F1GkpC$,R!##2?)aH^nBe__9YeSBH&3_o$LOiHJ&t`=X]Lsqm%<uA_6i6>_nGXDSS":HsL)7gB9tu1PTq)\0%Z9!l,NM$NW:Wlh*Zr7C#F<A0#U>9=p`o(c/Q?;i-*l%!/.S4\[5-.kYaItW?W?;J`6i"[_[9<CXh:TB,XJXgn&5HuKU>_$s+=kMV%HKpdKf2J]:Kbn8A:P&DWpFC<Oef)Gkbr^44F"-4nL:.;459ZR?IqJ-1^(u3Iig%bW7^OSo$d0GF;-"pbnC%4j6UbX1"8-=o?KZ\t%-B6IGNY,7u]?]>;eQM'C*"[1#9.`G`jfmID"(O$c+SZX%%//a8ZOg=)3ZM9i/K-nF9U^M^P:SN?\=W5%VO<^CURO-BU0>3B6S6Fs%V92@-%g7$:#NJ)0kB^_%G:S;Ti/!7+liK`_S>MV:F((eJb5KL//P_R2h=*'20CO\d`-9gf?ZB>5h8tR#cg\s@+_n5aZY*lc;?KF"%3>=@(>uU67M-nh4)cmfMRO0n+$K[&^(`PDkq>aj!MW9F:H!^64=thgLB?^sN<-b[8f:pB\+''qI=EJo@@Ya'b,idT/osJOHp5RbW%;\>'u/$PWS74<SG8Q+N,fiO*34$A_P/.XTZ0pG1(j>4-kU:+D>>IXMq=Tb[]A-2Uefbmd%O*KBD'i"]2j2nup6-k.[H@k\J5-]cI%AGThMhpjea?]AZC<p9+W#YIKHc-mK6%N]F-k!*"UP#nk+:#Fl-/6!_AY%kFu4'Iu*NL?CMZgWJT7Q[hE'+Vi&k7Opi"&Q6?\W2[#%c"a3Ub;,X>%:OrE[TiILSub)D*I;5XIqt*UN9V%B%l)*FAjtjFpqh.1Gr?MKBL25^cR`9R/252Qe.'sJQ^+@1M\\-fo>Xs5J&f_X%L]>@`Yb)Zf^WL)Hr-F[9;ftE\T%ZPEQA9of%DdWYY0=V)b_YOI?(%6+/S]";RB7.%+^.][aNh8\1o^Gn[&k:/6ln#&%c<"K5mg\*%DO-Vh*>Nj/:#-#rH5_3E=efG4Z$;\YPlidAUVXK:.<T*sI^Enn&>lU]]"V%Z)(c`[MH1nUR#0l.LOSSkAg4r(<=2]^:iG%1Ud".h%AnaYJ<EiM]R"["o2'I9XFOdim\`sL?l:eKZX_UtVNS1/ajNJ4\gG!R>L!@['RXos#DOKG/B"uJ%CYEdm4_qG(ji.Yf,Aig<3O?7"%i8ZHO_Ua`6B<JtL_Of"841&h^`p=B&O-Tck[G3Q:hu!#g'!Y-RGK>^D'WXAm^+qc50LAFoesY3"KX"^o=i9/]^<Fm<QUtZ_NL>[Q%K?:Tsa^?'Wa*S=DhN"Q!#QlbpSaD,gBC&q*ep&X5>V)+]G,ul8#(JDWAU7UUn\hB`oOq-Akq\/K?)C,UJnJ[>^IOK>93q&21n9nl%AcMd@VW%/X@LJbZc*6HS7+@W-^of'-.#7@3+?V<JId]'KQWMK[<DEr0(`t]+UcGdWBZS<"\R#N\%P(r;]UL9\@Ee-Dl^V&rH;)#R%[8=T]q7"n(dbPV.07k-:_sk?TnFV[`-dk'iW\1APDYUpMjIM\6:APsPF(UT&$8r_84gGh"kedVhSQSi4=<AkEN^uK9b3GL,q#ac%%VU#9-B4`<XnM&JW:+4F>5kHgD,bNc%mjf9^Pg>:;UuS_ujTDM$;$*5>L$D?\)8Tr<s(&<6*lqsUEb0:/#aW#KAj(,;,1DQ)CgJ&4%9A-Sgd%nDma6#N4VC<V7>_-FjaV.m:QRk_]/\>NaPpK(&4u8,WO)2)C'3eZJV,\G'4L:i'r/iQfGsF-PeQ=[^oneqPlqTq]T:*oi%'p1>1`?rpT1(QjZXJ7SHSh^Y*P:,p7,<m<J1XA'r?qaii0m@J?J]JM2?`c5DF\_th)!e?@R,L0jH>JO_FC:&CcFFu8isZGPc#CBN%/_3Uj*WCuIKC=:FPt7p4\To3*bp"![\"4J<2Sg5+4Yt8h*R3ZnRB[b;(hM6Sc&1c[9OQ#jL!eR1`\6ql/Y\(c@EuW6<Dsi7IV,)l%!1).gI:euu!2f>FJEE'sTO(!sZ<5%bP9154@3+usAJKW$)P9/:G1lu>R?c>Nep/LVA-NsELmZq!eADKL;WH!R6g4JBX9Rh2fE;F1%X6U_e:5D!$9lRlr29nm"J`VY14mae$_p6UZVe7d4>Wti&CW*6#3a!ua]kfD1Tj^N/YMcbHQAr:3X]/Vr3Q(QHk+*2:><+G4AFqS3%=KAE`j[#C1`7S&qXK%GC"VoA;`^8i].lRG$`6b#dkbGD;l,MS4.Zd7%Il0chp19;>b/!St'$C!Bq%9hXkf2bo=)Cd:qeR:B?T]n!%YtZ?\%*)C?A1WD%F&+\@#m&1.:j7(WE,7F6!3;g4/!CqWAQ"Sh@NqX%PE6ZLbQOXgd\`18>4uuFX`H.fs6`n9gR%/ThX+qbc+E9m%HFY_Ho)pmbs")<'OCq/bNhse-TIkOo$,)Lu1)oBUAFi5"D(g6J75HZ_0cS2G$uID.C(])haeVJp?e27\i%rOC/5l+/ZWe:Y'8b"n%rKtFT1V9+SAF+%XM'8Ggs%[B:)bfZ[(+F.jYi<CfLcr:;CWc#DnWRC<FU,_19iDf%a]`rU=1^q%ccf^48=I&_gHtY>B9L?2N8b%'%:JXj6MDbU!s#Gh5@j-7<)l:V?A#&%u-sBW)m-.jF9EOBb=bA%[2QtBj6/#F<kL4T)7=upG2P7)7OHLQPX+Eq1\R*rod5AUcU8fG;%ZtlfcNi;2g@_4>gd[H#TNC=9[]5',tkS[aYeVfDkNdAn)%eMR+:A7$$nnW[s/:=U2=ej&NeiFVSgMr63N-lM'-1)$?`oI!@f\Zr1%_E?i2B@!jPbKc$>r=CS0Vc_'(`fPg"_'iM$f]SkE>6!5*&+UTTG;_#HkJZ#H82>s5mS?nA_D??GPcWo5qnlE@9X[#[RAiDN*7c(8%f8mRV9Dpk*G*`FQ(.#A\[TKt0#=ta&k&00uj:H[l"!pSF3jGOe?4<,]H:1-F<%sp=-O*GF3Wr?t`uOF9P=;TcP*GX^3JAh=Y=4!X%-R8V$mTpGU]F]E@'Q$snp*Z;EPgnT;@j0*4Vkj+0P0L!ln\c*=5/K8Gf\@'AdiNGODC)?qpP?%ZP;+E57N8kBZ-lW&8%Aj.aoSb>%:C=0aYB2>'c]nm_h^mL!qon3U(Q/To,N:6c.@VjHo-HCTf=1#^K/7RU;Di`BAjoo/JPfaE=gMHPm*GA65/]cb*BC(CTs-R6cE[GF%YW=QM\WP0lh42$6okodoSQ$eeDRJ"FS(DiNk]12)?8,V4gsCF(P]c,9ATOQ"$+1FNHJH\YR.es(ApPGsH%LJE#A1PQP4:m!b3XXI%L"9YkP%/2o4.B5m82:](?._3iPKX,D(Zqm>Un<sfXH]XOpEDD@ig%c$P9E-Ob&"2C%.P3:Ao!GoS]GO;5M:@L8Z):405GZNgX\Un%NlHFlb][/^3r%sZCu_6*7O,*LAfnn[n$:6<\ZttBLuQAmRSQf1IH@8c7j_qHWq&j4ng?4bPDXPD5-lP`:^]9IHA6'UMP?3>;tmNF%eh\Aik^5XLpIj*5N`);!o9G^H8Q?`%X5^+]4jP2:;'pFXV6Jl&eGNlX/On7"Ak$dHFt)0Je>c0@/Cht81OCreq=]#1>C0jZ;Gl;G%!S_!f*#s#qf!M/O=$V19T$<PcX-CSVX_2^?1$kdg.l6PmV7L/8.iat\^MB_qh'OTk4la160\4R?)$_W_Kn#S(Zl5U/(%!=uh(Yjg%#<jj=H8*pIVAnNr39d3#8%l,e57Tg_St'[HG-s/(as8ja(WK=7?o$*n`bL]DBOESRmD_,X"^O<&B[iGMCLSD,63\f/S<sdm!\0bt%c@oF@k3USN.L-u.F^lsP6JmP`O3Rd26j\[DCh"/jbt=S'I7`SjW"Y*CPT<H+f#EkF5HpmL.DUgP,b8%9O5#T2FRU^EN&[A`TFP2u%6W*%GA:OJ.r;P%5Iuup^=t0<:LjsXR5H;;Q0h,*dQSY\rpa"%!bquS^1\ebQkAt6OX!(b7Cd(AO1+^A[Im>=60Z4''6Or?B&m3p-%RiZpJZ.V>Y1L!W`V*aJ&`10U<EplnR!@J;+`BiZ9-P8=mng*mob:q;`'!=_"ZBA0sQZ8\*Y#FIa58d@u%/&1(,\_!2HFPYckep<O%V+7-$!Y(FqY&_=aWi9Q;=X>'9Y0.VE)O:MI\OKrGqDi-CUtLT9c&.i?2C?[DCgK1S-Ri0]DkT-8/SL_3,ojgMSlt+Y6UOr?;CPs2%2!4m5qdN*.>-;50O_LIC'8sT#BFg1U,=>1mBdUm?L*hJ%V/?Cb1g+@!(4a<HcrT1l=Zd3^4pqMu]5iEJ'1jRk?5R(pK[#?f(QFBI%R1HoB+4.YU>&r,\br\L_oQ4Qqg2^^AEuE_t[E-lkg)a]n1WO2^<48rfB>u9'@*EsY1Cc;DdoI#APF`'V_AeV\JiFt_Ht)SVTU4:c%jti\P;gku-d#sf8-YA,;7TFVXM,2=sUmNc;YDb?7@*Q!:2TF5jGAXfSn!VFIkpq&B`9+B8$^%$KXd)TQCNjCBb%s82&pRf-005S@%5Eo^l?ej7*`pT6BpBOo<-1gb<]X"[t)-Q.ePq/n=j,nJUhRG<^niBN!I1S!g0]U\EeZN6s)rG;!CDX1uc?L@G=2(bNG&sn@2-D<S%eLR-@(3?ULft<ZGBsT`VT<2iod[;]?-_o^(U[&a+hDisc0_f=c.Dq!RX]Wa`6=_;<`2ZkgB$C'Bm%\N/-L1Ia><3ac?.kk#WSte^%:APBrDQIkUm(kBu`#9@M(A#7`I0MnVRt8kmmMMP3&C1mJY+.eq1Rg=$kT`6bq,GUT[PODRKIBjd=#LkCW$Qk%VJqLWQYiuLBW3,A%,G<KIbc$2fU&XnNXDN+9Ki-;i2MRBo>k\%c3qD:Mm'2X\q8@Gfo@d>djB,Qu"tYrC/a-E!=(YT#BL-QFe.]/UJ'?oH1UE#c[$RE`%%">EC1RufuhK!?N@kH*Vc-S@tk0Fl[<fXdkN\N&*cHK7T0e7-"<i=8CLDPO7kqi:STOCCpX$!_Qk0/tu8-6,>i<*!N%jXq(l;(Be%Gpc^^:=KB0YQ@p/L?KjT!]4c>!tpqbR-U>c@Wn_dW:U2.Jed0#(p1A*UBq;dq^J'Q44fa1G"&F^V9Z???7f`qfZoFf/XWAcQ-XqY%OTo8jU_B5TFEqK-UU^gm7a2a.)9$5Xbnj&X&akUTPe6YaTCWQXaoUY%hq5U=C,s)t.352Z!N%FQh*,t;^$EM%!^(h]4#Y+]J2%4P%:);J!LD%7c&N^b_3RGPrN^<_SU@="M*Vol8_6P<F-jLkuD/]T2Z88B1.FWHo(WM"?jg"ZN,N<YM+I:W$)c[BF/I*qf,HTegfJn+g%Wbf1<B=5mMB`kdV*])k>U<V7H@71uM[PP7&%C9*sbhdtiOO94QZ)/+"Y\4g&lmNCa`83:[T7*qHEUo<%_s4-6ip)eY@Vh!1_Q6'a%Z`HO8^oW+d!HB_Jd&]Po0o7A.Rq4!4fb@_"/42ERM0a^J16faiabcQ:_:>'G(e$;!$V\j)Xr9"JW$dn4=(hoHE9,7,+p+5SP^Xf;%Q[i0bi`NUkpSRrkc$\=LUA@r1hE:=eVQpD*q@um#/,2AA`m]K9CBe:+d[<r?0?Ep_-L&ma@B%_.d>0qARKs'q`N@sLA()!c`DL*K%S=DC10j2l%F;B'A(lcuWB5=9%V*RU$NST2b^DWps`_P1jj$YKk8G9OMromd=qknr@mJ6^s$OZ?g$,8^qs.A3Kp&Fq!NB?L8UtOlP%^BJUIO+mSITr@Li:f'h)mYi_]".X?oh-#^]XTQ4KH<QjWVof28qKdJ%Y\9#r?]EU[K+i=X63,#FAb04N`b&]<A9H+\69a/.4u-b_%CK2IISTeSPo^F4cp+g_`]&R\[ir!;I_@s8&J`fGU[[igL)a#.l#4X(HQ,6)d<:4R/3gN"p`9^5Q^Kd[<D62>-[qcouA(3/iAUh6B%fW_=g>8m\)cr6!,VW/&8Uhu)]EB/\S9F$m$Cd%NVZ+kV#,k2p-s*.MKe?2=MjZm-4?l?nbO`;/dR3h70oBmo\UiBtIMus_*pL29-%5`/>$A5"a<1X7cbkQUN2/Feo=RhYtT47ca,13Y;PK/Y^W"^Udf\?bpHd'%N)ZFO#?+Y>;3^uj?<'d)hdHDl+9Q-]h-\tQY>\n5Q1%37bZ60M/o@ZWXU@f")$m%ZL(PTqUnMPq/>.)-u?-pp-$S]Nkmm@nQ"/;Cl[s(Ne*Xb=mIn6'A]I6\C>qUaorCBu#[?o6;iTH':)K%%2OGq.Z'"XBMmYU+C[E/O*\+iJ6eR:!1hfUOgOt%:A4+:hY+uVZa^]&bUjJHaB>7^J^%2E5G]"iQ.]B[Cu7@e(/It/[n[K\KOSP3%$MhiOp_[\3_q.`8Bb5U;ek250gO/p0ZO@bR4=OW?eT>!!pCi?a`X/+8PBZm7'O*;gVWpLA6!Lt-GqD(\ja(M0<hrf#]J=i@+\g/6%Q.`QTp*4W0kaCK""jIEa*`lt"2P`'0]eU'8%H:Nnq9%j-B]KooQg).UG:RVkp\na/L4-$*H>9j-ATOiV[VbrH*)67l:4rF$>0Pn0%F4Xl+6#'IZmq$0%dZ)q-=1A<%(g"^m,Q)SY[4giWs#M?OCK08AT_W+1Nih10Q0Dp"iPr*haUc6A52sRL]-3[-NrQ*C#TI7a0R)c.%^a=tm/LJrq[qjm]159aZ2HCaU3TM-b\\JdM-3e;5ZtDLs_<PEXJeR1<&(\cJ0/bYm%REP+T4Z!3fPG$t-I^_>;R/"r!\HE^_3Cu9%GIE78_jaT2D`b0H2A?.$"0l!$lr_fJ&6Q?%`0o:,FNO?bXKN]S+j26qj]$.h3rjfD)Lq`l9CYOO1)m;I3IfH!oD(!c6hRpK/]Nic%HioYo@sj\$\Q0JYEI+T+UfgkDq$AU%f8a;Z9A17;8n)1g=&u[a+B[s;?<P`C64qNgG*@khdcn9OX'@gs:#NY_`ir6c0I?1DR*5ca%_JCU84.`N0D$>`PG"9KD>f83Wq1e*P!b.n[M'6S2S0;:NO2`apI\VlWjU80To\EZOn(;G3!S2B;0="Ds%^K^u?B1EA;Jk^&cCif,%bG`6*a/n"K+agQkE\PSQbVepcHru9VY-!!#&F$FX`F^\PfW4\6"rbq8At`YOTTs&Mf`P`0-Wl=df!:N]A'?Y4HZr&q0[$$mW]F>Y%LmWAsefSter*\84]VdL=Qt^I<`gGHYIf;5o(f+2QQSFC=N)PCB(;"(B`XXikEV86mKXp=iUKY;,"(T&k`*E1;qNl3)0SGr;:T0UY%=a=UN>oaME1]&`Xq8l7ebH;,WKI^h6-gJZ#FFGERk((S7icnlffcBEZZKd]H_N;'n`XRdf<`)R7?!5^:rJ9uC_>5l-(j"NL@UQ/2%-\IN0dg\,/X;0D)\LV)1pNC+k-V<G9LG);8E3:S+E2HaXQaLM)$l96S?6RiLZZT&!of%8$DmP7cf4(??/2*MEee7\'Ob(7.b3$%H%^)l=WCorjooM$.1Q6$cDWR`TKdK:V8<;?PsFT@T"F]^j^l0Y.FL>8qjFU&MrNuj%5J$Ps=Kp8EO+lEI_oSJCoEgcNm:Ma>F]:<og%Z&q]ig9n/p8&)@2h*f%N#k?%sblXt0\R&FF?[.8]a!+>`0%P0..+in<j%3=l@<#\^aL\d+gXsk2+^hi\2Gm)AIbFU<A[5K0^,#CO%"R?eS9=:/XAK2*r0o8`P#$!bMQYDLETU9:CA?bll)loE;"I?C<I!`V.%7iMqD'B#5]/Pr!=joY"`iA1tJG$udF!mhjI:F2:d$+!H%6*hdu@eXN.f7M1,\5/;52T?=A@.-SM(RD3%0j#;KBJ+'Nk79(d,AkMh\J&BRB<]eZmi0I6-BG>]Af[\?X;)TRG@p9s;%V]s0YN[/%Og=ckm"nP#-)^]qfkR1Q.ZSr-4CaRfYSK7;Ps)W9Q8Fj4C]kX.H=G71oJB")e^MR(AW=`_V<?O@ggY'2AdjpCR;cS;j5OG]_GV-3%[\64(8P4;qRB;N2SN]`iHb_=2en2sW&AChQO-EMKWBmm7RTIXP@8HJqpb!OZ>4W,&e^`K`88D^P3[ug143s?NY-DJtegO!eMlCX'%:8a.cN1b_rEMnPqO^aO46/G[=?)cC.i\X*.)JZmgC_IT#HEbDH3dZ0_S?Wo.h"Fi;`ucjHdZLieI-=YO@>nS.Q"S);NF8OTFCk't%MIp,dbEB7S[9GpIq3irfgLtR\9&jaZ\%sJPc`B6/G7)!G<_0u-$J&2L;&P!HhN+(e#M+Z6\Z"1r:VO,[/_[t#Eb4iGGW?Z#qoQdg%7F\)t_CEEY3#W%M0RlS*3`d"_c<"&I>58=nVOUI3,?Qj)eT7pq5(WN1=gt>Biji.A7]+`QgDBN:m#GF1LZtQpJp1][SI,c7gdf"4%p7h^_/ZK>=%I#djmW2d4(-PV(<F4#(IL`Fop3@'G<'=`P5Hn":SqHA5\6-['5?6i<V!L.:W]dkC;JMVT[%=X_"mZd.<YEX)(p*>f%``N?Lefr>d3-0$YK;]+M]C-Ld'M1<4)/C9<VVOC&72Jmd*1Q%N@-KD.fslSQA!mn\qd!/9_4"N@0kQQ#8OcFE$0*']o+e4YN8tX^%Z<BYQ>0H<UR/@.(CC=4`A@dR`1MF`d2Qn]G+?$B=hFg.AQ#pU/foR?3gP*oK8?a/p%5IZ1@ZK>5AQ'iC%Ro^:$5Nh0;V;,![>qLO%'J,4kE(f`&EK%SD_$]I+Fk`qVh(uJ^"Db+L.f$@9$uSfQ'h\#$mZ!.H-S"2B%Fr%r7P=1@h3rD8g!gLQ=#i[8(<ZDmB3dQ0]P!At%*,/:hmV,klZE\.Ui*[72`Tk5t(9+;L,S*t!&24dS1#ugS,$LhrMA.$t\u9@6aOgiYU8Pq*HSU8I-ps)@>aVZmq(5>WCgn(qmF#BP%-8no(>aBrGm-2[T[HQqKg\r.U7?44%P!$`DIH@/6-u";_724PF@3(hq1=5QMH;s)i_Kr5sY!03aTp'00m`%!a.eQqj5jc/'4CaC+%fW2ZF$S.OL$s"%JJ!f[5efu->SX<#`e7*U%5Q3sE'GLu!aqF^fHWBE%7KJAL>2>(-8S;:>'VK*Y_;&FnYTnlZ9E-\[N"1S$8r&MJ%'-,t]E1iH,\p<0$\pYHOMhA#,4>M(&=/PO%VZM!LcV3emF@%=jO7]fMYus(hVE"paimA<sB:YXh.XOf/*tLO)Ssb"(ZcUP6-G=>V%jpGin],mLUWUqTP:f>\V$`FLa!QYe8"AH$dF7@&6:'_VN%i7.Q$,LY1ns(pLKgO:J"IV'goVY>3Af=`_QX[F`H:.9f.V7cD\Ym<9%/G[GULC*Yq`LiE:N7k1<PauI,Cfdjm7P0"mH9Q[VCEo:B1G`@t=k(Hf@&#lnle9u."=dnO(%O%5oZA#7B9YLnhpIk%0;k<3FC1DF%o1SEs4hDI2D6.H@Bk9uCjns]@Hd-$u?/-,iKqHR04-DbaYA>7__o/H7g)QSP+I8/-n4q2fe-;J`>keP9f/C:U;Qn=4V*,NO7q>C=%8]G1GJ]6cn.s]1*R:f$nB6No>/op-ud!dbiP6s$UY<g5n5$ImI(ga^uM'PAIN[mb%Td2q77b^mLe<5,VOL2+_G1UQ!NF=X4EFhbl%pp(`/ip!VG9T*L,DiFDZFtL]%M7ItqJR>$rG0D!ZR?TlZBlB`)6J=#sA+O7W'@P.fghk:5g6+cS6FuRa=`'a9PjIYO*QC0F-o+/b%AK&6P<i/MsEibm^AXrH5--+`N@3/OHnVLD.@K(VB0&mh)&P's^NXTGRe&8TgBSD&iYJ=]:X!fM:E?Bn.Fgt"TGME_K`TE;?p'7_,%:!<%-1E3#fZXn,9`4.Uo0VXAD(SB6AG;^h]K@Q,GV//_1`bo$hPgFKOfZ#oN2bH:0;eYj)M"6KL>bgADLI(ODm"e"\PgP(PqM>R:%`@BErf$&TG;rq;dX`LsKila":%se[VI0?NXbej4oK4qPnoa+(iqTPb%MD>P:1E0?]8kEh8".I[N5"m:H.&4^FZ_FQ;_+'.!mD>=#%>)\UE%jUqfL:2MhOq]PjZ88h&V=OnemtKH.8><cl^<Xro9p4[<]J<\AACQP04gMK@ddfbQ?Y=!>W!>rZBXP2d@biT&$L%q.h/&=Y%,5m6u2%-3H3mIfhNE(k(Q`64`YfI*@1as#"^&?A;oF=mg['*/WoS'QE)_=V_k(U',*)*2NSD=W4`_+s`bu(Jp[TRPX7t[O(_(@$j%Re`PgG2XQB@4nI=*ghk^kmtV/9C\9Oc/OLM?Z'HTDenOEX1<4Ti@!:HY\s_:$sP(UgrYf`+!A@R%?-#9/f6hm8q:RhN$KM%hHX?e%WiQ0US8jLu0];apEq:ZJh:6XO@L*+#h-ASEP+Gl>I:#tP?<G:+`&7n&m98/99eF8]QVdRMW@GoB+'TMpd2s^6N?`WGA6<`.RBM!;%Ub8aonHe66-?eWM06gklDa>47K]us5/D3]KNG0/HMP6uCX["]TU.Wco##BmHcUXDCdHEPNc]t'0<1uuQMYMco90FtQ4n4dJ+-ZKV%4l`i$HB*XR?W7GX$s&0d#d($Oi>tUZej\T@I'IBkkX-uO]"$nc8g[,q9tG"`KRM%CImI?$@p<"N1b8baRnsA7gNmZ;AEf`16sILO%P-BLR/4^R*@5K94i:k#h_[TX9#u7][nV+6Y72SaS3&e((`PU:',G6M4EkZ3D_^;]ZRUEKK?kIAK2TAoY@C.>\->6/-=h3eYBM:6U%]_!a1,Rdu.oAkeF.;9u#YoK<u@cB^S*t_]\K@-";1No>oMbVgq%9(=BBZ,Q1#oS!9h&<ATC7lNcQGT=;grZ`nep_g\5Nq^q0m>:!%88G#*VSD/#iq0rnm'I46p:u\c8H`k4rHoWW;>MU2CMrSa/oT/oc*Tnscu<US0_V+CRk)03=q"i5QR)o[7)PLB_q9JY9\e;[m'9UP%Nh`IW+bs&K-dN.%,SVC2GP:f``$4d=H7OhG[cgiX>?DJ$86OA;Wt]9T(G7;2jhktS0)i5#-C`[Z4YcJA-6>0(3`QInRV?kaq`J#G%c<%l!SZgJSAmph9HUt7[LSfSBBk8OTqBY)^5;K\5,7Ck[cj3>9Yt!Sq=P5.JA\g,(jXr@11JJ<F'="gh90.N*fh;lB'=!_a1h;W<%B::N--=WAT2bb.[9G<0-6u:q3c%MdIB#7@t>j.[LZs&Th$h^7[r(IoqXK##IfX57GT>-7Uftr=RY4AbfO`!"m,irg;ZQB(-BrN"C%jCFCF8O]5U+qVs6rhf:G@u9j_*PIVG]k)uE1\D.+d*j\#6WIc`b+,XSVET[i2!8Z#Ub`OC/D_TX80W2JAXu^;([i:YZX'a\<Qs8Q%h4UJ'>GP`2@qr(;,.8E$^]gi>fWZh]e7G7lICrut$38Hk^.$i%a5d(aqi*X)QZg/E,?`Qc5fYL@7>jW'q>CS(i3r"%r>o(L;V;Lh%ZR[`@RhsX:qj=T`<]hQBXrGBo,+/.f\&b+3s0-!)IDP>HP59SCQ;%-XIi5ipQ?^=&P<sKN<c=?e(SVaM.6C\?.U0TQ.T,7gB'5W4%_k,Pl9rui+B$Uf6%cu[FFiahi*keO4/<&C,Q?/&=hsFnGmTEA)6Q@,b-pbgHi54^(Lo6+gf]V6"r?X^nC^B<-E=AK6=B*)g2Su>G%Klp7q"/E4*AuSi[M?F2%4&2HSB5E,7ejQDgU4ulVFW[>V\$.-`N*rLi;+-#`Yp)><KuL29n5R_(eq,X!6<JBI_WZ+GUK3%J'.f*s%>;0e\@*'teO_#-ONMhY&2!L.2U7V-$KBt0Xba<>'Yq-bW@+:G)->i2hWs$4+;drc6/1a?c&X_cU%'/FtO,VX_`4-\U`,D#R70AB7%`=A;a'Mm8NR$lTe"_fM=ChTO!YpB8a_1o=s'GI#,OnGl,@V?dm`:J[;M?>cDPJjPf"_Y-B.CKg5\.$\gQM0nXX3q&GfZ;!';C0mp%G)_E_QQ+YaA"t;,Ss,.3W^:fE0X0Fr2%dj5BTj.S+KSP;oS3NE;:aaBLbEJ`?_CljJTT.B":HIM(DR71+/lH;8[r/BW'2A[4I<F\%,5n?kM<Ya0NHM`M]4TKmLIo8HHtWf$Z)Gr+0^4.J$q#$B3*'0;*T:HH4]1hDO\(dGZ@]Fb?ET<IW6shAnc:8`C:jX?T/G[i8@ZjJ%53LTkeYd^aj1'fZ)-\VZW'2Bqf6U\)e_OTNHo$)PeY_W+D[-_=;%OGEX)B#2qn;Oe6=p=#>s#HE^p1td+J:K9=gr2%9+A=>`JckA%Wt%G3<i()u_R`e97Hge4qT+-4$gUW^0Ki5LP.3YiY,Yu'V,G**5<ToJ[o+#q9Pc=n?)mVG$^l<AN`B(X"d=,W]rFQg_C4j^-7u#T%E]Af_0k,GL!eiQaGF@9[YW>/[Yp84"kaC98,Z[Fm\6c,Cjj<p>:fna/VL)?p)TSRa^4JqSkoS=jkh%<n`P>7%X5im"#<>pSL8'&p%cr_<__!Z>@Q8Q\`9Y+34ADbC;JK%W4BjBIhm>3RN2<=@;CcETbS=[D(*/c;gII61Mi#3I;d]m;fd`o53=<(W29,/cMKdBrg"(XhS%8XHBH66&):>66]&/<Gg`J&=!?6ta2>)d:)!,Hj6_%+P^Eo8!s/`>>*uq_jbSTT"3X9GE4V":B.;*Cb4p+;C+K-Z:oTQjc<#[#cC5%48NJS)m?U`"mlF%2JO7e[%_)I4,1#dTmYZrC>p=/7h7,fe3l&kPD?>9l3nFDq!gWTG%_%h?1!#5`eoTAhB.NXs)9te74K@/g?@i_%mNf`92(cAPhPCol$q4!Tn623nf?BPM@2&^=KuHpAVjA@1)0h[1e2nF64&oB(\cF3sQ71%qD!XDe"hT*q,?OkJa-)J///&e$aYBqL%IDN+g84CUk$qYAGUIO<q@DRWlA<JBf')R#EHI=A=jVVJg&JDB:i-tSNIS7\4VC@&7U%.'5Og.h:VuZ@T;at^8nJ/C^:o3R(0Y[)q%*a+du1gm(3i#)DjNA?n@&a^L!?%Vn%C0R&7VD^Kt@*Gm'gEY:<"'l:S>X'4KCo!iOWn6or0NLRN>?Iqhbn3a#98^#l#'$--3tm?T%igaL0WDa'RjN?DDU_5;=.=tqOl%#1Ql\V=6\KG9hH=210SCWW&ksd4?Pj43e5X*XA$aa35Jh%?g83bOVST"c;Z4MV(<#B^^fLbu8%@`/$JAu.SPV>h-hfH0"u!:.LDfYp4RG/euk_p5S<NHr@mic!.PQ#-jtFOS1m%FZI.3F7icBS_A_7s5@%:6mCdWHP?_Hj$A6(%,1e%fEGAi<*\f&LPD*S:d>i5Gf-P98\lgDZ"Ifh6aTpJ2"iJW"$Ksh:-9&uWG/,49Pf4uQDE[[R+MBtN;C'sP:Q682s?@7>Td2(=-g2u%&1*4MAC8,"ZJ&Z45ZruRK^ue-8nqNK)oV?jPgFYLljeo[6<i)"LJ-rKpPTsd7b&I?c>D:$g9EhQ'cH^e/8;"$YUQW_@CeHgDh+]Z%dC>V=N8\0K+qjI'O^s6A7QA6FS(f.,4<ppaeQQM-F(+Ej"@bh?B\SipJnjn/amKY@c9m%Kgd6U\etVSu4?GOW6c%<#ZT7,;<k.P1%%+(u]."Vd6$ZoH:kuG,,GKcUn&s)W[.'bop<E=+[K%Q@*7Zd,"%3&34-nF<14VH?+7PlFTD"m[m\[N6^iO`O00hg0>E6g;qVTG8G%mTGgf<3RtV_gBBu>S.%D,!!'8bhc$`S!16Pg`Ueb9?cjlh+1EuN]j]jk*d7WQoukLn8QG7_.2ZPhT%^t_J1bs4RSS`iV<juL:]b,%HRETGk_>I72AE:$iPIq0:mPXVJPdt/a%e3Y#@f\Za/nm*41C5&S2\OWUoM5j_C4P+Ir*XQIu>4n@B$5bn;cJ$o3D(?O*o-jc3fM:%n2mN1U7blS3Hf5q90Q<pC!V[-g=S[_2:6W=:K:WQ1H#I<UGU#_NHJFW'[;'F:@l;.XCN&Kgos];"3<c#=72HH)oU:5BC9*#l$,0U%r?V-dU1u"AR6@Pu2+Vpb++0<$a:5GAQmC1pB5UNk$*c_!&YA`L/18Q[?<F*&@FPbq5Z(al4%A>+BJ)ZnUE8rQA<][(A1;j>'Ugs4%8D^SrJ6FS*E3s+b0(3?AU__Gej`&o01$5LAMgNIpOC4qcle$/cM6/),`EZEhB[<';#1eBLpOC.ipW4I82[T*31"NL[;:Thu\Q<_0%Ar4rPJQe[br\\j)H-KaAMJ7n16d>"a"\GcrRjq-rR3GRmU`;'eAD4:4#sGO5P$`RVRNqud;(lY(WhrHs03r^T*"/e8iQakN^4(k(%:4fM0m[='['#\@nYc-8Co1>2qom:mVT0-AjU.DY$o1bra\5OJEpC*YXT&F.HicZ9Z<X:t?pt[a^=hkoW.7ZJ>h+#L9EO8#Q[rJZM%\T,Z3$W>p<C$h5N[\RG69\M;YWg#gbV(GU2X&N*eh(q,-%^1pI]9=S2pcE*&XG]I)JHaRi[3sL)I<W`u_:O;O`BDYYLhIpm\i31#%6p4MnBjhW:F@48.*M)k2n8QS5%_8/>.,HX))M9apB@!mU$3R&HbFV9m=!1,Ei$4ErH*X.Z(LWu(]1%9jbo.j9I7t"Wg3PY&[Y2Ue%RqQ[V>CM1#hY%6(SHL,K^?r#`Q2[?_@Q.)e-C_Y2e'LF@Wqd$`R=rOp@YW2EdC!5Ck4a+bA5@q+8@%2h<\9V#do4F`=a<I&-AlE5%/?Gkk@5u4^=OCK7h<B+LOCn*h<b@P3)&@Ib_eWgIaUK1-Bu7/(fN/[IIUET+<VZ1]-T:1MDYmi?8F_ELOc9EXbYB%n:`S#WWI#.Q%qA.R5O@\JDp`RL(?/_d/m?Ub$Y3ie&RNq*qo?9DMcKpc7AtOQcG)A)]4B#nF`?[V.L=sf%V*C*7'+N4>[),h8mZ>`Qm9kOg%:`rT%QmAWc0NJ1(8V5+;]$"^*1HNe7+oRg>o-*O<cdZZ`A..3\mar[?Q=(DET<9ZieB<Qu\1A\J`_$7c'4Q6He@!k&BnLoUgo7^"=-k`*%m\K/dF3!X6"^Os['+!$4l]0ZI$_g12a6[XG;(9"bqBCOtpNdNrV/SdEC3&R!\`"2J1k*J]kTrt$gbT^!?!j)Vqu\H8*IZq6Bgr$T%*Rjofe@sV%EPoAp\H0lpb@k_Y.-7e[7"+J??_JlR;duelOl%@jA1eR=?g1\D4eu7?T(U1>>'6t#0l4H^1K7Xqp5Ihm@mc1uZq$F)%^IYEE,IX*IX1F"4c)007YqC&MH`!cXW']fd+mE+WNMP8[Xc$f6*E0kPF^5;#l\BS6o@=<_Jjs9lbM9Y+`&@?\n"cS=55;o1St*R>%1OU`9BR"R<k#3>#@k7WA$hB)\"(7'_m[5\],>1Wtl(uF^A(->'J`4^&dSYoJ2VGdhdHqf9T+8':2FVs\o3:RDGu<UKQWT2Z3`U:s%i`1)E_q7lUqG/$5gbV#.g-[?;[paG5M0VcR9]r"=WJ-)!-LPtCo)WA2F`*=:.6VJ=F3h.JXFh8XlJ_.">s$VIf"WAB9NsF<O'X(O%G/m]"$mpg)2iIq$@$7m=__h=P8V%CC16dmTgVqn3Cu]i^ls-o0/EN2f<Y?m+Nq8k4>VLn%pPehJ`n9Lljp+,bQ#n-W]VJ%E.BR(]%);[D.7Pbk#a<g3B@1ZcV?/pH^B'0@fppS93,\hjJa4q28Y5,qtF:j]+;ceXGQO4VjEI1a*<=Uo"2-4<S3gQnG,HH"@St4<[pbL!i%4P5\I\OAQM/ZbuAIFdcOKeWTH/Ef^n=O@l9L/1hBqE;/43cnBE%<HFnBdY@d14.u<5Lu4tA*mOaO*/ZGm]48,dV40]4j+fLk@'PI%)l-9p4IjRmL?Xmd&#X*e!T[BX,MidInCX=P*ecb,b*%cD510fS-<'Ti>4gD>aJSp@@q]#IgAHb9%u&6gm"=AT/aSQ'j^SrI$i5n"%L/43gPcS<HE'CQQ:"@;aV1.b8M3-;u7TQ)#7tf^E;951@ghdmT,E,hC8+rN#l)cre7:]9QN\Mn$/-V;6T?Q;?mTb\5m?l^&HMHY\%hrVBIXJBjJ*LfhRc%+RR"_l;;cV!20$Q9>/r_01IDNVPj0&:G/6f-WiKlfO0QksehoEcZGZ8(`Xa7P35YpuYtb7<d;Qt&s2K!Dd\%5PaU/a/@tnQe27do5m1rjU(A?6<X04\FNia;h"t?=h]=\lD[#JbJ-7@ks(eho&CC@Gn4Ybngm-5qQ#UZrpA2-O\"`*4)hLea?DBK%j)UqMJ)h0*Bk@,#P:]:bH3%'+lB0*aO[p)F?It4-CcN-b_0V]rOiI<]UD8?/69K:ojiGT)5lO;arl>LX6_,Cs\r?G05Pg+('>o=`%%J_55reB3jT6Na&aH+(ZGN:..O?`<rDo`spM)XLVr:h4O7t0G,\Ke:Rn`R[^niZsIo%+tTs6]Y*J,\aE0/$\Gs8'@jT?=q*IJ`Ts%qlaB+.fXtp_fm4%VZ6YiVl01b]*f_,J,9#@nB:aMYBR^phEQFjnB#JEq#@j-r/>ic53''AB=q:@N7Y)%nQP<9?E8RqCRpsRs3G'=%F,p4jdt<-&SA5#`V`2Bc1B5t0hLGLYGCOu8n?\`M]m94)GMg(2n\`!=q;7ML:Z$R"ma!Q4n(thZmY?!N]_p[[?_5%.nFHO#rKl^9%s80FCJ6]#9iG[TNlM&&BqE(eJjpM~>%AI9_PrivateDataEnd