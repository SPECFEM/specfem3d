#!/bin/sh

# Attempt to guess suitable flags for the Fortran compiler.

# Use AC_CANONICAL_BUILD (and package config.guess, etc.) in the future?
if test x"$UNAME_MS" = x; then
    UNAME_MACHINE=`(uname -m) 2>/dev/null` || UNAME_MACHINE=unknown
    UNAME_SYSTEM=`(uname -s) 2>/dev/null`  || UNAME_SYSTEM=unknown
    UNAME_MS="${UNAME_MACHINE}:${UNAME_SYSTEM}"
fi

case $FC in
    pgf90|*/pgf90)
        #
        # Portland pgf90
        #
        if test x"$FLAGS_CHECK" = x; then
            FLAGS_CHECK="-fast -Mnobounds -Mneginfo -Mdclchk -Knoieee" # -mcmodel=medium
        fi
        if test x"$FLAGS_NO_CHECK" = x; then
            FLAGS_NO_CHECK="-fast -Mnobounds -Mneginfo -Mdclchk -Knoieee -Ktrap=none -Minline" # -mcmodel=medium
        fi
        ;;
    ifort|*/ifort)
        #
        # Intel ifort Fortran90
        #
        if test x"$FLAGS_CHECK" = x; then
            FLAGS_CHECK="-O3 -assume byterecl -traceback -ftrapuv -ftz"
            
            # for debugging: change -check nobounds to -check all and add -debug -g -O0 -fp-stack-check -traceback -ftrapuv

            # ifort version 11 or 10.1 with these flags shows good performance
            #FLAGS_CHECK="-O3 -ftz -xS -fpe0 -traceback -ftrapuv -vec-report0 -std95 -implicitnone -check nobounds -assume byterecl -static-intel -warn truncated_source -warn argument_checking -warn unused -warn declarations -warn alignments -warn ignore_loc -warn usage "
            #FLAGS_CHECK="-O3 -xS -static-intel -r8 -mcmodel=large -implicitnone -warn truncated_source -warn argument_checking -warn unused -warn declarations -check nobounds -align sequence -assume byterecl -ftrapuv -fpe0 -ftz -traceback"
        fi
        if test x"$FLAGS_NO_CHECK" = x; then
        # standard options (leave option -ftz, which is *critical* for performance)
        # add -Winline to get information about routines that are inlined
        # add -vec-report3 to get information about loops that are vectorized or not
            FLAGS_NO_CHECK="-O3 -assume byterecl -check nobounds -ftz"

        fi
        ;;
    gfortran|*/gfortran|f95|*/f95)
        #
        # GNU gfortran
        #
        if test x"$FLAGS_NO_CHECK" = x; then
            # works with: GNU Fortran (GCC) 4.1.2 20080704        
            FLAGS_NO_CHECK="-std=gnu -fimplicit-none -frange-check -O2 -pedantic -pedantic-errors -Waliasing -Wampersand -Wline-truncation -Wsurprising -Wunderflow"

        #            FLAGS_NO_CHECK="-std=f95 -fimplicit-none -frange-check -O2 -fmax-errors=10 -pedantic -pedantic-errors -Waliasing -Wampersand -Wcharacter-truncation -Wline-truncation -Wsurprising -Wno-tabs -Wunderflow" # -mcmodel=medium
        # older gfortran syntax
        #           FLAGS_NO_CHECK="-std=f95 -fimplicit-none -frange-check -O2 -Wunused-labels -Waliasing -Wampersand -Wsurprising -Wline-truncation -Wunderflow" # -mcmodel=medium
        fi
        if test x"$FLAGS_CHECK" = x; then
            FLAGS_CHECK="\$(FLAGS_NO_CHECK)" # -fbounds-check
        fi
        ;;
    g95|*/g95)
        #
        # g95 (free f95 compiler from http://www.g95.org)
        #
        if test x"$FLAGS_CHECK" = x; then
            FLAGS_CHECK="-O"
        fi
        if test x"$FLAGS_NO_CHECK" = x; then
            FLAGS_NO_CHECK="-O"
        fi
        ;;
    f90|*/f90)
        case $UNAME_MS in
            i*86:Linux | x86_64:Linux)
                ################ PC Linux #################
                #
                # AbSoft
                #
                if test x"$FLAGS_CHECK" = x; then
                    FLAGS_CHECK="-W132 -s -O3 -cpu:p7 -v -YDEALLOC=ALL"
                fi
                if test x"$FLAGS_NO_CHECK" = x; then
                    FLAGS_NO_CHECK="\$(FLAGS_CHECK)"
                fi
                ;;
            *:IRIX*)
                ################ SGI Irix #################
                if test x"$MPIFC" = x; then
                    MPIFC=$FC
                    if test x"$MPILIBS" = x; then
                        MPILIBS="-lmpi -lfastm -lfpe"
                    fi
                fi
                if test x"$FLAGS_CHECK" = x; then
                    FLAGS_CHECK="\$(FLAGS_NO_CHECK) -check_bounds"
                fi
                if test x"$FLAGS_NO_CHECK" = x; then
                    FLAGS_NO_CHECK="-ansi -u -64 -O3 -OPT:Olimit=0 -OPT:roundoff=3 -OPT:IEEE_arithmetic=3 -r10000 -mips4"
                fi
                ;;
            SX-*:SUPER-UX | ES:ESOS)
                ################## NEC SX ##################
                if test x"$MPIFC" = x; then
                    MPIFC=$FC
                fi
                if test x"$FLAGS_CHECK" = x; then
                    FLAGS_CHECK="-C hopt -R2 -Wf\" -L nostdout noinclist mrgmsg noeject -msg b -pvctl loopcnt=14000000 expand=10 fullmsg vecthreshold=20 -s\" -pi auto line=100 exp=swap_all,rank"
                fi
                if test x"$FLAGS_NO_CHECK" = x; then
                    FLAGS_NO_CHECK="\$(FLAGS_CHECK)"
                fi
                ;;
        esac
        ;;
    lf95|*/lf95)
        #
        # Lahey f90
        #
        if test x"$FLAGS_CHECK" = x; then
            FLAGS_CHECK="--warn --wo --tpp --f95 --dal -O --chk"
        fi
        if test x"$FLAGS_NO_CHECK" = x; then
            FLAGS_NO_CHECK="--warn --wo --tpp --f95 --dal -O"
        fi
        ;;
    ######## IBM ######
    mpxlf*|*/mpxlf*)
        if test x"$MPIFC" = x; then
            MPIFC=$FC
        fi
        ;;
    *xlf*|*/*xlf*)
        #
        # do NOT remove option -qsave otherwise the IBM compiler allocates the
        # arrays in the stack and the code crashes if the stack size is too
        # small (which is often the case)
        #
        # on IBM with xlf one should also set
        #
        # CC = xlc_r
        # CFLAGS = -O3 -q64
        #
        # or
        #
        # CC = gcc
        # CFLAGS = -O3 -m64
        #
        # for the C compiler when using -q64 for the Fortran compiler
        #
        if test x"$FLAGS_NO_CHECK" = x; then
# deleted -qxflag=dvz because it requires handler function __xl_dzx and thus linking will fail
            #FLAGS_NO_CHECK="-O3 -qsave -qstrict -q64 -qtune=auto -qarch=auto -qcache=auto -qfree=f90 -qsuffix=f=f90 -qhalt=w -qlanglvl=2003pure -qxlf2003=nooldnaninf -qflttrap=overflow:zerodivide:invalid:enable -qfloat=nans -qinitauto=7FBFFFFF -Q -Q+rank,swap_all"
            FLAGS_NO_CHECK="-O3 -qsave -qstrict -q64 -qtune=auto -qarch=auto -qcache=auto -qfree=f90 -qsuffix=f=f90 -qhalt=w -qlanglvl=95pure -qflttrap=overflow:zerodivide:invalid:enable -qfloat=nans -qinitauto=7FBFFFFF -Q -Q+rank,swap_all"
        #
        # to debug with IBM xlf, add this: -g -O0 -C -qddim -qfullpath
        #
        # on MareNostrum at the Barcelona SuperComputing Center (Spain) one can use
        # -qtune=ppc970 -qarch=ppc64v instead of -qtune=auto -qarch=auto
        fi
        if test x"$FLAGS_CHECK" = x; then
            FLAGS_CHECK="\$(FLAGS_NO_CHECK) -g -C -qddim -qfullpath"
        fi
        ;;
esac

case $UNAME_MS in
    *:IRIX*)
        ################ SGI Irix #################
        ##
        ##  CAUTION: always define setenv TRAP_FPE OFF on SGI before compiling
        ##
        FCENV="TRAP_FPE=OFF"
        ;;
esac

echo MPIFC=\"$MPIFC\" | sed 's/\$/\\\$/g'
echo MPILIBS=\"$MPILIBS\" | sed 's/\$/\\\$/g'
echo FLAGS_CHECK=\"$FLAGS_CHECK\" | sed 's/\$/\\\$/g'
echo FLAGS_NO_CHECK=\"$FLAGS_NO_CHECK\" | sed 's/\$/\\\$/g'
echo FCENV=\"$FCENV\" | sed 's/\$/\\\$/g'

# end of file
