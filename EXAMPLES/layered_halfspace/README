----------------------------------------------------------------------
README
----------------------------------------------------------------------


step-by-step tutorial:

1. create mesh:

   - run cubit GUI:
     > claro
     
     then run meshing script: 
     claro -> Menu "Tools" -> "Play Journal File" ... and select file: "2lay_mesh_boundary_fig8.py"
    
     (or select: "2lay_mesh_boundary_fig8-nodoubling.py" for regular mesh without doubling layer)
    
     this creates all the mesh files in subdirectory MESH/
     

  - optional:
        if you want to check mesh quality (element skewdness, stability criteria) 
        using check_mesh_quality_CUBIT_Abaqus/check_mesh_quality_CUBIT_Abaqus.f90, 
        then Export to Abacus (*.inp) file: 
        claro -> Menu "File" -> "Export..." and select Abaqus (*.inp)
        
        e.g. export as "layered_halfspace_mesh.inp"
        
        note: only output blocks for volumes, i.e. block ids 1,2,3 for this example here,
              not for faces
        
        save number of nodes and number of elements and edit in header of
        check_mesh_quality_CUBIT_Abaqus.f90: 
        
            character(len=100), parameter :: cubit_mesh_file = 'layered_halfspace_mesh.inp'
            integer, parameter :: NPOIN = 44436                   ! number of nodes
            integer, parameter :: NSPEC = 40500                   ! number of elements (only volumes, i.e. block ids 1,2,3 )
            integer, parameter :: NGNOD = 8                        ! hexahedral elements
            logical, parameter :: IGNORE_OTHER_HEADERS = .false.
            double precision, parameter :: delta_t = 0.005         ! arbitrary, initial guess
            double precision, parameter :: VP_MAX = 7500.d0        ! maximum vp in volume block id 3 
        

2. decompose mesh files:

    - run decomposer in directory decompose_mesh_SCOTCH/:
      (example assumes 4 partitions with mesh files in OUTPUT_FILES/)
      
      > make
      > ./xdecompose_mesh_SCOTCH 4 ../EXAMPLES/layered_halfspace/MESH/ ../DATABASES_MPI/ 
            
      which creates mesh partitions "proc0000***_Database" in directory "DATABASES_MPI".
      you can then specify "DATABASES_MPI" in "Par_file" for your "LOCAL_PATH"  


3. generate databases:

    - copy Par_file, CMTSOLUTION & STATIONS files provided in this examples directory to DATA/ directory in 
      the SPECFEM3D_SESAME root directory

    - compile generate_databases:    
      > make xgenerate_databases
     
    - submit job script:
      > qsub go_generate_databases_pbs.bash

    (note: if execution fails due to memory shortage - most likely fails when calling routine to 
           create regional mesh - then try to increase process memory stack size: ulimit -s 2000000  (2GB) )

      
4. run simulation:

    - compile specfem3D:
      > make xspecfem3D
      
    - submit job script:
      > qsub go_solver_pbs.bash



    
    