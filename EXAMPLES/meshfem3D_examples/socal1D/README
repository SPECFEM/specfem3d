----------------------------------------------------------------------
README
(/SPECFEM3D/examples/meshfem3D_examples/socal1D/README)
----------------------------------------------------------------------

This is an example of using the internal mesher meshfem3D for a 1D layered model.
The 1D model is the standard model used in southern California:
   Kanamori and Hadley (1975), Dreger and Helmberger (1990), Wald-Hutton,Given (1995)

Figures for comparison:
  socal1D_koma2004.png  -- 1D model meshed in SPECFEM3D_BASIN (Komatitsch et al. 2004)
  socal1D.png    -- 1D model meshed here

The resolution is similar to the the "2 s" accuracy mesh of Komatitsch et al. 2004 (DT = 0.011 s).
It is the same size region as one slice (out of 168) of model m16 of Tape et al. (2009).

Option 1: type
  > run_this_example.sh 
  from this local directory (must have access to mpi)

Option 2: follow detailed instructions below for submitting separate jobs with slurm


Note on 1D models:
------------------
Different 1D models can be chosen by setting the parameter MODEL in the Par_file. Currently, the 
following 1D models are available:
* 1D isotropic PREM (1d_prem)
* 1D Southern California (1d_socal)
* 1D Cascadia (1d_cascadia)

The only difference in the settings occur in specifying the model in Par_file:
..
MODEL    = default  # or instead 1d_socal, 1d_prem, 1d_cascadia
..

Q values for these models are all unknown, and thus mostly rely on PREM crust values as a first guess.

Using the setting `MODEL = default` in Par_file, will take the material definitions provided in Mesh_Par_file and are
thus fixed to the mesh geometry. Choosing instead one of the 1D model options, e.g., `MODEL = 1d_socal`, will overimpose
the corresponding 1D material properties and thus can be used with different meshes and mesh resolutions.

Reference seismograms for comparison are in directories: REF_SEIS.default, REF_SEIS.1d_socal, REF_SEIS.1d_prem, ..

----------------------------------------------------------------------

More detailed instructions:

The setup here explains how to run simulations on a cluster through a job scheduler. Instead of running the example in its EXAMPLES/ folder,
it copies the files to the corresponding main root folder SPECFEM3D/ to avoid changing the working directory for different example runs.


0. Run the default homogeneous halfspace example (./SPECFEM3D/EXAMPLES/homogeneous_halfspace/README)

1. set up input files:

   > cd SPECFEM3D
   > rsync -av EXAMPLES/meshfem3D_examples/socal1D/DATA/ DATA

   - adapt the submission scripts for the appropriate queues and number of cores:
     go_mesher_slurm.bash, go_generate_databases_slurm.bash, go_solver_slurm.bash

   - note: go_decomposer_slurm.bash is not used with the internal mesher

2. compile and run internal mesher

    > sbatch go_mesher_slurm.bash

    - this should generate these files in OUTPUT_FILES/DATABASES_MPI/:

    proc000000_Database
    proc000000_.dx
    proc000000_.INP
    ..

3. generate databases:

   - compile and run generate_databases in directory SPECFEM3D/:
     > sbatch go_generate_databases_slurm.bash

     this will create binary mesh files, e.g. "proc000***_external_mesh.bin"
     in directory OUTPUT_FILES/DATABASES_MPI/.

     optional: If you have paraview, load the .vtk files (see socal1D.png).

4. run simulation:

   - compile and run specfem3D:
     > sbatch go_solver_slurm.bash

   - the job should take about 2 minutes
   - when the job is complete, you should have 3 sets (semd,semv,sema)
     of 84 (ls -1 OUTPUT_FILES/*semd | wc) seismogram files in the directory OUTPUT_FILES,
     as well as 10 timestamp****** files

   - view seismograms, for example, using xmgrace:
     > xmgrace OUTPUT_FILES/*WTT*.semd &

   - compare with reference seismograms, e.g.:
     > xmgrace OUTPUT_FILES/CI.WTT.HXZ.semd EXAMPLES/meshfem3D_examples/socal1D/REF_SEIS/CI.WTT.HXZ.semd &

----------------------------------------------------------------------

To use the same 1D model but covering a larger region using 168 cores, follow these steps.

1. modify Mesh_Par_file:

  > cd DATA/meshfem3D_files
  > cp Mesh_Par_file_168 Mesh_Par_file

2. modify Par_file:

  - open Par_file and modify NPROC: NPROC = 1 --> NPROC = 168

   - adapt the submission scripts for the appropriate queues and number of cores:
     go_mesher_slurm.bash, go_generate_databases_slurm.bash, go_solver_slurm.bash

3. Follow steps 2-4 above.

   - slice 62 (out of 0-167) corresponds to the 1-slice example above and should contain the source.
   - simulation should take about 1 minute.
   - seismograms will not exactly match those in REF_SEIS, since the simulation volume is different.

----------------------------------------------------------------------

To run the same simulation but using 42 cores, follow these steps.

1. modify Mesh_Par_file:

  > cd DATA/meshfem3D_files
  > cp Mesh_Par_file_042 Mesh_Par_file

2. modify Par_file:

  - open Par_file and modify NPROC: NPROC = 168 --> NPROC = 42

   - adapt the submission scripts for the appropriate queues and number of cores:
     go_mesher_slurm.bash, go_generate_databases_slurm.bash, go_solver_slurm.bash

3. Follow steps 2-4 above.

   - slice 17 (out of 0-41) should contain the source.
   - simulation should take about 5 minutes.
   - seismograms will not exactly match those in REF_SEIS, since the simulation volume is different.

---------------------------------------------------------------------
